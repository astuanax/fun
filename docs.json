[
    {
        "comment": "/**\n * Adds a specified index to iterate a collection\n *\n * @function addIndex\n * @summary Adds a specified index to iterate a collection\n * @param {Function} f Iterator function\n * @param {Function} g Function to which to add the index\n * @param {Array} a The array on which to work\n * @return {Array}\n * @since 1.0.2\n * @example\n *\n * const array = [1, 2, 3, 4]\n * addIndex(map, (v, i) => v + i, array) // [1, 3, 5, 7]\n *\n */",
        "meta": {
            "filename": "addIndex.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Adds a specified index to iterate a collection",
        "kind": "function",
        "name": "addIndex",
        "summary": "Adds a specified index to iterate a collection",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Iterator function",
                "name": "f"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Function to which to add the index",
                "name": "g"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The array on which to work",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "since": "1.0.2",
        "examples": [
            "const array = [1, 2, 3, 4]\naddIndex(map, (v, i) => v + i, array) // [1, 3, 5, 7]"
        ],
        "longname": "addIndex",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                457,
                593
            ],
            "filename": "addIndex.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000006",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                514,
                519
            ],
            "filename": "addIndex.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000016",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Modifies an item in an array using the provided function\n *\n * @function adjust\n * @description Modifies an item in an array using the provided function\n * @since v1.0.2\n * @param {Function} fn - to modify the item at the specified index\n * @param {Number} i - The index at which to modify the array, accepts postitive and negative indexes\n * @param {Array} a - Array with data\n * @return {Array} Array with the adjusted item\n * @example\n *\n * adjust(add(1), -3, [0, 1, 2, 3]) // [0, 2, 2, 3]\n *\n * const addTen = add(10)\n * adjust(addTen, 2, [2, 3, 4, 5, 6]) // [2, 3, 14, 5, 6]\n *\n **/",
        "meta": {
            "filename": "adjust.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Modifies an item in an array using the provided function",
        "kind": "function",
        "name": "adjust",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "to modify the item at the specified index",
                "name": "fn"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "The index at which to modify the array, accepts postitive and negative indexes",
                "name": "i"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array with data",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array with the adjusted item"
            }
        ],
        "examples": [
            "adjust(add(1), -3, [0, 1, 2, 3]) // [0, 2, 2, 3]\n\nconst addTen = add(10)\nadjust(addTen, 2, [2, 3, 4, 5, 6]) // [2, 3, 14, 5, 6]"
        ],
        "longname": "adjust",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                624,
                814
            ],
            "filename": "adjust.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000038",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                682,
                715
            ],
            "filename": "adjust.js",
            "lineno": 22,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000048",
                "name": "r",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                724,
                754
            ],
            "filename": "adjust.js",
            "lineno": 23,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000060",
                "name": "idx",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "idx",
        "longname": "<anonymous>~idx",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                781,
                800
            ],
            "filename": "adjust.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000080",
                "name": "r[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "/**\n * Modifies an item in an array using the provided function\n *\n * @function adjustWith\n * @description Modifies an item in an array using the provided function\n * @since v1.0.2\n * @sig (a -> a) -> ((a -> [a]) -> [a] -> num) -> [a] -> [a]\n * @param {Function} fn - to modify the item at the specified index\n * @param {Function} pred - The predicate that returns the indexes if found\n * @param {Iterable} [a]\n * @return {Iterable} [a]\n **/",
        "meta": {
            "filename": "adjustWith.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Modifies an item in an array using the provided function",
        "kind": "function",
        "name": "adjustWith",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(a -> a) -> ((a -> [a]) -> [a] -> num) -> [a] -> [a]",
                "value": "(a -> a) -> ((a -> [a]) -> [a] -> num) -> [a] -> [a]"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "to modify the item at the specified index",
                "name": "fn"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The predicate that returns the indexes if found",
                "name": "pred"
            },
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "optional": true,
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "description": "[a]"
            }
        ],
        "longname": "adjustWith",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                495,
                685
            ],
            "filename": "adjustWith.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000101",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                560,
                633
            ],
            "filename": "adjustWith.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000111",
                "name": "_fn",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "_fn",
        "longname": "<anonymous>~_fn",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Returns true if all items in the enumerable match the predicate\n *\n * @function all\n * @description Returns true if all items in the enumerable match the predicate\n * @since v1.0.2\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} cb\n * @param {Iterable} a\n * @return {Boolean}\n **/",
        "meta": {
            "filename": "all.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns true if all items in the enumerable match the predicate",
        "kind": "function",
        "name": "all",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(a -> Boolean) -> [a] -> Boolean",
                "value": "(a -> Boolean) -> [a] -> Boolean"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "longname": "all",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                331,
                489
            ],
            "filename": "all.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000146",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                381,
                391
            ],
            "filename": "all.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000155",
                "name": "res",
                "type": "Literal",
                "value": true
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                403,
                404
            ],
            "filename": "all.js",
            "lineno": 16,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000160",
                "name": "i"
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                440,
                451
            ],
            "filename": "all.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000173",
                "name": "res",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": false,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Applies a list of predicates to the data and returns true if all pass\n *\n * @function allPass\n * @description Applies a list of predicates to the data and returns true if all pass\n * @since v1.0.2\n * @sig [(*... -> Boolean)] -> (*... -> Boolean\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n **/",
        "meta": {
            "filename": "allPass.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Applies a list of predicates to the data and returns true if all pass",
        "kind": "function",
        "name": "allPass",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "[(*... -> Boolean)] -> (*... -> Boolean",
                "value": "[(*... -> Boolean)] -> (*... -> Boolean"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "An array of predicates to check",
                "name": "predicates"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The combined predicate"
            }
        ],
        "longname": "allPass",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                392,
                535
            ],
            "filename": "allPass.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000185",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                452,
                457
            ],
            "filename": "allPass.js",
            "lineno": 14,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000195",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Returns a function with the initial value provided\n *\n * @function always\n * @description Returns a function with the initial value provided\n * @since v1.0.2\n * @sig a -> (* -> a)\n * @param {*} a\n * @return {Function}\n **/",
        "meta": {
            "filename": "always.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns a function with the initial value provided",
        "kind": "function",
        "name": "always",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "a -> (* -> a)",
                "value": "a -> (* -> a)"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "always",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                259,
                338
            ],
            "filename": "always.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000223",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Checks if both predicates are true\n *\n * @function and\n * @description Checks if both predicates are true\n * @since v1.0.2\n * @sig (x, y) -> boolean\n * @param {*} x - A predicate\n * @param {*} y - A predicate\n * @return {boolean}\n **/",
        "meta": {
            "filename": "and.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Checks if both predicates are true",
        "kind": "function",
        "name": "and",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(x, y) -> boolean",
                "value": "(x, y) -> boolean"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "A predicate",
                "name": "x"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "A predicate",
                "name": "y"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "and",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                271,
                332
            ],
            "filename": "and.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000241",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns true if at least on of the items in the enumerable match the predicate\n *\n * @function any\n * @description Returns true if at least on of the items in the enumerable match the predicate\n * @since v1.0.2\n * @sig (TODO)\n * @param {Function} cb\n * @param {Iterable} a\n * @return {Boolean}\n **/",
        "meta": {
            "filename": "any.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns true if at least on of the items in the enumerable match the predicate",
        "kind": "function",
        "name": "any",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(TODO)",
                "value": "(TODO)"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "longname": "any",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                335,
                492
            ],
            "filename": "any.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000259",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                385,
                396
            ],
            "filename": "any.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000268",
                "name": "res",
                "type": "Literal",
                "value": false
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                408,
                409
            ],
            "filename": "any.js",
            "lineno": 16,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000273",
                "name": "i"
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                444,
                454
            ],
            "filename": "any.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000285",
                "name": "res",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Applies a list of predicates to the data and returns true if one passes\n *\n * @function anyPass\n * @since v1.0.2\n * @sig [(*... -> Boolean)] -> (*...) -> Boolean\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n **/",
        "meta": {
            "filename": "anyPass.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Applies a list of predicates to the data and returns true if one passes",
        "kind": "function",
        "name": "anyPass",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "[(*... -> Boolean)] -> (*...) -> Boolean",
                "value": "[(*... -> Boolean)] -> (*...) -> Boolean"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "An array of predicates to check",
                "name": "predicates"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "The combined predicate"
            }
        ],
        "longname": "anyPass",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                309,
                451
            ],
            "filename": "anyPass.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000297",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                369,
                374
            ],
            "filename": "anyPass.js",
            "lineno": 13,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000307",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Applies a list of functions to a list of values and returns a combined result array\n *\n * @function ap\n * @description Applies a list of functions to a list of values and returns a combined result array\n * @since v1.0.2\n * @sig @sig [a -> b] -> [a] -> [b]\n * @param {(Function[]|Function|Applicative)} fns - An array of functions or a function or an applicative\n * @param {Array} vals - An array of values\n * @return {Iterable} [a]\n **/",
        "meta": {
            "filename": "ap.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Applies a list of functions to a list of values and returns a combined result array",
        "kind": "function",
        "name": "ap",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "@sig [a -> b] -> [a] -> [b]",
                "value": "@sig [a -> b] -> [a] -> [b]"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<function()>",
                        "function",
                        "Applicative"
                    ]
                },
                "description": "An array of functions or a function or an applicative",
                "name": "fns"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "An array of values",
                "name": "vals"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "description": "[a]"
            }
        ],
        "longname": "ap",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                602,
                629
            ],
            "filename": "ap.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000351",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                631,
                866
            ],
            "filename": "ap.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000356",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function aperture\n * @param n\n * @param arr\n * @returns {*}\n */",
        "meta": {
            "filename": "aperture.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "aperture",
        "params": [
            {
                "name": "n"
            },
            {
                "name": "arr"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "aperture",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                125,
                309
            ],
            "filename": "aperture.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000420",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                221,
                250
            ],
            "filename": "aperture.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000438",
                "name": "res",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function append\n * @description Append an elment to a list\n * @param {*} el - Element to add to a list\n * @param {array} list - List to which to add the element\n * @return {array}\n * @example\n *\n * const l = [0, 1]\n * append('a', l) // reutnr [0, 1, 'a']\n *\n **/",
        "meta": {
            "filename": "append.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "append",
        "description": "Append an elment to a list",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Element to add to a list",
                "name": "el"
            },
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "description": "List to which to add the element",
                "name": "list"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "examples": [
            "const l = [0, 1]\nappend('a', l) // reutnr [0, 1, 'a']"
        ],
        "longname": "append",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                330,
                412
            ],
            "filename": "append.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000474",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function apply\n * @description The apply() method calls a function with the given arguments provided as an array, and the function as context.\n * @param fn\n * @param args\n * @return {*}\n * @example\n *\n * var a = apply(function () {\n *      return [].slice.call(arguments).map(x => x * 2)\n *   })\n * a([1, 2, 3])\n * // [2, 4, 6]\n */",
        "meta": {
            "filename": "apply.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "apply",
        "description": "The apply() method calls a function with the given arguments provided as an array, and the function as context.",
        "params": [
            {
                "name": "fn"
            },
            {
                "name": "args"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "examples": [
            "var a = apply(function () {\n     return [].slice.call(arguments).map(x => x * 2)\n  })\na([1, 2, 3])\n// [2, 4, 6]"
        ],
        "longname": "apply",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                369,
                448
            ],
            "filename": "apply.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000494",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function arrayConcat\n * @desc Autocurried concatenation function using native concat\n * @param {Array} a1 - Left side of the concatenation\n * @param {Array} a2 - Right side of the concatenation\n * @returns {T[]}\n * @example\n *\n * const startsWithZero = concat([0])\n *const OneTwoThree = startsWithZero([1, 2, 3])\n * // [0, 1, 2, 3]\n */",
        "meta": {
            "filename": "concat.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "arrayConcat",
        "description": "Autocurried concatenation function using native concat",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Left side of the concatenation",
                "name": "a1"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Right side of the concatenation",
                "name": "a2"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<T>"
                    ]
                }
            }
        ],
        "examples": [
            "const startsWithZero = concat([0])\nconst OneTwoThree = startsWithZero([1, 2, 3])\n// [0, 1, 2, 3]"
        ],
        "longname": "arrayConcat",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                374,
                460
            ],
            "filename": "concat.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000515",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function equalsArray\n * @description Autocurried function for deep comparison of arrays\n * @param {a} x - Object to compare of type a\n * @param {a} y - Object x to compare with object x\n * @return {boolean}\n */",
        "meta": {
            "filename": "equals.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "equalsArray",
        "description": "Autocurried function for deep comparison of arrays",
        "params": [
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "Object to compare of type a",
                "name": "x"
            },
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "Object x to compare with object x",
                "name": "y"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "equalsArray",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                305,
                513
            ],
            "filename": "equals.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000546",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                419,
                424
            ],
            "filename": "equals.js",
            "lineno": 16,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000567",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function arrayFilter\n * @desc Autocurried function to filter an array\n * @param {Function} fn - Predicate function\n * @param {Array} a - Array to filter\n * @returns {Array}\n *\n */",
        "meta": {
            "filename": "filter.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "arrayFilter",
        "description": "Autocurried function to filter an array",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Predicate function",
                "name": "fn"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to filter",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "longname": "arrayFilter",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                218,
                370
            ],
            "filename": "filter.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000599",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                276,
                282
            ],
            "filename": "filter.js",
            "lineno": 12,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000608",
                "name": "r",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                294,
                299
            ],
            "filename": "filter.js",
            "lineno": 13,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000613",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function fold\n * @description Autocurried function which returns a single item by mapping over the provided array and calls an iterator function\n * @param {cbFunction} cb - Callback function to modify the item\n * @param {*} init - Initial value\n * @param {Array} a - Array with items to modify by the cb function\n * @returns {Array}\n * @see reduce\n * @since 1.0.2\n * @example\n *\n * const result = fold(add, 0, [1,1,1])\n * // result = 3\n */",
        "meta": {
            "filename": "fold.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "fold",
        "description": "Autocurried function which returns a single item by mapping over the provided array and calls an iterator function",
        "params": [
            {
                "type": {
                    "names": [
                        "cbFunction"
                    ]
                },
                "description": "Callback function to modify the item",
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Initial value",
                "name": "init"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array with items to modify by the cb function",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "see": [
            "reduce"
        ],
        "since": "1.0.2",
        "examples": [
            "const result = fold(add, 0, [1,1,1])\n// result = 3"
        ],
        "longname": "fold",
        "scope": "global"
    },
    {
        "comment": "/**\n * @callback cbFunction\n * @param {*} r - Accumulator which accumulates the callback's return values\n * @param {*} item - the current element being processed\n * @param {number} index - the indey of the item being processed\n * @param {Array} a - The initial array\n * @return {*}\n */",
        "meta": {
            "filename": "fold.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "typedef",
        "name": "cbFunction",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Accumulator which accumulates the callback's return values",
                "name": "r"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "the current element being processed",
                "name": "item"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "the indey of the item being processed",
                "name": "index"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The initial array",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "cbFunction",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                765,
                928
            ],
            "filename": "fold.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000646",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                822,
                828
            ],
            "filename": "fold.js",
            "lineno": 27,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000656",
                "name": "i",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                837,
                849
            ],
            "filename": "fold.js",
            "lineno": 28,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000661",
                "name": "l",
                "type": "MemberExpression",
                "value": "a.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                856,
                864
            ],
            "filename": "fold.js",
            "lineno": 29,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000667",
                "name": "r",
                "type": "Identifier",
                "value": "init"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                889,
                910
            ],
            "filename": "fold.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000677",
                "name": "r",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function isArray\n * @description Function Checks if the provided object is an array\n * @param {*} Object to verifiy\n * @return {Boolean}\n * @since 1.0.2\n * @example\n *\n * const result = isArray([1,1,1])\n * // result = true\n */",
        "meta": {
            "filename": "is.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "isArray",
        "description": "Function Checks if the provided object is an array",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "to verifiy",
                "name": "Object"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "since": "1.0.2",
        "examples": [
            "const result = isArray([1,1,1])\n// result = true"
        ],
        "longname": "isArray",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                260,
                286
            ],
            "filename": "is.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000695",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function map\n * @description Maps over an array and applies a function\n * @param {Function} cb\n * @param {Iterable} a\n * @return {Iterable}\n * @since v1.0.2\n * @example\n *\n *  const result = map(identity, [0,2,3])\n *  // result = [0,2,3]\n *  const add2 = add(2)\n *  const result = map(add2, [0,2,3])\n *  // result = [2,4,5]\n **/",
        "meta": {
            "filename": "map.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "map",
        "description": "Maps over an array and applies a function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                }
            }
        ],
        "since": "v1.0.2",
        "examples": [
            "const result = map(identity, [0,2,3])\n // result = [0,2,3]\n const add2 = add(2)\n const result = map(add2, [0,2,3])\n // result = [2,4,5]"
        ],
        "longname": "map",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                367,
                533
            ],
            "filename": "map.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000705",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                417,
                423
            ],
            "filename": "map.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000714",
                "name": "i",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                432,
                444
            ],
            "filename": "map.js",
            "lineno": 20,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000719",
                "name": "l",
                "type": "MemberExpression",
                "value": "a.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                453,
                469
            ],
            "filename": "map.js",
            "lineno": 21,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000725",
                "name": "r",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                515
            ],
            "filename": "map.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000737",
                "name": "r[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function toArray\n * @description Converts the input to an array\n * @param {ArrayLike} x - Object to convert to an array\n * @return {Array}\n * @since 1.0.2\n * @example\n *\n * const result = toArray(\"string\")\n * // result = ['s','t','r','i','n','g']\n *\n * function () {\n *  const args = toArray(arguments)\n *  console.log(typeof args) // Array\n * }\n *\n **/",
        "meta": {
            "filename": "to.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "toArray",
        "description": "Converts the input to an array",
        "params": [
            {
                "type": {
                    "names": [
                        "ArrayLike"
                    ]
                },
                "description": "Object to convert to an array",
                "name": "x"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "since": "1.0.2",
        "examples": [
            "const result = toArray(\"string\")\n// result = ['s','t','r','i','n','g']\n\nfunction () {\n const args = toArray(arguments)\n console.log(typeof args) // Array\n}"
        ],
        "longname": "toArray",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                362,
                457
            ],
            "filename": "to.js",
            "lineno": 18,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000752",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                457
            ],
            "filename": "to.js",
            "lineno": 18,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000753",
                "name": "toArray",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "toArray",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @function unionArray\n * @description Merges 2 arrays\n * @param {Array} aL - Array to merge\n * @param {Array} aR - Array to merge\n * @return {Array}\n * @since 1.0.2\n * @example\n *\n * const result = unionArray([0,1,2], [3,4,5])\n * // result = [0.1.2.3.4.5]\n **/",
        "meta": {
            "filename": "union.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {}
        },
        "kind": "function",
        "name": "unionArray",
        "description": "Merges 2 arrays",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to merge",
                "name": "aL"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to merge",
                "name": "aR"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "since": "1.0.2",
        "examples": [
            "const result = unionArray([0,1,2], [3,4,5])\n// result = [0.1.2.3.4.5]"
        ],
        "longname": "unionArray",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                297,
                395
            ],
            "filename": "union.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/array",
            "code": {
                "id": "astnode100000781",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function binary\n * @param cb\n * @returns {function(*=, *=): *}\n */",
        "meta": {
            "filename": "binary.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "binary",
        "params": [
            {
                "name": "cb"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "binary",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                143,
                248
            ],
            "filename": "binary.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000811",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function bind\n * @description Bind a function to a context\n * @param {function }fn\n * @param {*} context\n * @returns {*}\n */",
        "meta": {
            "filename": "bind.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "bind",
        "description": "Bind a function to a context",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "fn"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "context"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "bind",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                162,
                241
            ],
            "filename": "bind.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000836",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Always returns a function with a False boolean\n *\n * @function F\n * @description Always returns a function with a False boolean\n * @since v1.0.2\n * @param {*} a\n * @return {Function}\n **/",
        "meta": {
            "filename": "F.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {}
        },
        "description": "Always returns a function with a False boolean",
        "kind": "function",
        "name": "F",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "F",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                227,
                255
            ],
            "filename": "F.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {
                "id": "astnode100000856",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Always returns a function with a False boolean\n *\n * @function T\n * @description Always returns a function with a False boolean\n * @since v1.0.2\n * @param {*} a\n * @return {Function}\n **/",
        "meta": {
            "filename": "T.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {}
        },
        "description": "Always returns a function with a False boolean",
        "kind": "function",
        "name": "T",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "T",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                227,
                254
            ],
            "filename": "T.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {
                "id": "astnode100000866",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                309,
                506
            ],
            "filename": "both.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {
                "id": "astnode100000888",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Curried function that verifies of the provided argument is a boolean\n *\n * @private\n * @function is\n * @description Curried function that verifies of the provided argument is a boolean\n * @since v1.0.2\n * @param {*} Item to verify\n * @return {boolean}\n **/",
        "meta": {
            "filename": "is.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {}
        },
        "description": "Curried function that verifies of the provided argument is a boolean",
        "access": "private",
        "kind": "function",
        "name": "is",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "to verify",
                "name": "Item"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "is",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                316
            ],
            "filename": "is.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/boolean",
            "code": {
                "id": "astnode100000932",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function call\n * @param fn\n * @returns {*}\n */",
        "meta": {
            "filename": "call.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "call",
        "params": [
            {
                "name": "fn"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "call",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                126,
                221
            ],
            "filename": "call.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000942",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function complement\n * @description Lifts a predicate function and returns the complement\n * @param {Function} A predicate function\n * @return {Function}\n * @see not\n * @see lift\n * @since v1.0.2\n * @example\n *\n * const isNotEmpty = complement(isEmpty)\n * isNotEmpty([]) // false\n * isNotEmpty({'a' : 1}) // true\n *\n * complement(Maybe.of(false)) // true\n * complement(Maybe.of(true)) // false\n */",
        "meta": {
            "filename": "complement.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "complement",
        "description": "Lifts a predicate function and returns the complement",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "predicate function",
                "name": "A"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "see": [
            "not",
            "lift"
        ],
        "since": "v1.0.2",
        "examples": [
            "const isNotEmpty = complement(isEmpty)\nisNotEmpty([]) // false\nisNotEmpty({'a' : 1}) // true\n\ncomplement(Maybe.of(false)) // true\ncomplement(Maybe.of(true)) // false"
        ],
        "longname": "complement",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                463,
                485
            ],
            "filename": "complement.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000974",
                "name": "complement",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "complement",
        "longname": "complement",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                486,
                511
            ],
            "filename": "complement.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000979",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function compose\n * @returns {function(): *}\n */",
        "meta": {
            "filename": "compose.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "compose",
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "compose",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                57,
                409
            ],
            "filename": "compose.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000983",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                72,
                409
            ],
            "filename": "compose.js",
            "lineno": 5,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000984",
                "name": "compose",
                "type": "FunctionDeclaration",
                "paramnames": []
            },
            "vars": {
                "fns": "compose~fns",
                "": null
            }
        },
        "undocumented": true,
        "name": "compose",
        "longname": "compose",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                100,
                143
            ],
            "filename": "compose.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100000988",
                "name": "fns",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fns",
        "longname": "compose~fns",
        "kind": "member",
        "memberof": "compose",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                185,
                211
            ],
            "filename": "compose.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001004",
                "name": "init",
                "type": "MemberExpression",
                "value": "fns[undefined]"
            }
        },
        "undocumented": true,
        "name": "init",
        "longname": "<anonymous>~init",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                220,
                258
            ],
            "filename": "compose.js",
            "lineno": 10,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001014",
                "name": "result",
                "type": "ArrayExpression",
                "value": "[\"\"]"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                267,
                285
            ],
            "filename": "compose.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001024",
                "name": "i",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                326,
                337
            ],
            "filename": "compose.js",
            "lineno": 14,
            "columnno": 12,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001040",
                "name": "fn",
                "type": "MemberExpression",
                "value": "fns[undefined]"
            }
        },
        "undocumented": true,
        "name": "fn",
        "longname": "<anonymous>~fn",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                345,
                376
            ],
            "filename": "compose.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001046",
                "name": "result",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Concatenates 2 items together\n *\n * @function concat\n * @description Concatenates 2 items together\n * @since v1.0.4\n * @param {a} a - Left side of the concatenation\n * @param {a} b - right side of the concatenation\n * @return {a} Concatenated item\n **/",
        "meta": {
            "filename": "concat.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Concatenates 2 items together",
        "kind": "function",
        "name": "concat",
        "since": "v1.0.4",
        "params": [
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "Left side of the concatenation",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "right side of the concatenation",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "Concatenated item"
            }
        ],
        "longname": "concat",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                400,
                557
            ],
            "filename": "concat.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001078",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                454,
                522
            ],
            "filename": "concat.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001087",
                "name": "typeMap",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "typeMap",
        "longname": "<anonymous>~typeMap",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                470,
                492
            ],
            "filename": "concat.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001090",
                "name": "String",
                "type": "Identifier",
                "value": "stringConcat"
            }
        },
        "undocumented": true,
        "name": "String",
        "longname": "<anonymous>~typeMap.String",
        "kind": "member",
        "memberof": "<anonymous>~typeMap",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                498,
                518
            ],
            "filename": "concat.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001092",
                "name": "Array",
                "type": "Identifier",
                "value": "arrayConcat"
            }
        },
        "undocumented": true,
        "name": "Array",
        "longname": "<anonymous>~typeMap.Array",
        "kind": "member",
        "memberof": "<anonymous>~typeMap",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function cond\n * @param conds\n * @returns {Function}\n */",
        "meta": {
            "filename": "cond.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "cond",
        "params": [
            {
                "name": "conds"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                }
            }
        ],
        "longname": "cond",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                65,
                244
            ],
            "filename": "cond.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001105",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "conds"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                80,
                244
            ],
            "filename": "cond.js",
            "lineno": 6,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001106",
                "name": "cond",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "conds"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "cond",
        "longname": "cond",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                145,
                150
            ],
            "filename": "cond.js",
            "lineno": 8,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001116",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                86,
                277
            ],
            "filename": "DATE_TOKENS.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001145",
                "name": "exports.DATE_TOKENS",
                "type": "VariableDeclaration"
            }
        },
        "undocumented": true,
        "name": "DATE_TOKENS",
        "longname": "DATE_TOKENS",
        "kind": "constant",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                99,
                277
            ],
            "filename": "DATE_TOKENS.js",
            "lineno": 7,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001147",
                "name": "DATE_TOKENS",
                "type": "Literal",
                "value": "<RegExp /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g>"
            }
        },
        "undocumented": true,
        "name": "DATE_TOKENS",
        "longname": "DATE_TOKENS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @private\n */",
        "meta": {
            "range": [
                21,
                195
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001152",
                "name": "exports.DATE_UNITS",
                "type": "VariableDeclaration"
            }
        },
        "access": "private",
        "name": "DATE_UNITS",
        "longname": "DATE_UNITS",
        "kind": "constant",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34,
                195
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 5,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001154",
                "name": "DATE_UNITS",
                "type": "ObjectExpression",
                "value": "{\"milliseconds\":1,\"seconds\":1000,\"minutes\":\"\",\"hours\":\"\",\"days\":\"\",\"weeks\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "DATE_UNITS",
        "longname": "DATE_UNITS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                51,
                66
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 6,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001157",
                "name": "milliseconds",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "milliseconds",
        "longname": "DATE_UNITS.milliseconds",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                70,
                83
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 7,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001159",
                "name": "seconds",
                "type": "Literal",
                "value": 1000
            }
        },
        "undocumented": true,
        "name": "seconds",
        "longname": "DATE_UNITS.seconds",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                87,
                105
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001161",
                "name": "minutes",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "minutes",
        "longname": "DATE_UNITS.minutes",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                109,
                130
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001165",
                "name": "hours",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hours",
        "longname": "DATE_UNITS.hours",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                134,
                159
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001171",
                "name": "days",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "days",
        "longname": "DATE_UNITS.days",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                163,
                193
            ],
            "filename": "DATE_UNITS.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001179",
                "name": "weeks",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "weeks",
        "longname": "DATE_UNITS.weeks",
        "kind": "member",
        "memberof": "DATE_UNITS",
        "scope": "static"
    },
    {
        "comment": "/**\n * @private\n */",
        "meta": {
            "range": [
                21,
                191
            ],
            "filename": "MONTHS.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001191",
                "name": "exports.MONTHS",
                "type": "VariableDeclaration"
            }
        },
        "access": "private",
        "name": "MONTHS",
        "longname": "MONTHS",
        "kind": "constant",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                34,
                191
            ],
            "filename": "MONTHS.js",
            "lineno": 5,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001193",
                "name": "MONTHS",
                "type": "ArrayExpression",
                "value": "[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]"
            }
        },
        "undocumented": true,
        "name": "MONTHS",
        "longname": "MONTHS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @private\n */",
        "meta": {
            "range": [
                20,
                138
            ],
            "filename": "WEEKDAYS.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001210",
                "name": "exports.WEEKDAYS",
                "type": "VariableDeclaration"
            }
        },
        "access": "private",
        "name": "WEEKDAYS",
        "longname": "WEEKDAYS",
        "kind": "constant",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                138
            ],
            "filename": "WEEKDAYS.js",
            "lineno": 4,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src/constants",
            "code": {
                "id": "astnode100001212",
                "name": "WEEKDAYS",
                "type": "ArrayExpression",
                "value": "[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]"
            }
        },
        "undocumented": true,
        "name": "WEEKDAYS",
        "longname": "WEEKDAYS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @function curry\n * @description Autocurries the provided function\n */",
        "meta": {
            "filename": "curry.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "curry",
        "description": "Autocurries the provided function",
        "longname": "curry",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                119,
                557
            ],
            "filename": "curry.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001224",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "fun"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                134,
                557
            ],
            "filename": "curry.js",
            "lineno": 6,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001225",
                "name": "curry",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "fun"
                ]
            },
            "vars": {
                "argslen": "curry~argslen",
                "recurse": "curry~recurse",
                "createRecurser": "curry~createRecurser"
            }
        },
        "undocumented": true,
        "name": "curry",
        "longname": "curry",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                165,
                185
            ],
            "filename": "curry.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001230",
                "name": "argslen",
                "type": "MemberExpression",
                "value": "fun.length"
            }
        },
        "undocumented": true,
        "name": "argslen",
        "longname": "curry~argslen",
        "kind": "constant",
        "memberof": "curry",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                260,
                420
            ],
            "filename": "curry.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001246",
                "name": "recurse",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "acc",
                    "args"
                ]
            },
            "vars": {
                "_acc": "curry~recurse~_acc"
            }
        },
        "undocumented": true,
        "name": "recurse",
        "longname": "curry~recurse",
        "kind": "function",
        "memberof": "curry",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                301,
                324
            ],
            "filename": "curry.js",
            "lineno": 15,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001252",
                "name": "_acc",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "_acc",
        "longname": "curry~recurse~_acc",
        "kind": "constant",
        "memberof": "curry~recurse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                424,
                555
            ],
            "filename": "curry.js",
            "lineno": 21,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001275",
                "name": "createRecurser",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "acc"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "createRecurser",
        "longname": "curry~createRecurser",
        "kind": "function",
        "memberof": "curry",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function diffDate\n * @description Returns the difference between 2 dates in millisecond\n * @param {Date} start - Start date\n * @param {Date} end - End date\n * @return {number} REturn the difference in milliseconds\n */",
        "meta": {
            "filename": "diffDate.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {}
        },
        "kind": "function",
        "name": "diffDate",
        "description": "Returns the difference between 2 dates in millisecond",
        "params": [
            {
                "type": {
                    "names": [
                        "Date"
                    ]
                },
                "description": "Start date",
                "name": "start"
            },
            {
                "type": {
                    "names": [
                        "Date"
                    ]
                },
                "description": "End date",
                "name": "end"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "REturn the difference in milliseconds"
            }
        ],
        "longname": "diffDate",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                256,
                375
            ],
            "filename": "diffDate.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001301",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                377,
                395
            ],
            "filename": "formatDateTime.js",
            "lineno": 13,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001350",
                "name": "ZEROS",
                "type": "Literal",
                "value": "00000000"
            }
        },
        "undocumented": true,
        "name": "ZEROS",
        "longname": "ZEROS",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                402,
                470
            ],
            "filename": "formatDateTime.js",
            "lineno": 14,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001354",
                "name": "lastN",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lastN",
        "longname": "lastN",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                477,
                524
            ],
            "filename": "formatDateTime.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001374",
                "name": "firstN",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "firstN",
        "longname": "firstN",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                531,
                584
            ],
            "filename": "formatDateTime.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001388",
                "name": "fill",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "fill",
        "longname": "fill",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                592,
                635
            ],
            "filename": "formatDateTime.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001402",
                "name": "modCeiling",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "modCeiling",
        "longname": "modCeiling",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                688,
                1735
            ],
            "filename": "formatDateTime.js",
            "lineno": 21,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001413",
                "name": "tokens",
                "type": "ObjectExpression",
                "value": "{\"YYYY\":\"\",\"YY\":\"\",\"MMMM\":\"\",\"MMM\":\"\",\"MM\":\"\",\"M\":\"\",\"w\":\"\",\"ww\":\"\",\"DD\":\"\",\"D\":\"\",\"dddd\":\"\",\"ddd\":\"\",\"dd\":\"\",\"d\":\"\",\"HH\":\"\",\"H\":\"\",\"hh\":\"\",\"h\":\"\",\"mm\":\"\",\"m\":\"\",\"ss\":\"\",\"s\":\"\",\"A\":\"\",\"a\":\"\",\"SSS\":\"\",\"SS\":\"\",\"S\":\"\",\"Q\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "tokens",
        "longname": "tokens",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                701,
                736
            ],
            "filename": "formatDateTime.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001416",
                "name": "YYYY",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "YYYY",
        "longname": "tokens.YYYY",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                740,
                783
            ],
            "filename": "formatDateTime.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001426",
                "name": "YY",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "YY",
        "longname": "tokens.YY",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                787,
                818
            ],
            "filename": "formatDateTime.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001439",
                "name": "MMMM",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "MMMM",
        "longname": "tokens.MMMM",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                822,
                863
            ],
            "filename": "formatDateTime.js",
            "lineno": 25,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001448",
                "name": "MMM",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "MMM",
        "longname": "tokens.MMM",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                867,
                901
            ],
            "filename": "formatDateTime.js",
            "lineno": 26,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001460",
                "name": "MM",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "MM",
        "longname": "tokens.MM",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                905,
                929
            ],
            "filename": "formatDateTime.js",
            "lineno": 27,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001472",
                "name": "M",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "M",
        "longname": "tokens.M",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                933,
                951
            ],
            "filename": "formatDateTime.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001481",
                "name": "w",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "w",
        "longname": "tokens.w",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                955,
                983
            ],
            "filename": "formatDateTime.js",
            "lineno": 29,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001487",
                "name": "ww",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "ww",
        "longname": "tokens.ww",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                987,
                1016
            ],
            "filename": "formatDateTime.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001496",
                "name": "DD",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "DD",
        "longname": "tokens.DD",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1020,
                1039
            ],
            "filename": "formatDateTime.js",
            "lineno": 31,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001506",
                "name": "D",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "D",
        "longname": "tokens.D",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1043,
                1074
            ],
            "filename": "formatDateTime.js",
            "lineno": 32,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001513",
                "name": "dddd",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "dddd",
        "longname": "tokens.dddd",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1078,
                1119
            ],
            "filename": "formatDateTime.js",
            "lineno": 33,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001522",
                "name": "ddd",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "ddd",
        "longname": "tokens.ddd",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1123,
                1163
            ],
            "filename": "formatDateTime.js",
            "lineno": 34,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001534",
                "name": "dd",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "dd",
        "longname": "tokens.dd",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1167,
                1185
            ],
            "filename": "formatDateTime.js",
            "lineno": 35,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001546",
                "name": "d",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "tokens.d",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1189,
                1219
            ],
            "filename": "formatDateTime.js",
            "lineno": 36,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001553",
                "name": "HH",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "HH",
        "longname": "tokens.HH",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1223,
                1243
            ],
            "filename": "formatDateTime.js",
            "lineno": 37,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001563",
                "name": "H",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "H",
        "longname": "tokens.H",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1247,
                1293
            ],
            "filename": "formatDateTime.js",
            "lineno": 38,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001570",
                "name": "hh",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "hh",
        "longname": "tokens.hh",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1297,
                1333
            ],
            "filename": "formatDateTime.js",
            "lineno": 39,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001583",
                "name": "h",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "h",
        "longname": "tokens.h",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1337,
                1369
            ],
            "filename": "formatDateTime.js",
            "lineno": 40,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001593",
                "name": "mm",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "mm",
        "longname": "tokens.mm",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1373,
                1395
            ],
            "filename": "formatDateTime.js",
            "lineno": 41,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001603",
                "name": "m",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "tokens.m",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1399,
                1431
            ],
            "filename": "formatDateTime.js",
            "lineno": 42,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001610",
                "name": "ss",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "ss",
        "longname": "tokens.ss",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1435,
                1457
            ],
            "filename": "formatDateTime.js",
            "lineno": 43,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001620",
                "name": "s",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "s",
        "longname": "tokens.s",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1461,
                1500
            ],
            "filename": "formatDateTime.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001627",
                "name": "A",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "A",
        "longname": "tokens.A",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1504,
                1543
            ],
            "filename": "formatDateTime.js",
            "lineno": 45,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001639",
                "name": "a",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "tokens.a",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1547,
                1585
            ],
            "filename": "formatDateTime.js",
            "lineno": 46,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001651",
                "name": "SSS",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "SSS",
        "longname": "tokens.SSS",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1589,
                1637
            ],
            "filename": "formatDateTime.js",
            "lineno": 47,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001661",
                "name": "SS",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "SS",
        "longname": "tokens.SS",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1641,
                1688
            ],
            "filename": "formatDateTime.js",
            "lineno": 48,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001674",
                "name": "S",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "S",
        "longname": "tokens.S",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1692,
                1733
            ],
            "filename": "formatDateTime.js",
            "lineno": 49,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001687",
                "name": "Q",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "Q",
        "longname": "tokens.Q",
        "kind": "function",
        "memberof": "tokens",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1813,
                1914
            ],
            "filename": "formatDateTime.js",
            "lineno": 53,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001703",
                "name": "swapTokenWithValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "swapTokenWithValue",
        "longname": "swapTokenWithValue",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @function formatDateTime\n * @description Formats a date object using a format string\n * @param {string} format - Format date string\n * @param {date} date - Date object to format\n * @return {string}\n * @example\n *\n * const formattedDate = formatDateTime('DD-MM-YYYY', new Date('1999-12-31'))\n * console.log(formattedDate) // 31-12-1999\n */",
        "meta": {
            "filename": "formatDateTime.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {}
        },
        "kind": "function",
        "name": "formatDateTime",
        "description": "Formats a date object using a format string",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Format date string",
                "name": "format"
            },
            {
                "type": {
                    "names": [
                        "date"
                    ]
                },
                "description": "Date object to format",
                "name": "date"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "examples": [
            "const formattedDate = formatDateTime('DD-MM-YYYY', new Date('1999-12-31'))\nconsole.log(formattedDate) // 31-12-1999"
        ],
        "longname": "formatDateTime",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2262,
                2515
            ],
            "filename": "formatDateTime.js",
            "lineno": 68,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001722",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function getWeek\n * @description Returns the week number based on a given date\n * @param d\n * @returns {number[]}\n */",
        "meta": {
            "filename": "getWeek.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {}
        },
        "kind": "function",
        "name": "getWeek",
        "description": "Returns the week number based on a given date",
        "params": [
            {
                "name": "d"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<number>"
                    ]
                }
            }
        ],
        "longname": "getWeek",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                156,
                752
            ],
            "filename": "getWeek.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001759",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                242,
                308
            ],
            "filename": "getWeek.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001767",
                "name": "d",
                "type": "NewExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "d",
        "longname": "<anonymous>~d",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                500,
                556
            ],
            "filename": "getWeek.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001806",
                "name": "yearStart",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "yearStart",
        "longname": "<anonymous>~yearStart",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                610,
                668
            ],
            "filename": "getWeek.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001821",
                "name": "weekNo",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "weekNo",
        "longname": "<anonymous>~weekNo",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                124,
                149
            ],
            "filename": "is.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001849",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                85,
                147
            ],
            "filename": "isFutureDate.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001859",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "d"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38,
                165
            ],
            "filename": "isValid.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001878",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53,
                165
            ],
            "filename": "isValid.js",
            "lineno": 6,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001879",
                "name": "isValid",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "isValid",
        "longname": "isValid",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\r\n * Created by dierickx.len on 26/03/2017.\r\n */",
        "meta": {
            "range": [
                53,
                87
            ],
            "filename": "toDay.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001897",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "d"
                ]
            }
        },
        "description": "Created by dierickx.len on 26/03/2017.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\r\n * Created by dierickx.len on 26/03/2017.\r\n */",
        "meta": {
            "range": [
                53,
                86
            ],
            "filename": "toHour.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001905",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "d"
                ]
            }
        },
        "description": "Created by dierickx.len on 26/03/2017.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\r\n * Created by dierickx.len on 26/03/2017.\r\n */",
        "meta": {
            "range": [
                53,
                84
            ],
            "filename": "toMinutes.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001913",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "d"
                ]
            }
        },
        "description": "Created by dierickx.len on 26/03/2017.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\r\n * Created by dierickx.len on 26/03/2017.\r\n */",
        "meta": {
            "range": [
                53,
                83
            ],
            "filename": "toSeconds.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/date",
            "code": {
                "id": "astnode100001921",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "d"
                ]
            }
        },
        "description": "Created by dierickx.len on 26/03/2017.",
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns true if all items in the enumerable match the predicate\n *\n * @function defaultTo\n * @description Returns true if all items in the enumerable match the predicate\n * @since v1.0.2\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n **/",
        "meta": {
            "filename": "defaultTo.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns true if all items in the enumerable match the predicate",
        "kind": "function",
        "name": "defaultTo",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "a -> b -> a | b",
                "value": "a -> b -> a | b"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "a"
                    ]
                },
                "description": "The default value.",
                "name": "default"
            },
            {
                "type": {
                    "names": [
                        "b"
                    ]
                },
                "description": "`val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.",
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value"
            }
        ],
        "longname": "defaultTo",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                504,
                637
            ],
            "filename": "defaultTo.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001933",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n\n * @function empty\n * @description Returns the empty equivalent of the first argument\n */",
        "meta": {
            "filename": "empty.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "empty",
        "description": "Returns the empty equivalent of the first argument",
        "longname": "empty",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                96,
                162
            ],
            "filename": "empty.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001954",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                111,
                162
            ],
            "filename": "empty.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100001955",
                "name": "empty",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "empty",
        "longname": "empty",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n\n * @function equals\n * @description Autocurried function that checks for equality of 2 items\n * @param {*} x - Left side of the equality check\n * @param {*} y - Right side of the equality check\n * @return {boolean}\n * @example\n *\n * const nan = Number.NaN\n * equal(nan, nan) // returns true\n *\n * const arr1 = [0, 1, 2, 3]\n * const arr2 = [null, 1, 2, 3]\n * equals(arr1, arr2) // returns false\n *\n * equals(new Object({'a': 0, 'b': 1}), {'a': 0, 'b': 1}) // true\n *\n */",
        "meta": {
            "filename": "equals.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "equals",
        "description": "Autocurried function that checks for equality of 2 items",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Left side of the equality check",
                "name": "x"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Right side of the equality check",
                "name": "y"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "examples": [
            "const nan = Number.NaN\nequal(nan, nan) // returns true\n\nconst arr1 = [0, 1, 2, 3]\nconst arr2 = [null, 1, 2, 3]\nequals(arr1, arr2) // returns false\n\nequals(new Object({'a': 0, 'b': 1}), {'a': 0, 'b': 1}) // true"
        ],
        "longname": "equals",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                932,
                1408
            ],
            "filename": "equals.js",
            "lineno": 35,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002023",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function exists\n * @desc Validates if a value is not null or undefined\n * @param {*} x - any valid Javascript value\n * @example\n *\n * exists(null) // false\n * exists([] // true\n *\n */",
        "meta": {
            "filename": "exists.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "exists",
        "description": "Validates if a value is not null or undefined",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "any valid Javascript value",
                "name": "x"
            }
        ],
        "examples": [
            "exists(null) // false\nexists([] // true"
        ],
        "longname": "exists",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                231,
                299
            ],
            "filename": "exists.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002129",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function filter\n * @description Autocurried fucntion that filters Objects, Arrays and Maps\n *\n */",
        "meta": {
            "filename": "filter.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "filter",
        "description": "Autocurried fucntion that filters Objects, Arrays and Maps",
        "longname": "filter",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                331,
                837
            ],
            "filename": "filter.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002163",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Find the index matching a predicate\n *\n * @function findIndex\n * @description Find the index matching a predicate\n * @since v1.0.2\n * @sig (a -> boolean) -> [a] -> number\n * @param {Function} Predicate function returns a boolean\n * @param {Array} An array like object\n * @return {number}\n **/",
        "meta": {
            "filename": "findIndex.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Find the index matching a predicate",
        "kind": "function",
        "name": "findIndex",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(a -> boolean) -> [a] -> number",
                "value": "(a -> boolean) -> [a] -> number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "function returns a boolean",
                "name": "Predicate"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "array like object",
                "name": "An"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                }
            }
        ],
        "longname": "findIndex",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                330,
                501
            ],
            "filename": "findIndex.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002201",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                386,
                391
            ],
            "filename": "findIndex.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002210",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                400,
                412
            ],
            "filename": "findIndex.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002214",
                "name": "l",
                "type": "MemberExpression",
                "value": "a.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                476,
                482
            ],
            "filename": "findIndex.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002234",
                "name": "i",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function first\n * @param [a]\n * @return a | undefined\n * @example\n *\n * const arr = [1, 2, 4]\n * first([1, 2, 4]) // returns 1\n */",
        "meta": {
            "filename": "first.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "first",
        "params": [
            {
                "optional": true,
                "name": "a"
            }
        ],
        "returns": [
            {
                "description": "a | undefined"
            }
        ],
        "examples": [
            "const arr = [1, 2, 4]\nfirst([1, 2, 4]) // returns 1"
        ],
        "longname": "first",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                179,
                266
            ],
            "filename": "first.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002246",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                141,
                168
            ],
            "filename": "flatMap.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002287",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @function flatMap\n * @param fn\n * @param a\n */",
        "meta": {
            "filename": "flatMap.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "flatMap",
        "params": [
            {
                "name": "fn"
            },
            {
                "name": "a"
            }
        ],
        "longname": "flatMap",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                224,
                477
            ],
            "filename": "flatMap.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002292",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns a single item by iterating over an array like object and call a function on each item\n *\n * @function fold\n * @description Returns a single item by iterating over an array like object and call a function on each item\n * @since v1.0.2\n * @param {Function} cb receives 4 values: the accumulator, the item, the index, and the initial value.\n * @param {*} init - the the initial value\n * @param {Array|Object} a the array like item to iterate over\n * @return {*} The accumulated value\n **/",
        "meta": {
            "filename": "fold.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns a single item by iterating over an array like object and call a function on each item",
        "kind": "function",
        "name": "fold",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "receives 4 values: the accumulator, the item, the index, and the initial value.",
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "the the initial value",
                "name": "init"
            },
            {
                "type": {
                    "names": [
                        "Array",
                        "Object"
                    ]
                },
                "description": "the array like item to iterate over",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "The accumulated value"
            }
        ],
        "longname": "fold",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                632,
                797
            ],
            "filename": "fold.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002364",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                691,
                755
            ],
            "filename": "fold.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002374",
                "name": "typeMap",
                "type": "ObjectExpression",
                "value": "{\"undefined\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "typeMap",
        "longname": "<anonymous>~typeMap",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                707,
                727
            ],
            "filename": "fold.js",
            "lineno": 19,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002377",
                "name": "Object",
                "type": "Identifier",
                "value": "objectFold"
            }
        },
        "undocumented": true,
        "name": "Object",
        "longname": "<anonymous>~typeMap.Object",
        "kind": "member",
        "memberof": "<anonymous>~typeMap",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                733,
                751
            ],
            "filename": "fold.js",
            "lineno": 20,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002379",
                "name": "Array",
                "type": "Identifier",
                "value": "arrayFold"
            }
        },
        "undocumented": true,
        "name": "Array",
        "longname": "<anonymous>~typeMap.Array",
        "kind": "member",
        "memberof": "<anonymous>~typeMap",
        "scope": "static"
    },
    {
        "comment": "/**\n\n * @function identical\n * @description checks for identintical items\n */",
        "meta": {
            "filename": "identical.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "identical",
        "description": "checks for identintical items",
        "longname": "identical",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                323
            ],
            "filename": "identical.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002401",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n\n * @function identity\n * @description Returns the value supplied to the function\n */",
        "meta": {
            "filename": "identity.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "identity",
        "description": "Returns the value supplied to the function",
        "longname": "identity",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                142
            ],
            "filename": "identity.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002445",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                142
            ],
            "filename": "identity.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002446",
                "name": "identity",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9,
                23
            ],
            "filename": "index.js",
            "lineno": 1,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002456",
                "name": "exports.add",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "add",
        "longname": "add",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                55,
                74
            ],
            "filename": "index.js",
            "lineno": 2,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002461",
                "name": "exports.addIndex",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "addIndex",
        "longname": "addIndex",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                104,
                121
            ],
            "filename": "index.js",
            "lineno": 3,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002466",
                "name": "exports.adjust",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "adjust",
        "longname": "adjust",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                170
            ],
            "filename": "index.js",
            "lineno": 4,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002471",
                "name": "exports.adjustWith",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "adjustWith",
        "longname": "adjustWith",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                202,
                216
            ],
            "filename": "index.js",
            "lineno": 5,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002476",
                "name": "exports.all",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "all",
        "longname": "all",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                241,
                259
            ],
            "filename": "index.js",
            "lineno": 6,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002481",
                "name": "exports.allPass",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "allPass",
        "longname": "allPass",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                288,
                305
            ],
            "filename": "index.js",
            "lineno": 7,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002486",
                "name": "exports.always",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "always",
        "longname": "always",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                333,
                347
            ],
            "filename": "index.js",
            "lineno": 8,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002491",
                "name": "exports.and",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "and",
        "longname": "and",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                372,
                386
            ],
            "filename": "index.js",
            "lineno": 9,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002496",
                "name": "exports.any",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "any",
        "longname": "any",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                411,
                429
            ],
            "filename": "index.js",
            "lineno": 10,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002501",
                "name": "exports.anyPass",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "anyPass",
        "longname": "anyPass",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                458,
                471
            ],
            "filename": "index.js",
            "lineno": 11,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002506",
                "name": "exports.ap",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "ap",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                495,
                514
            ],
            "filename": "index.js",
            "lineno": 12,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002511",
                "name": "exports.aperture",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "aperture",
        "longname": "aperture",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                544,
                561
            ],
            "filename": "index.js",
            "lineno": 13,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002516",
                "name": "exports.append",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "append",
        "longname": "append",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                589,
                605
            ],
            "filename": "index.js",
            "lineno": 14,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002521",
                "name": "exports.apply",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "apply",
        "longname": "apply",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                632,
                649
            ],
            "filename": "index.js",
            "lineno": 15,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002526",
                "name": "exports.binary",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "binary",
        "longname": "binary",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                677,
                692
            ],
            "filename": "index.js",
            "lineno": 16,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002531",
                "name": "exports.bind",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "bind",
        "longname": "bind",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                718,
                733
            ],
            "filename": "index.js",
            "lineno": 17,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002536",
                "name": "exports.both",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "both",
        "longname": "both",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                767,
                782
            ],
            "filename": "index.js",
            "lineno": 18,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002541",
                "name": "exports.call",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "call",
        "longname": "call",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                808,
                829
            ],
            "filename": "index.js",
            "lineno": 19,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002546",
                "name": "exports.complement",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "complement",
        "longname": "complement",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                861,
                879
            ],
            "filename": "index.js",
            "lineno": 20,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002551",
                "name": "exports.compose",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "compose",
        "longname": "compose",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                908,
                925
            ],
            "filename": "index.js",
            "lineno": 21,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002556",
                "name": "exports.concat",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "concat",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                953,
                968
            ],
            "filename": "index.js",
            "lineno": 22,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002561",
                "name": "exports.cond",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "cond",
        "longname": "cond",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                994,
                1010
            ],
            "filename": "index.js",
            "lineno": 23,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002566",
                "name": "exports.curry",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "curry",
        "longname": "curry",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1037,
                1057
            ],
            "filename": "index.js",
            "lineno": 24,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002571",
                "name": "exports.defaultTo",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "defaultTo",
        "longname": "defaultTo",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1088,
                1107
            ],
            "filename": "index.js",
            "lineno": 25,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002576",
                "name": "exports.diffDate",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "diffDate",
        "longname": "diffDate",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1142,
                1159
            ],
            "filename": "index.js",
            "lineno": 26,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002581",
                "name": "exports.divide",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "divide",
        "longname": "divide",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1194,
                1211
            ],
            "filename": "index.js",
            "lineno": 27,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002586",
                "name": "exports.Either",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Either",
        "longname": "Either",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1246,
                1261
            ],
            "filename": "index.js",
            "lineno": 28,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002591",
                "name": "exports.Left",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Left",
        "longname": "Left",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1294,
                1310
            ],
            "filename": "index.js",
            "lineno": 29,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002596",
                "name": "exports.Right",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Right",
        "longname": "Right",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1344,
                1360
            ],
            "filename": "index.js",
            "lineno": 30,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002601",
                "name": "exports.empty",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "empty",
        "longname": "empty",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1387,
                1404
            ],
            "filename": "index.js",
            "lineno": 31,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002606",
                "name": "exports.equals",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "equals",
        "longname": "equals",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1432,
                1449
            ],
            "filename": "index.js",
            "lineno": 32,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002611",
                "name": "exports.exists",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exists",
        "longname": "exists",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1477,
                1489
            ],
            "filename": "index.js",
            "lineno": 33,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002616",
                "name": "exports.F",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "F",
        "longname": "F",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1520,
                1537
            ],
            "filename": "index.js",
            "lineno": 34,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002621",
                "name": "exports.filter",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "filter",
        "longname": "filter",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1565,
                1585
            ],
            "filename": "index.js",
            "lineno": 35,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002626",
                "name": "exports.findIndex",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "findIndex",
        "longname": "findIndex",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1616,
                1632
            ],
            "filename": "index.js",
            "lineno": 36,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002631",
                "name": "exports.first",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "first",
        "longname": "first",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1659,
                1677
            ],
            "filename": "index.js",
            "lineno": 37,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002636",
                "name": "exports.flatMap",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "flatMap",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1706,
                1721
            ],
            "filename": "index.js",
            "lineno": 38,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002641",
                "name": "exports.fold",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "fold",
        "longname": "fold",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1747,
                1770
            ],
            "filename": "index.js",
            "lineno": 39,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002646",
                "name": "exports.formatString",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "formatString",
        "longname": "formatString",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1811,
                1825
            ],
            "filename": "index.js",
            "lineno": 40,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002651",
                "name": "exports.has",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "has",
        "longname": "has",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1857,
                1873
            ],
            "filename": "index.js",
            "lineno": 41,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002656",
                "name": "exports.hasIn",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "hasIn",
        "longname": "hasIn",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1907,
                1927
            ],
            "filename": "index.js",
            "lineno": 42,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002661",
                "name": "exports.identical",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "identical",
        "longname": "identical",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1958,
                1977
            ],
            "filename": "index.js",
            "lineno": 43,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002666",
                "name": "exports.identity",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2007,
                2020
            ],
            "filename": "index.js",
            "lineno": 44,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002671",
                "name": "exports.is",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "is",
        "longname": "is",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2044,
                2062
            ],
            "filename": "index.js",
            "lineno": 45,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002676",
                "name": "exports.isArray",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isArray",
        "longname": "isArray",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2092,
                2112
            ],
            "filename": "index.js",
            "lineno": 46,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002681",
                "name": "exports.isBoolean",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isBoolean",
        "longname": "isBoolean",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2144,
                2161
            ],
            "filename": "index.js",
            "lineno": 47,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002686",
                "name": "exports.isDate",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isDate",
        "longname": "isDate",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2190,
                2208
            ],
            "filename": "index.js",
            "lineno": 48,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002691",
                "name": "exports.isEmpty",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isEmpty",
        "longname": "isEmpty",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2237,
                2260
            ],
            "filename": "index.js",
            "lineno": 49,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002696",
                "name": "exports.isFutureDate",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isFutureDate",
        "longname": "isFutureDate",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2299,
                2315
            ],
            "filename": "index.js",
            "lineno": 50,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002701",
                "name": "exports.isMap",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isMap",
        "longname": "isMap",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2343,
                2359
            ],
            "filename": "index.js",
            "lineno": 51,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002706",
                "name": "exports.isNan",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isNan",
        "longname": "isNan",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2393,
                2410
            ],
            "filename": "index.js",
            "lineno": 52,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002711",
                "name": "exports.isNull",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isNull",
        "longname": "isNull",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2439,
                2458
            ],
            "filename": "index.js",
            "lineno": 53,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002716",
                "name": "exports.isNumber",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isNumber",
        "longname": "isNumber",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2489,
                2508
            ],
            "filename": "index.js",
            "lineno": 54,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002721",
                "name": "exports.isObject",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isObject",
        "longname": "isObject",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2539,
                2555
            ],
            "filename": "index.js",
            "lineno": 55,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002726",
                "name": "exports.isSet",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isSet",
        "longname": "isSet",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2583,
                2602
            ],
            "filename": "index.js",
            "lineno": 56,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002731",
                "name": "exports.isString",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isString",
        "longname": "isString",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2633,
                2655
            ],
            "filename": "index.js",
            "lineno": 57,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002736",
                "name": "exports.isUndefined",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isUndefined",
        "longname": "isUndefined",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2689,
                2711
            ],
            "filename": "index.js",
            "lineno": 58,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002741",
                "name": "exports.isValidDate",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "isValidDate",
        "longname": "isValidDate",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2745,
                2760
            ],
            "filename": "index.js",
            "lineno": 59,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002746",
                "name": "exports.Just",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Just",
        "longname": "Just",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2793,
                2808
            ],
            "filename": "index.js",
            "lineno": 60,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002751",
                "name": "exports.keys",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "keys",
        "longname": "keys",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2834,
                2851
            ],
            "filename": "index.js",
            "lineno": 61,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002756",
                "name": "exports.keysIn",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "keysIn",
        "longname": "keysIn",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2886,
                2901
            ],
            "filename": "index.js",
            "lineno": 62,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002761",
                "name": "exports.last",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2927,
                2942
            ],
            "filename": "index.js",
            "lineno": 63,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002766",
                "name": "exports.lift",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "lift",
        "longname": "lift",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2968,
                2982
            ],
            "filename": "index.js",
            "lineno": 64,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002771",
                "name": "exports.map",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "map",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3007,
                3021
            ],
            "filename": "index.js",
            "lineno": 65,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002776",
                "name": "exports.max",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "max",
        "longname": "max",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3046,
                3062
            ],
            "filename": "index.js",
            "lineno": 66,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002781",
                "name": "exports.Maybe",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Maybe",
        "longname": "Maybe",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3096,
                3112
            ],
            "filename": "index.js",
            "lineno": 67,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002786",
                "name": "exports.merge",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "merge",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3146,
                3160
            ],
            "filename": "index.js",
            "lineno": 68,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002791",
                "name": "exports.min",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "min",
        "longname": "min",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3185,
                3204
            ],
            "filename": "index.js",
            "lineno": 69,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002796",
                "name": "exports.multiply",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "multiply",
        "longname": "multiply",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3241,
                3255
            ],
            "filename": "index.js",
            "lineno": 70,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002801",
                "name": "exports.not",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "not",
        "longname": "not",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3280,
                3298
            ],
            "filename": "index.js",
            "lineno": 71,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002806",
                "name": "exports.Nothing",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "Nothing",
        "longname": "Nothing",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3334,
                3349
            ],
            "filename": "index.js",
            "lineno": 72,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002811",
                "name": "exports.omit",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "omit",
        "longname": "omit",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3382,
                3395
            ],
            "filename": "index.js",
            "lineno": 73,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002816",
                "name": "exports.or",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "or",
        "longname": "or",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3419,
                3434
            ],
            "filename": "index.js",
            "lineno": 74,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002821",
                "name": "exports.path",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "path",
        "longname": "path",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3467,
                3482
            ],
            "filename": "index.js",
            "lineno": 75,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002826",
                "name": "exports.pick",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "pick",
        "longname": "pick",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3515,
                3530
            ],
            "filename": "index.js",
            "lineno": 76,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002831",
                "name": "exports.prop",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "prop",
        "longname": "prop",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3563,
                3580
            ],
            "filename": "index.js",
            "lineno": 77,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002836",
                "name": "exports.reduce",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "reduce",
        "longname": "reduce",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3608,
                3623
            ],
            "filename": "index.js",
            "lineno": 78,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002841",
                "name": "exports.sort",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "sort",
        "longname": "sort",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3649,
                3663
            ],
            "filename": "index.js",
            "lineno": 79,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002846",
                "name": "exports.sum",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "sum",
        "longname": "sum",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3695,
                3707
            ],
            "filename": "index.js",
            "lineno": 80,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002851",
                "name": "exports.T",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "T",
        "longname": "T",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3738,
                3754
            ],
            "filename": "index.js",
            "lineno": 81,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002856",
                "name": "exports.toDay",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "toDay",
        "longname": "toDay",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3786,
                3803
            ],
            "filename": "index.js",
            "lineno": 82,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002861",
                "name": "exports.toHour",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "toHour",
        "longname": "toHour",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3836,
                3856
            ],
            "filename": "index.js",
            "lineno": 83,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002866",
                "name": "exports.toMinutes",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "toMinutes",
        "longname": "toMinutes",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3892,
                3912
            ],
            "filename": "index.js",
            "lineno": 84,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002871",
                "name": "exports.toSeconds",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "toSeconds",
        "longname": "toSeconds",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3948,
                3965
            ],
            "filename": "index.js",
            "lineno": 85,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002876",
                "name": "exports.truthy",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "truthy",
        "longname": "truthy",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3993,
                4008
            ],
            "filename": "index.js",
            "lineno": 86,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002881",
                "name": "exports.type",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "type",
        "longname": "type",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4034,
                4050
            ],
            "filename": "index.js",
            "lineno": 87,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002886",
                "name": "exports.union",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "union",
        "longname": "union",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4083,
                4100
            ],
            "filename": "index.js",
            "lineno": 88,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002891",
                "name": "exports.values",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4135,
                4149
            ],
            "filename": "index.js",
            "lineno": 89,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002896",
                "name": "exports.zip",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "zip",
        "longname": "zip",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4174,
                4191
            ],
            "filename": "index.js",
            "lineno": 90,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002901",
                "name": "exports.zipObj",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "zipObj",
        "longname": "zipObj",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4219,
                4237
            ],
            "filename": "index.js",
            "lineno": 91,
            "columnno": 9,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002906",
                "name": "exports.zipWith",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "zipWith",
        "longname": "zipWith",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @function is\n * @description Verifies the type of the provided argument\n *\n */",
        "meta": {
            "filename": "is.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "is",
        "description": "Verifies the type of the provided argument",
        "longname": "is",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                219
            ],
            "filename": "is.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002920",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n\n * @function empty\n * @description Returns the empty equivalent of the first argument\n */",
        "meta": {
            "filename": "isEmpty.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "empty",
        "description": "Returns the empty equivalent of the first argument",
        "longname": "empty",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                184,
                265
            ],
            "filename": "isEmpty.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002948",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                199,
                265
            ],
            "filename": "isEmpty.js",
            "lineno": 10,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100002949",
                "name": "isEmpty",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "isEmpty",
        "longname": "isEmpty",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                79,
                106
            ],
            "filename": "is.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100002972",
                "name": "isFunction",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isFunction",
        "longname": "isFunction",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                192
            ],
            "filename": "is.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100002977",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "iter"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                123,
                192
            ],
            "filename": "is.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100002978",
                "name": "isIter",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "iter"
                ]
            }
        },
        "undocumented": true,
        "name": "isIter",
        "longname": "isIter",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                236,
                458
            ],
            "filename": "map.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100002996",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                299,
                305
            ],
            "filename": "map.js",
            "lineno": 14,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100003005",
                "name": "r",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                317,
                344
            ],
            "filename": "map.js",
            "lineno": 15,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100003010",
                "name": "nextValue",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nextValue",
        "longname": "<anonymous>~nextValue",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                371,
                398
            ],
            "filename": "map.js",
            "lineno": 15,
            "columnno": 65,
            "path": "/Volumes/BigOne/github/fun/src/iterator",
            "code": {
                "id": "astnode100003021",
                "name": "nextValue",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nextValue",
        "longname": "<anonymous>~nextValue",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * Returns the keys of the provided object or iterator\n *\n * @function keys\n * @description Autocurried function which returns the keys of the provided object or iterator\n * @since v1.0.2\n * @sig obj -> [*]\n * @param {Object} obj - Obj from zhich to take the keys\n * @return {Iterable}\n **/",
        "meta": {
            "filename": "keys.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Autocurried function which returns the keys of the provided object or iterator",
        "kind": "function",
        "name": "keys",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "obj -> [*]",
                "value": "obj -> [*]"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Obj from zhich to take the keys",
                "name": "obj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                }
            }
        ],
        "longname": "keys",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                422,
                577
            ],
            "filename": "keys.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003059",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function last\n * @param [a]\n * @return a | undefined\n */",
        "meta": {
            "filename": "last.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "last",
        "params": [
            {
                "optional": true,
                "name": "a"
            }
        ],
        "returns": [
            {
                "description": "a | undefined"
            }
        ],
        "longname": "last",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                105,
                202
            ],
            "filename": "last.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003087",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function\n *\n * @function lift\n * @since v1.0.2\n * @sig (*... -> *) -> ([*]... -> [*])\n **/",
        "meta": {
            "filename": "lift.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "\"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function",
        "kind": "function",
        "name": "lift",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(*... -> *) -> ([*]... -> [*])",
                "value": "(*... -> *) -> ([*]... -> [*])"
            }
        ],
        "longname": "lift",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                304,
                512
            ],
            "filename": "lift.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003131",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                354,
                380
            ],
            "filename": "lift.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003139",
                "name": "lifted",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "lifted",
        "longname": "<anonymous>~lifted",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function mapFilter\n * @private\n *\n */",
        "meta": {
            "filename": "filter.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {}
        },
        "kind": "function",
        "name": "mapFilter",
        "access": "private",
        "longname": "mapFilter",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                76,
                531
            ],
            "filename": "filter.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003178",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                132,
                145
            ],
            "filename": "filter.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003187",
                "name": "r",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                153,
                169
            ],
            "filename": "filter.js",
            "lineno": 11,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003192",
                "name": "it",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "it",
        "longname": "<anonymous>~it",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                194
            ],
            "filename": "filter.js",
            "lineno": 12,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003199",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                231,
                250
            ],
            "filename": "filter.js",
            "lineno": 15,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003212",
                "name": "k",
                "type": "MemberExpression",
                "value": "result.value[0]"
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                261,
                280
            ],
            "filename": "filter.js",
            "lineno": 16,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003220",
                "name": "v",
                "type": "MemberExpression",
                "value": "result.value[1]"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~v",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                315,
                333
            ],
            "filename": "filter.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003240",
                "name": "result",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                98
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003254",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                173,
                234
            ],
            "filename": "keys.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003264",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                249,
                389
            ],
            "filename": "map.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003286",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                301,
                313
            ],
            "filename": "map.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/map",
            "code": {
                "id": "astnode100003295",
                "name": "r",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Maps over an iterable and applies a function\n *\n * @function map\n * @description Autocurried function which maps over an iterable.\n * @since v1.0.2\n * @sig (currentValue, idx, [a]) -> b -> b\n * @param {Function} cb\n * @param {Iterable} a\n * @return {Iterable}\n **/",
        "meta": {
            "filename": "map.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Autocurried function which maps over an iterable.",
        "kind": "function",
        "name": "map",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "(currentValue, idx, [a]) -> b -> b",
                "value": "(currentValue, idx, [a]) -> b -> b"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Iterable"
                    ]
                }
            }
        ],
        "longname": "map",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                547,
                1019
            ],
            "filename": "map.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003357",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns the largest of the 2 arguments provided\n *\n * @function max\n * @since v1.0.2\n * @param {*} a\n * @param {*} b\n * @return {*}\n **/",
        "meta": {
            "filename": "max.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns the largest of the 2 arguments provided",
        "kind": "function",
        "name": "max",
        "since": "v1.0.2",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "max",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                173,
                241
            ],
            "filename": "max.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003436",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns the smallest of the 2 arguments provided\n *\n * @function min\n * @desc Returns the smallest of the 2 arguments provided\n * @since v1.0.4\n * @param {*} a\n * @param {*} b\n * @return {*}\n **/",
        "meta": {
            "filename": "min.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns the smallest of the 2 arguments provided",
        "kind": "function",
        "name": "min",
        "since": "v1.0.4",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "min",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                232,
                300
            ],
            "filename": "min.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100003457",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Either\n * @desc Either monad\n * @param {*} val - Value to be validated\n * @constructor\n * @example\n *\n * const m = Either.of(props.customers).map(contract => customer[0]).getOrElse('No customer found')\n */",
        "meta": {
            "range": [
                279,
                331
            ],
            "filename": "Either.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003483",
                "name": "Either",
                "type": "FunctionExpression"
            }
        },
        "kind": "class",
        "classdesc": "Either",
        "description": "Either monad",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Value to be validated",
                "name": "val"
            }
        ],
        "examples": [
            "const m = Either.of(props.customers).map(contract => customer[0]).getOrElse('No customer found')"
        ],
        "name": "Either",
        "longname": "Either",
        "scope": "global"
    },
    {
        "comment": "/**\n * @memberOf Either\n * @function Either.of\n * @desc Creates a Either monad from the provided argument\n * @param {*} val - Val to turn in to a Either monad, can be a function\n * @returns {Either}\n * @example\n *\n * const m = Either.of(props.customers).map(customer => customer[0]).getOrElse('No customer found')\n */",
        "meta": {
            "filename": "Either.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Either",
        "kind": "function",
        "name": "of",
        "description": "Creates a Either monad from the provided argument",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Val to turn in to a Either monad, can be a function",
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Either"
                    ]
                }
            }
        ],
        "examples": [
            "const m = Either.of(props.customers).map(customer => customer[0]).getOrElse('No customer found')"
        ],
        "longname": "Either.of",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                652,
                810
            ],
            "filename": "Either.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003495",
                "name": "Either.of",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            }
        },
        "undocumented": true,
        "name": "of",
        "longname": "Either.of",
        "kind": "function",
        "memberof": "Either",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Either\n * @property {String} type - Returns the string 'Either' for all Either objects\n * @type {String}\n * @example\n *\n * const m =  Either.of([[1,2],[2,3],[4,5]])\n * m.type === 'Either'\n */",
        "meta": {
            "range": [
                1021,
                1053
            ],
            "filename": "Either.js",
            "lineno": 45,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003524",
                "name": "Either.prototype.type",
                "type": "Literal",
                "value": "Either",
                "paramnames": []
            }
        },
        "memberof": "Either",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Returns the string 'Either' for all Either objects",
                "name": "type"
            }
        ],
        "type": {
            "names": [
                "String"
            ]
        },
        "examples": [
            "const m =  Either.of([[1,2],[2,3],[4,5]])\nm.type === 'Either'"
        ],
        "name": "type",
        "longname": "Either#type",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Either\n * @property Either#isLeft\n * @returns {boolean}\n */",
        "meta": {
            "range": [
                1132,
                1163
            ],
            "filename": "Either.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003532",
                "name": "Either.prototype.isLeft",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "memberof": "Either",
        "properties": [
            {
                "name": "Either#isLeft"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "name": "isLeft",
        "longname": "Either#isLeft",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Either\n * @property Either#isRight\n * @returns {boolean}\n */",
        "meta": {
            "range": [
                1243,
                1275
            ],
            "filename": "Either.js",
            "lineno": 59,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003540",
                "name": "Either.prototype.isRight",
                "type": "Literal",
                "value": false,
                "paramnames": []
            }
        },
        "memberof": "Either",
        "properties": [
            {
                "name": "Either#isRight"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "name": "isRight",
        "longname": "Either#isRight",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Either\n * @function Either#Left\n * @returns {Left}\n */",
        "meta": {
            "filename": "Either.js",
            "lineno": 61,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "access": "private",
        "memberof": "Either",
        "kind": "function",
        "name": "Left",
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "longname": "Either#Left",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1361,
                1426
            ],
            "filename": "Either.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003548",
                "name": "Either.prototype.Left",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            }
        },
        "undocumented": true,
        "name": "Left",
        "longname": "Either#Left",
        "kind": "function",
        "memberof": "Either",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Either\n * @function Either.Left\n * @returns {Left}\n */",
        "meta": {
            "filename": "Either.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "access": "private",
        "memberof": "Either",
        "kind": "function",
        "name": "Left",
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "longname": "Either.Left",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1512,
                1567
            ],
            "filename": "Either.js",
            "lineno": 77,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003562",
                "name": "Either.Left",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            }
        },
        "undocumented": true,
        "name": "Left",
        "longname": "Either.Left",
        "kind": "function",
        "memberof": "Either",
        "scope": "static"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Either\n * @function Either#Right\n * @returns {Right}\n */",
        "meta": {
            "filename": "Either.js",
            "lineno": 81,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "access": "private",
        "memberof": "Either",
        "kind": "function",
        "name": "Right",
        "returns": [
            {
                "type": {
                    "names": [
                        "Right"
                    ]
                }
            }
        ],
        "longname": "Either#Right",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1655,
                1722
            ],
            "filename": "Either.js",
            "lineno": 87,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003574",
                "name": "Either.prototype.Right",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            }
        },
        "undocumented": true,
        "name": "Right",
        "longname": "Either#Right",
        "kind": "function",
        "memberof": "Either",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Either\n * @function Either.Right\n * @returns {Right}\n */",
        "meta": {
            "filename": "Either.js",
            "lineno": 91,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "access": "private",
        "memberof": "Either",
        "kind": "function",
        "name": "Right",
        "returns": [
            {
                "type": {
                    "names": [
                        "Right"
                    ]
                }
            }
        ],
        "longname": "Either.Right",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1810,
                1867
            ],
            "filename": "Either.js",
            "lineno": 97,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003588",
                "name": "Either.Right",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            }
        },
        "undocumented": true,
        "name": "Right",
        "longname": "Either.Right",
        "kind": "function",
        "memberof": "Either",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1869,
                1890
            ],
            "filename": "Either.js",
            "lineno": 101,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003599",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Just\n * @param val\n * @returns {Just}\n * @constructor\n */",
        "meta": {
            "range": [
                76,
                136
            ],
            "filename": "Just.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003604",
                "name": "Just",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.__value": "Just#__value"
            }
        },
        "kind": "class",
        "classdesc": "Just",
        "params": [
            {
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Just"
                    ]
                }
            }
        ],
        "name": "Just",
        "longname": "Just",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                120
            ],
            "filename": "Just.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003610",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Just#__value",
        "kind": "member",
        "memberof": "Just",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Just\n * @function Just#isJust\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Just.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Just",
        "kind": "function",
        "name": "isJust",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Just#isJust",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                211,
                264
            ],
            "filename": "Just.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003618",
                "name": "Just.prototype.isJust",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isJust",
        "longname": "Just#isJust",
        "kind": "function",
        "memberof": "Just",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Just\n * @function Just#isNothing\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Just.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Just",
        "kind": "function",
        "name": "isNothing",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Just#isNothing",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                342,
                399
            ],
            "filename": "Just.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003629",
                "name": "Just.prototype.isNothing",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNothing",
        "longname": "Just#isNothing",
        "kind": "function",
        "memberof": "Just",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                401,
                420
            ],
            "filename": "Just.js",
            "lineno": 30,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003639",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Left\n * @param val\n * @returns {Left}\n * @constructor\n */",
        "meta": {
            "range": [
                76,
                136
            ],
            "filename": "Left.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003644",
                "name": "Left",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.__value": "Left#__value"
            }
        },
        "kind": "class",
        "classdesc": "Left",
        "params": [
            {
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "name": "Left",
        "longname": "Left",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                102,
                120
            ],
            "filename": "Left.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003650",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Left#__value",
        "kind": "member",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @property {String} type - Returns the string 'Left' for all Either objects\n * @type {String}\n * @example\n *\n * const m =  Either.of([[1,2],[2,3],[4,5]])\n * m.type === 'Left'\n */",
        "meta": {
            "range": [
                341,
                369
            ],
            "filename": "Left.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003658",
                "name": "Left.prototype.type",
                "type": "Literal",
                "value": "Left",
                "paramnames": []
            }
        },
        "memberof": "Left",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Returns the string 'Left' for all Either objects",
                "name": "type"
            }
        ],
        "type": {
            "names": [
                "String"
            ]
        },
        "examples": [
            "const m =  Either.of([[1,2],[2,3],[4,5]])\nm.type === 'Left'"
        ],
        "name": "type",
        "longname": "Left#type",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#isLeft\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "isLeft",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Left#isLeft",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                444,
                497
            ],
            "filename": "Left.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003666",
                "name": "Left.prototype.isLeft",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLeft",
        "longname": "Left#isLeft",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#isRight\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "isRight",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Left#isRight",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                573,
                628
            ],
            "filename": "Left.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003677",
                "name": "Left.prototype.isRight",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isRight",
        "longname": "Left#isRight",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#ap\n * @param {*} b\n * @returns {Left}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "ap",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "longname": "Left#ap",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                712,
                762
            ],
            "filename": "Left.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003688",
                "name": "Left.prototype.ap",
                "type": "FunctionExpression",
                "paramnames": [
                    "b"
                ]
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "Left#ap",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#map\n * @param {Function} f\n * @returns {Left}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "map",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "longname": "Left#map",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                854,
                905
            ],
            "filename": "Left.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003700",
                "name": "Left.prototype.map",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Left#map",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#chain\n * @param {Function} f\n * @returns {Left}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 61,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "chain",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Left"
                    ]
                }
            }
        ],
        "longname": "Left#chain",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                999,
                1052
            ],
            "filename": "Left.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003712",
                "name": "Left.prototype.chain",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "Left#chain",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#toString\n * @returns {String}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "toString",
        "returns": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                }
            }
        ],
        "longname": "Left#toString",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1128,
                1214
            ],
            "filename": "Left.js",
            "lineno": 76,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003724",
                "name": "Left.prototype.toString",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "Left#toString",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#cata\n * @param {Function} f\n * @param {Placeholder} _\n * @returns {*}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 80,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "cata",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            },
            {
                "type": {
                    "names": [
                        "Placeholder"
                    ]
                },
                "name": "_"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Left#cata",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1330,
                1396
            ],
            "filename": "Left.js",
            "lineno": 87,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003741",
                "name": "Left.prototype.cata",
                "type": "FunctionExpression",
                "paramnames": [
                    "f",
                    "_"
                ]
            }
        },
        "undocumented": true,
        "name": "cata",
        "longname": "Left#cata",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#get\n * @throws {TypeError}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 91,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "get",
        "exceptions": [
            {
                "type": {
                    "names": [
                        "TypeError"
                    ]
                }
            }
        ],
        "longname": "Left#get",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1469,
                1568
            ],
            "filename": "Left.js",
            "lineno": 96,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003758",
                "name": "Left.prototype.get",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "Left#get",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Left\n * @function Left#getOrElse\n * @param {*} a\n * @returns {*}\n */",
        "meta": {
            "filename": "Left.js",
            "lineno": 100,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Left",
        "kind": "function",
        "name": "getOrElse",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Left#getOrElse",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1656,
                1710
            ],
            "filename": "Left.js",
            "lineno": 106,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003771",
                "name": "Left.prototype.getOrElse",
                "type": "FunctionExpression",
                "paramnames": [
                    "a"
                ]
            }
        },
        "undocumented": true,
        "name": "getOrElse",
        "longname": "Left#getOrElse",
        "kind": "function",
        "memberof": "Left",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1712,
                1731
            ],
            "filename": "Left.js",
            "lineno": 110,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003782",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Maybe\n * @desc Maybe monad provides a way to safely wrap null values\n * @param {*} val - Value to be wrapped\n * @constructor\n * @example\n *\n * const m = Maybe.of(props.customers).map(contract => customer[0]).getOrElse('No customer found')\n */",
        "meta": {
            "range": [
                320,
                367
            ],
            "filename": "Maybe.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003795",
                "name": "Maybe",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.__value": "Maybe#__value"
            }
        },
        "kind": "class",
        "classdesc": "Maybe",
        "description": "Maybe monad provides a way to safely wrap null values",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Value to be wrapped",
                "name": "val"
            }
        ],
        "examples": [
            "const m = Maybe.of(props.customers).map(contract => customer[0]).getOrElse('No customer found')"
        ],
        "name": "Maybe",
        "longname": "Maybe",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                347,
                365
            ],
            "filename": "Maybe.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003801",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Maybe#__value",
        "kind": "member",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe.of\n * @desc Creates a Maybe monad from the provided argument\n * @param {*} val - Val to turn in to a Maybe monad, can be a function\n * @returns {Maybe}\n * @example\n *\n * const m = Maybe.of(props.customers).map(customer => customer[0]).getOrElse('No customer found')\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "of",
        "description": "Creates a Maybe monad from the provided argument",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Val to turn in to a Maybe monad, can be a function",
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Maybe"
                    ]
                }
            }
        ],
        "examples": [
            "const m = Maybe.of(props.customers).map(customer => customer[0]).getOrElse('No customer found')"
        ],
        "longname": "Maybe.of",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                682,
                848
            ],
            "filename": "Maybe.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003807",
                "name": "Maybe.of",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "this.__value": "Maybe.of#__value"
            }
        },
        "undocumented": true,
        "name": "of",
        "longname": "Maybe.of",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                784,
                802
            ],
            "filename": "Maybe.js",
            "lineno": 31,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003826",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Maybe.of#__value",
        "kind": "member",
        "memberof": "Maybe.of",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @property {String} type - Returns the string 'Maybe' for all Maybe objects\n * @type {String}\n * @example\n *\n * const m =  Maybe.of([[1,2],[2,3],[4,5]])\n * m.type === 'Maybe'\n */",
        "meta": {
            "range": [
                1054,
                1084
            ],
            "filename": "Maybe.js",
            "lineno": 46,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003838",
                "name": "Maybe.prototype.type",
                "type": "Literal",
                "value": "Maybe",
                "paramnames": []
            }
        },
        "memberof": "Maybe",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Returns the string 'Maybe' for all Maybe objects",
                "name": "type"
            }
        ],
        "type": {
            "names": [
                "String"
            ]
        },
        "examples": [
            "const m =  Maybe.of([[1,2],[2,3],[4,5]])\nm.type === 'Maybe'"
        ],
        "name": "type",
        "longname": "Maybe#type",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe#getOrElse\n * @desc Evaluates the Maybe monad and returns either the value from the Maybe or the default value\n * @param {*} n - Default value to return if the Maybe evaluates to undefined or null\n * @returns {*}\n * @example\n *\n * // Get customer from component props\n * const m = Maybe.of(props.customers).map(customer => customer.filter(custObj => custObj.id = 'c001112')).getOrElse([])\n * // Map over the provided array\n * m.map(x => <div>Customer ID: {x.id} </div>)\n *\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 48,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "getOrElse",
        "description": "Evaluates the Maybe monad and returns either the value from the Maybe or the default value",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Default value to return if the Maybe evaluates to undefined or null",
                "name": "n"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "examples": [
            "// Get customer from component props\nconst m = Maybe.of(props.customers).map(customer => customer.filter(custObj => custObj.id = 'c001112')).getOrElse([])\n// Map over the provided array\nm.map(x => <div>Customer ID: {x.id} </div>)"
        ],
        "longname": "Maybe#getOrElse",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1604,
                1693
            ],
            "filename": "Maybe.js",
            "lineno": 62,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003846",
                "name": "Maybe.prototype.getOrElse",
                "type": "FunctionExpression",
                "paramnames": [
                    "n"
                ]
            }
        },
        "undocumented": true,
        "name": "getOrElse",
        "longname": "Maybe#getOrElse",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe#map\n * @param {Function} f\n * @returns {Maybe}\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 66,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "map",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Maybe"
                    ]
                }
            }
        ],
        "longname": "Maybe#map",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1788,
                1917
            ],
            "filename": "Maybe.js",
            "lineno": 72,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003866",
                "name": "Maybe.prototype.map",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Maybe#map",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe#flatMap\n * @param {Function} f\n * @returns {Maybe}\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 79,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "flatMap",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Maybe"
                    ]
                }
            }
        ],
        "longname": "Maybe#flatMap",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2016,
                2079
            ],
            "filename": "Maybe.js",
            "lineno": 85,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003898",
                "name": "Maybe.prototype.flatMap",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "Maybe#flatMap",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Mayeb#ap\n * @param {Maybe} m\n * @returns {Maybe}\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 89,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe.Mayeb",
        "kind": "function",
        "name": "ap",
        "params": [
            {
                "type": {
                    "names": [
                        "Maybe"
                    ]
                },
                "name": "m"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Maybe"
                    ]
                }
            }
        ],
        "scope": "instance",
        "longname": "Maybe.Mayeb#ap"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2170,
                2246
            ],
            "filename": "Maybe.js",
            "lineno": 95,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003914",
                "name": "Maybe.prototype.ap",
                "type": "FunctionExpression",
                "paramnames": [
                    "m"
                ]
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "Maybe#ap",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe#isNothing\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 99,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "isNothing",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Maybe#isNothing",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2326,
                2401
            ],
            "filename": "Maybe.js",
            "lineno": 104,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003936",
                "name": "Maybe.prototype.isNothing",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNothing",
        "longname": "Maybe#isNothing",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Maybe\n * @function Maybe#isJust\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 108,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Maybe",
        "kind": "function",
        "name": "isJust",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Maybe#isJust",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2478,
                2545
            ],
            "filename": "Maybe.js",
            "lineno": 113,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003951",
                "name": "Maybe.prototype.isJust",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isJust",
        "longname": "Maybe#isJust",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Maybe\n * @function Maybe#Nothing\n * @returns {Nothing}\n * @constructor\n */",
        "meta": {
            "filename": "Maybe.js",
            "lineno": 117,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "access": "private",
        "memberof": "Maybe",
        "kind": "class",
        "name": "Nothing",
        "returns": [
            {
                "type": {
                    "names": [
                        "Nothing"
                    ]
                }
            }
        ],
        "longname": "Maybe#Nothing",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2651,
                2715
            ],
            "filename": "Maybe.js",
            "lineno": 124,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003966",
                "name": "Maybe.prototype.Nothing",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Nothing",
        "longname": "Maybe#Nothing",
        "kind": "function",
        "memberof": "Maybe",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @private\n * @memberOf Maybe\n * @fucntion Maybe#Just\n * @returns {Just}\n * @constructor\n */",
        "meta": {
            "range": [
                2815,
                2884
            ],
            "filename": "Maybe.js",
            "lineno": 135,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003978",
                "name": "Maybe.prototype.Just",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "access": "private",
        "memberof": "Maybe",
        "tags": [
            {
                "originalTitle": "fucntion",
                "title": "fucntion",
                "text": "Maybe#Just",
                "value": "Maybe#Just"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Just"
                    ]
                }
            }
        ],
        "kind": "class",
        "name": "Just",
        "longname": "Maybe#Just",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2886,
                2906
            ],
            "filename": "Maybe.js",
            "lineno": 139,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003992",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Nothing\n * @constructor\n */",
        "meta": {
            "range": [
                46,
                71
            ],
            "filename": "Nothing.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100003997",
                "name": "Nothing",
                "type": "FunctionExpression"
            }
        },
        "kind": "class",
        "classdesc": "Nothing",
        "name": "Nothing",
        "longname": "Nothing",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @memberOf Nothing\n * @function Nothing#isJust\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Nothing.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Nothing",
        "kind": "function",
        "name": "isJust",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Nothing#isJust",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                152,
                209
            ],
            "filename": "Nothing.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004002",
                "name": "Nothing.prototype.isJust",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isJust",
        "longname": "Nothing#isJust",
        "kind": "function",
        "memberof": "Nothing",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Nothing\n * @function Nothing#isNothing\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Nothing.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Nothing",
        "kind": "function",
        "name": "isNothing",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Nothing#isNothing",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                293,
                352
            ],
            "filename": "Nothing.js",
            "lineno": 22,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004013",
                "name": "Nothing.prototype.isNothing",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isNothing",
        "longname": "Nothing#isNothing",
        "kind": "function",
        "memberof": "Nothing",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                354,
                376
            ],
            "filename": "Nothing.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004023",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @class Right\n * @param val\n * @returns {Right}\n * @constructor\n */",
        "meta": {
            "range": [
                78,
                139
            ],
            "filename": "Right.js",
            "lineno": 7,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004028",
                "name": "Right",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.__value": "Right#__value"
            }
        },
        "kind": "class",
        "classdesc": "Right",
        "params": [
            {
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Right"
                    ]
                }
            }
        ],
        "name": "Right",
        "longname": "Right",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                105,
                123
            ],
            "filename": "Right.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004034",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Right#__value",
        "kind": "member",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @property {String} type - Returns the string 'Right' for all Either objects\n * @type {String}\n * @example\n *\n * const m =  Either.of([[1,2],[2,3],[4,5]])\n * m.type === 'Right'\n */",
        "meta": {
            "range": [
                347,
                377
            ],
            "filename": "Right.js",
            "lineno": 21,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004042",
                "name": "Right.prototype.type",
                "type": "Literal",
                "value": "Right",
                "paramnames": []
            }
        },
        "memberof": "Right",
        "properties": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "description": "Returns the string 'Right' for all Either objects",
                "name": "type"
            }
        ],
        "type": {
            "names": [
                "String"
            ]
        },
        "examples": [
            "const m =  Either.of([[1,2],[2,3],[4,5]])\nm.type === 'Right'"
        ],
        "name": "type",
        "longname": "Right#type",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#isRight\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "isRight",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Right#isRight",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                455,
                510
            ],
            "filename": "Right.js",
            "lineno": 28,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004050",
                "name": "Right.prototype.isRight",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isRight",
        "longname": "Right#isRight",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#isLeft\n * @returns {boolean}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "isLeft",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "longname": "Right#isLeft",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                587,
                642
            ],
            "filename": "Right.js",
            "lineno": 37,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004061",
                "name": "Right.prototype.isLeft",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "isLeft",
        "longname": "Right#isLeft",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#ap\n * @param a\n * @returns {Right}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 41,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "ap",
        "params": [
            {
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Right"
                    ]
                }
            }
        ],
        "longname": "Right#ap",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                725,
                791
            ],
            "filename": "Right.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004072",
                "name": "Right.prototype.ap",
                "type": "FunctionExpression",
                "paramnames": [
                    "b"
                ]
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "Right#ap",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#map\n * @param {Function} f\n * @returns {*}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 51,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "map",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Right#map",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                882,
                956
            ],
            "filename": "Right.js",
            "lineno": 57,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004090",
                "name": "Right.prototype.map",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Right#map",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#chain\n * @param {Function} f\n * @returns {*}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 61,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "chain",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Right#chain",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1049,
                1114
            ],
            "filename": "Right.js",
            "lineno": 67,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004108",
                "name": "Right.prototype.chain",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "chain",
        "longname": "Right#chain",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#toString\n * @returns {string}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 71,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "toString",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                }
            }
        ],
        "longname": "Right#toString",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1192,
                1280
            ],
            "filename": "Right.js",
            "lineno": 76,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004124",
                "name": "Right.prototype.toString",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "toString",
        "longname": "Right#toString",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#cata\n * @param {Placeholder} _\n * @param {Function} g\n * @returns {*}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 80,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "cata",
        "params": [
            {
                "type": {
                    "names": [
                        "Placeholder"
                    ]
                },
                "name": "_"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "g"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Right#cata",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1398,
                1465
            ],
            "filename": "Right.js",
            "lineno": 87,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004141",
                "name": "Right.prototype.cata",
                "type": "FunctionExpression",
                "paramnames": [
                    "_",
                    "g"
                ]
            }
        },
        "undocumented": true,
        "name": "cata",
        "longname": "Right#cata",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#get\n * @returns {*}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 91,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "get",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Right#get",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1533,
                1592
            ],
            "filename": "Right.js",
            "lineno": 96,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004158",
                "name": "Right.prototype.get",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "Right#get",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Right\n * @function Right#getOrElse\n * @param {Function} f\n * @returns {*}\n */",
        "meta": {
            "filename": "Right.js",
            "lineno": 100,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {}
        },
        "memberof": "Right",
        "kind": "function",
        "name": "getOrElse",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "Right#getOrElse",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1690,
                1756
            ],
            "filename": "Right.js",
            "lineno": 107,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004171",
                "name": "Right.prototype.getOrElse",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "getOrElse",
        "longname": "Right#getOrElse",
        "kind": "function",
        "memberof": "Right",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1758,
                1778
            ],
            "filename": "Right.js",
            "lineno": 111,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/monads",
            "code": {
                "id": "astnode100004184",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function not\n */",
        "meta": {
            "filename": "not.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "not",
        "longname": "not",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                54,
                108
            ],
            "filename": "not.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100004192",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                73,
                98
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/null",
            "code": {
                "id": "astnode100004208",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns the sum of the 2 arguments\n *\n * @function add\n * @description Returns the sum of the 2 arguments\n * @since v1.0.2\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n **/",
        "meta": {
            "filename": "add.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {}
        },
        "description": "Returns the sum of the 2 arguments",
        "kind": "function",
        "name": "add",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "Number -> Number -> Number",
                "value": "Number -> Number -> Number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                }
            }
        ],
        "longname": "add",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                262,
                324
            ],
            "filename": "add.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004218",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n *\n *\n * @function divide\n * @description Returns the division of the 2 arguments\n * @since v1.0.2\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n **/",
        "meta": {
            "filename": "divide.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {}
        },
        "kind": "function",
        "name": "divide",
        "description": "Returns the division of the 2 arguments",
        "since": "v1.0.2",
        "tags": [
            {
                "originalTitle": "sig",
                "title": "sig",
                "text": "Number -> Number -> Number",
                "value": "Number -> Number -> Number"
            }
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                }
            }
        ],
        "longname": "divide",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                235,
                300
            ],
            "filename": "divide.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004238",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                44,
                71
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004258",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function isNaN\n * @description Checks if number is NAN\n\n */",
        "meta": {
            "filename": "isNan.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {}
        },
        "kind": "function",
        "name": "isNaN",
        "description": "Checks if number is NAN",
        "longname": "isNaN",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                122,
                195
            ],
            "filename": "isNan.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004272",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                137,
                195
            ],
            "filename": "isNan.js",
            "lineno": 9,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004273",
                "name": "isNan",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "x"
                ]
            }
        },
        "undocumented": true,
        "name": "isNan",
        "longname": "isNan",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                211,
                278
            ],
            "filename": "multiply.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004293",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                236,
                303
            ],
            "filename": "sum.js",
            "lineno": 14,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/number",
            "code": {
                "id": "astnode100004321",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                159,
                422
            ],
            "filename": "equals.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004352",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                203,
                207
            ],
            "filename": "equals.js",
            "lineno": 12,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004361",
                "name": "keyX"
            }
        },
        "undocumented": true,
        "name": "keyX",
        "longname": "<anonymous>~keyX",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                326,
                330
            ],
            "filename": "equals.js",
            "lineno": 17,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004380",
                "name": "keyY"
            }
        },
        "undocumented": true,
        "name": "keyY",
        "longname": "<anonymous>~keyY",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @function objectFilter\n * @private\n *\n */",
        "meta": {
            "filename": "filter.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "objectFilter",
        "access": "private",
        "longname": "objectFilter",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                105,
                286
            ],
            "filename": "filter.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004412",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                170
            ],
            "filename": "filter.js",
            "lineno": 10,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004421",
                "name": "r",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                179,
                190
            ],
            "filename": "filter.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004425",
                "name": "k",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                202,
                207
            ],
            "filename": "filter.js",
            "lineno": 12,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004432",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                251,
                268
            ],
            "filename": "filter.js",
            "lineno": 13,
            "columnno": 21,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004452",
                "name": "r[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "o[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function fold\n * @private\n *\n */",
        "meta": {
            "filename": "fold.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "fold",
        "access": "private",
        "longname": "fold",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                97,
                294
            ],
            "filename": "fold.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004475",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                156,
                167
            ],
            "filename": "fold.js",
            "lineno": 10,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004485",
                "name": "k",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                174,
                180
            ],
            "filename": "fold.js",
            "lineno": 11,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004491",
                "name": "i",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                189,
                201
            ],
            "filename": "fold.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004496",
                "name": "l",
                "type": "MemberExpression",
                "value": "k.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                208,
                224
            ],
            "filename": "fold.js",
            "lineno": 13,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004502",
                "name": "r",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                249,
                276
            ],
            "filename": "fold.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004514",
                "name": "r",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                226,
                333
            ],
            "filename": "has.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004536",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                251,
                324
            ],
            "filename": "hasIn.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004561",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                60
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004579",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                251
            ],
            "filename": "keys.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004589",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                176,
                286
            ],
            "filename": "keysIn.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004610",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                225,
                231
            ],
            "filename": "keysIn.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004618",
                "name": "r",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                245,
                246
            ],
            "filename": "keysIn.js",
            "lineno": 14,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004623",
                "name": "k"
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                285,
                476
            ],
            "filename": "map.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004649",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                337,
                348
            ],
            "filename": "map.js",
            "lineno": 16,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004658",
                "name": "k",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                355,
                361
            ],
            "filename": "map.js",
            "lineno": 17,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004664",
                "name": "i",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                370,
                382
            ],
            "filename": "map.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004669",
                "name": "l",
                "type": "MemberExpression",
                "value": "k.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                391,
                403
            ],
            "filename": "map.js",
            "lineno": 19,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004675",
                "name": "r",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                428,
                458
            ],
            "filename": "map.js",
            "lineno": 21,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004687",
                "name": "r[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                220,
                828
            ],
            "filename": "merge.js",
            "lineno": 12,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004729",
                "name": "merge",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "merge",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                258,
                290
            ],
            "filename": "merge.js",
            "lineno": 13,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004738",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                373,
                376
            ],
            "filename": "merge.js",
            "lineno": 18,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004761",
                "name": "key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~key",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                479,
                499
            ],
            "filename": "merge.js",
            "lineno": 22,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004780",
                "name": "oldValue",
                "type": "MemberExpression",
                "value": "objR[undefined]"
            }
        },
        "undocumented": true,
        "name": "oldValue",
        "longname": "<anonymous>~oldValue",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                510,
                530
            ],
            "filename": "merge.js",
            "lineno": 23,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004786",
                "name": "newValue",
                "type": "MemberExpression",
                "value": "objL[undefined]"
            }
        },
        "undocumented": true,
        "name": "newValue",
        "longname": "<anonymous>~newValue",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                590,
                629
            ],
            "filename": "merge.js",
            "lineno": 26,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004801",
                "name": "result[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                672,
                711
            ],
            "filename": "merge.js",
            "lineno": 28,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004815",
                "name": "result[undefined]",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                731,
                753
            ],
            "filename": "merge.js",
            "lineno": 30,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004825",
                "name": "result[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "oldValue",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                830,
                850
            ],
            "filename": "merge.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004832",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                72,
                278
            ],
            "filename": "omit.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004840",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                117,
                128
            ],
            "filename": "omit.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004848",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                232,
                254
            ],
            "filename": "omit.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004879",
                "name": "result[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "obj[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function path\n */",
        "meta": {
            "filename": "path.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "path",
        "longname": "path",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                355
            ],
            "filename": "path.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004894",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                111,
                120
            ],
            "filename": "path.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004903",
                "name": "val",
                "type": "Identifier",
                "value": "obj"
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "<anonymous>~val",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                127,
                134
            ],
            "filename": "path.js",
            "lineno": 8,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004907",
                "name": "idx",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "idx",
        "longname": "<anonymous>~idx",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                141,
                142
            ],
            "filename": "path.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004911",
                "name": "p"
            }
        },
        "undocumented": true,
        "name": "p",
        "longname": "<anonymous>~p",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                219,
                232
            ],
            "filename": "path.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004927",
                "name": "p",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "path[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "p",
        "longname": "<anonymous>~p",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                237,
                322
            ],
            "filename": "path.js",
            "lineno": 15,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004933",
                "name": "val",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "<anonymous>~val",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                327,
                335
            ],
            "filename": "path.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004959",
                "name": "idx",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "idx",
        "longname": "<anonymous>~idx",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function pick\n * @description returns a new bject with only the props that are provided\n * @param {Array} props - Array of property names\n * @param {Object} obj - The object from which to take the properties\n * @return {Object}\n */",
        "meta": {
            "filename": "pick.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "pick",
        "description": "returns a new bject with only the props that are provided",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array of property names",
                "name": "props"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "The object from which to take the properties",
                "name": "obj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "longname": "pick",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                270,
                471
            ],
            "filename": "pick.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004970",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                328,
                334
            ],
            "filename": "pick.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004979",
                "name": "r",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                341,
                346
            ],
            "filename": "pick.js",
            "lineno": 12,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100004983",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                409,
                436
            ],
            "filename": "pick.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005001",
                "name": "r[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "obj[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                447,
                453
            ],
            "filename": "pick.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005013",
                "name": "i",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function prop\n */",
        "meta": {
            "filename": "prop.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "prop",
        "longname": "prop",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                120
            ],
            "filename": "prop.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005024",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function values\n * @description REturns a list of values taken from an objects own properties\n * @param {object} - obj The object from which to take the values\n * @return {array}\n *\n **/",
        "meta": {
            "filename": "values.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {}
        },
        "kind": "function",
        "name": "values",
        "description": "REturns a list of values taken from an objects own properties",
        "params": [
            {
                "type": {
                    "names": [
                        "object"
                    ]
                },
                "description": "obj The object from which to take the values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "longname": "values",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                262,
                445
            ],
            "filename": "values.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005046",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                316,
                329
            ],
            "filename": "values.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005054",
                "name": "k",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "<anonymous>~k",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                338,
                350
            ],
            "filename": "values.js",
            "lineno": 13,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005060",
                "name": "l",
                "type": "MemberExpression",
                "value": "k.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                359,
                365
            ],
            "filename": "values.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005066",
                "name": "r",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                372,
                377
            ],
            "filename": "values.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005070",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                400,
                416
            ],
            "filename": "values.js",
            "lineno": 17,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005079",
                "name": "r[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "obj[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                421,
                427
            ],
            "filename": "values.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/object",
            "code": {
                "id": "astnode100005089",
                "name": "i",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function or\n * @description Returns true if one or the other is true\n */",
        "meta": {
            "filename": "or.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "or",
        "description": "Returns true if one or the other is true",
        "longname": "or",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                110,
                170
            ],
            "filename": "or.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005100",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns a single item by iterating over an array like object and call a function on each item, starting from the first item in the iterator\n * The initial value is taken from the iterator.\n * Reduce works only on Arrays and returns a valueof the type of the first element in the Array\n *\n * @function reduce\n * @desc Returns a single item by iterating over an array like object and call a function on each item, starting from the first item in the iterator\n * @since v1.0.4\n * @param {Function} cb - receives 4 values: the accumulator, the item, the index, and the initial value.\n * @param {Array} a - The iterator to apply the function\n * @return {*}\n **/",
        "meta": {
            "filename": "reduce.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns a single item by iterating over an array like object and call a function on each item, starting from the first item in the iterator",
        "kind": "function",
        "name": "reduce",
        "since": "v1.0.4",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "receives 4 values: the accumulator, the item, the index, and the initial value.",
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The iterator to apply the function",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "longname": "reduce",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                725,
                854
            ],
            "filename": "reduce.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005122",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                780,
                795
            ],
            "filename": "reduce.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005131",
                "name": "arr",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "arr",
        "longname": "<anonymous>~arr",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                804,
                822
            ],
            "filename": "reduce.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005138",
                "name": "init",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "init",
        "longname": "<anonymous>~init",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                74,
                98
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/set",
            "code": {
                "id": "astnode100005158",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Returns a copy of the list, sorted according to the function.\n *\n * @func sort\n * @since v1.0.4\n * @param {Function} comp - A sorting function\n * @param {Array} a - The list to sort\n * @return {Array} a new array with its elements sorted by the comp function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */",
        "meta": {
            "filename": "sort.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "description": "Returns a copy of the list, sorted according to the function.",
        "kind": "function",
        "name": "sort",
        "since": "v1.0.4",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "A sorting function",
                "name": "comp"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "The list to sort",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "a new array with its elements sorted by the comp function."
            }
        ],
        "examples": [
            "const diff = function(a, b) { return a - b; };\n     sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]"
        ],
        "longname": "sort",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                419,
                521
            ],
            "filename": "sort.js",
            "lineno": 16,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005168",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @private\n * @function stringConcat\n */",
        "meta": {
            "filename": "concat.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {}
        },
        "access": "private",
        "kind": "function",
        "name": "stringConcat",
        "longname": "stringConcat",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                47,
                176
            ],
            "filename": "concat.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005193",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                62,
                176
            ],
            "filename": "concat.js",
            "lineno": 6,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005194",
                "name": "concat",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b"
                ]
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "concat",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                133,
                403
            ],
            "filename": "formatString.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005221",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                148,
                403
            ],
            "filename": "formatString.js",
            "lineno": 8,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005222",
                "name": "formatString",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "str"
                ]
            },
            "vars": {
                "args": "formatString~args",
                "": null
            }
        },
        "undocumented": true,
        "name": "formatString",
        "longname": "formatString",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                241,
                266
            ],
            "filename": "formatString.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005227",
                "name": "args",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "args",
        "longname": "formatString~args",
        "kind": "member",
        "memberof": "formatString",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                33,
                60
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005267",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                233,
                392
            ],
            "filename": "map.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005277",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                283,
                289
            ],
            "filename": "map.js",
            "lineno": 14,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005286",
                "name": "i",
                "type": "UnaryExpression",
                "value": -1
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                298,
                310
            ],
            "filename": "map.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005291",
                "name": "l",
                "type": "MemberExpression",
                "value": "a.length"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                317,
                323
            ],
            "filename": "map.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005297",
                "name": "r",
                "type": "Literal",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                348,
                374
            ],
            "filename": "map.js",
            "lineno": 18,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src/string",
            "code": {
                "id": "astnode100005307",
                "name": "r",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function truthy\n * @desc Validates if a value exists and is not false\n * @param {*} x - Any valid javascript value\n * @example\n *\n * truthy([])        // true\n * truthy(0)         // true\n * truthy(-1)        // true\n * truthy(false)     // false\n * truthy(null)      // false\n * truthy(undefined) // false\n *\n */",
        "meta": {
            "filename": "truthy.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "truthy",
        "description": "Validates if a value exists and is not false",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Any valid javascript value",
                "name": "x"
            }
        ],
        "examples": [
            "truthy([])        // true\ntruthy(0)         // true\ntruthy(-1)        // true\ntruthy(false)     // false\ntruthy(null)      // false\ntruthy(undefined) // false"
        ],
        "longname": "truthy",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                393,
                475
            ],
            "filename": "truthy.js",
            "lineno": 19,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005330",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function type\n * @desc Returns the type of the passed value\n * @param {*} a - Any valid javascript value\n * @return {Boolean}\n * @see is\n * @example\n *\n * const isArray = (arr) => type(arr) === 'Array'\n * isArray([]) // true\n *\n */",
        "meta": {
            "filename": "type.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "type",
        "description": "Returns the type of the passed value",
        "params": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                },
                "description": "Any valid javascript value",
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "see": [
            "is"
        ],
        "examples": [
            "const isArray = (arr) => type(arr) === 'Array'\nisArray([]) // true"
        ],
        "longname": "type",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                280,
                380
            ],
            "filename": "type.js",
            "lineno": 15,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005351",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                73,
                103
            ],
            "filename": "is.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src/undefined",
            "code": {
                "id": "astnode100005380",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function zip\n * @desc Autocurried function that zips 2 arrays into an Array of pairs\n * @param {Array} a - Array to zip\n * @param {Array} b - Array to zip\n * @returns {Array}\n * @example\n *\n * const a = [1, 2, 3]\n * const b = [100, 200, 300]\n * zip(a, b) // [[100, 1], [200, 2], [300, 3]]\n *\n */",
        "meta": {
            "filename": "zip.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "zip",
        "description": "Autocurried function that zips 2 arrays into an Array of pairs",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to zip",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to zip",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "examples": [
            "const a = [1, 2, 3]\nconst b = [100, 200, 300]\nzip(a, b) // [[100, 1], [200, 2], [300, 3]]"
        ],
        "longname": "zip",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                365,
                477
            ],
            "filename": "zip.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005394",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function zipObj\n * @desc Autocurried function that zips 2 Arrays into 1 Object\n * @param {Array} a - Array containing the keys of the returned object\n * @param {Array} b - Array containing the values of the returned object\n * @return {Object}\n * @example\n *\n * const keys = ['a', 'b', 'c']\n * const values = [0, 1, 2]\n * zipObj(keys, values // {'a': 0, 'b': 1, 'c': 2}\n *\n */",
        "meta": {
            "filename": "zipObj.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "zipObj",
        "description": "Autocurried function that zips 2 Arrays into 1 Object",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array containing the keys of the returned object",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array containing the values of the returned object",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                }
            }
        ],
        "examples": [
            "const keys = ['a', 'b', 'c']\nconst values = [0, 1, 2]\nzipObj(keys, values // {'a': 0, 'b': 1, 'c': 2}"
        ],
        "longname": "zipObj",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                414,
                589
            ],
            "filename": "zipObj.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005422",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                466,
                471
            ],
            "filename": "zipObj.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005431",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                478,
                510
            ],
            "filename": "zipObj.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005435",
                "name": "l",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "<anonymous>~l",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                517,
                523
            ],
            "filename": "zipObj.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005448",
                "name": "r",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "<anonymous>~r",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                546,
                560
            ],
            "filename": "zipObj.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005457",
                "name": "r[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "b[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~r.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~r",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                565,
                571
            ],
            "filename": "zipObj.js",
            "lineno": 23,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005467",
                "name": "i",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n * @function zipWith\n * @desc Combines the values of 2 arrays into 1 array using a callback function\n * @param {Function} cb - Callback function accepting 2 parameters\n * @param {Array} a - Array to zip\n * @param {Array} b - Array to zip\n * @returns {Array}\n * @example\n *\n * const a = [1, 2, 3]\n * const b = [100, 200, 300]\n * zipWith(add, a, b) // [101, 202, 303]\n *\n */",
        "meta": {
            "filename": "zipWith.js",
            "lineno": 2,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {}
        },
        "kind": "function",
        "name": "zipWith",
        "description": "Combines the values of 2 arrays into 1 array using a callback function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "Callback function accepting 2 parameters",
                "name": "cb"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to zip",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "Array to zip",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "examples": [
            "const a = [1, 2, 3]\nconst b = [100, 200, 300]\nzipWith(add, a, b) // [101, 202, 303]"
        ],
        "longname": "zipWith",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                406,
                607
            ],
            "filename": "zipWith.js",
            "lineno": 17,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005478",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                465,
                473
            ],
            "filename": "zipWith.js",
            "lineno": 18,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005488",
                "name": "arr",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "arr",
        "longname": "<anonymous>~arr",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                482,
                516
            ],
            "filename": "zipWith.js",
            "lineno": 19,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005492",
                "name": "len",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "<anonymous>~len",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                523,
                528
            ],
            "filename": "zipWith.js",
            "lineno": 20,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005505",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                536,
                541
            ],
            "filename": "zipWith.js",
            "lineno": 21,
            "columnno": 7,
            "path": "/Volumes/BigOne/github/fun/src",
            "code": {
                "id": "astnode100005509",
                "name": "i",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "<anonymous>~i",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Volumes/BigOne/github/fun/src/addIndex.js",
            "/Volumes/BigOne/github/fun/src/adjust.js",
            "/Volumes/BigOne/github/fun/src/adjustWith.js",
            "/Volumes/BigOne/github/fun/src/all.js",
            "/Volumes/BigOne/github/fun/src/allPass.js",
            "/Volumes/BigOne/github/fun/src/always.js",
            "/Volumes/BigOne/github/fun/src/and.js",
            "/Volumes/BigOne/github/fun/src/any.js",
            "/Volumes/BigOne/github/fun/src/anyPass.js",
            "/Volumes/BigOne/github/fun/src/ap.js",
            "/Volumes/BigOne/github/fun/src/aperture.js",
            "/Volumes/BigOne/github/fun/src/append.js",
            "/Volumes/BigOne/github/fun/src/apply.js",
            "/Volumes/BigOne/github/fun/src/array/concat.js",
            "/Volumes/BigOne/github/fun/src/array/equals.js",
            "/Volumes/BigOne/github/fun/src/array/filter.js",
            "/Volumes/BigOne/github/fun/src/array/fold.js",
            "/Volumes/BigOne/github/fun/src/array/is.js",
            "/Volumes/BigOne/github/fun/src/array/map.js",
            "/Volumes/BigOne/github/fun/src/array/to.js",
            "/Volumes/BigOne/github/fun/src/array/union.js",
            "/Volumes/BigOne/github/fun/src/binary.js",
            "/Volumes/BigOne/github/fun/src/bind.js",
            "/Volumes/BigOne/github/fun/src/boolean/F.js",
            "/Volumes/BigOne/github/fun/src/boolean/T.js",
            "/Volumes/BigOne/github/fun/src/boolean/both.js",
            "/Volumes/BigOne/github/fun/src/boolean/is.js",
            "/Volumes/BigOne/github/fun/src/call.js",
            "/Volumes/BigOne/github/fun/src/complement.js",
            "/Volumes/BigOne/github/fun/src/compose.js",
            "/Volumes/BigOne/github/fun/src/concat.js",
            "/Volumes/BigOne/github/fun/src/cond.js",
            "/Volumes/BigOne/github/fun/src/constants/DATE_TOKENS.js",
            "/Volumes/BigOne/github/fun/src/constants/DATE_UNITS.js",
            "/Volumes/BigOne/github/fun/src/constants/MONTHS.js",
            "/Volumes/BigOne/github/fun/src/constants/WEEKDAYS.js",
            "/Volumes/BigOne/github/fun/src/curry.js",
            "/Volumes/BigOne/github/fun/src/date/diffDate.js",
            "/Volumes/BigOne/github/fun/src/date/formatDateTime.js",
            "/Volumes/BigOne/github/fun/src/date/getWeek.js",
            "/Volumes/BigOne/github/fun/src/date/is.js",
            "/Volumes/BigOne/github/fun/src/date/isFutureDate.js",
            "/Volumes/BigOne/github/fun/src/date/isValid.js",
            "/Volumes/BigOne/github/fun/src/date/toDay.js",
            "/Volumes/BigOne/github/fun/src/date/toHour.js",
            "/Volumes/BigOne/github/fun/src/date/toMinutes.js",
            "/Volumes/BigOne/github/fun/src/date/toSeconds.js",
            "/Volumes/BigOne/github/fun/src/defaultTo.js",
            "/Volumes/BigOne/github/fun/src/empty.js",
            "/Volumes/BigOne/github/fun/src/equals.js",
            "/Volumes/BigOne/github/fun/src/exists.js",
            "/Volumes/BigOne/github/fun/src/filter.js",
            "/Volumes/BigOne/github/fun/src/findIndex.js",
            "/Volumes/BigOne/github/fun/src/first.js",
            "/Volumes/BigOne/github/fun/src/flatMap.js",
            "/Volumes/BigOne/github/fun/src/fold.js",
            "/Volumes/BigOne/github/fun/src/identical.js",
            "/Volumes/BigOne/github/fun/src/identity.js",
            "/Volumes/BigOne/github/fun/src/index.js",
            "/Volumes/BigOne/github/fun/src/is.js",
            "/Volumes/BigOne/github/fun/src/isEmpty.js",
            "/Volumes/BigOne/github/fun/src/iterator/is.js",
            "/Volumes/BigOne/github/fun/src/iterator/map.js",
            "/Volumes/BigOne/github/fun/src/keys.js",
            "/Volumes/BigOne/github/fun/src/last.js",
            "/Volumes/BigOne/github/fun/src/lift.js",
            "/Volumes/BigOne/github/fun/src/map/filter.js",
            "/Volumes/BigOne/github/fun/src/map/is.js",
            "/Volumes/BigOne/github/fun/src/map/keys.js",
            "/Volumes/BigOne/github/fun/src/map/map.js",
            "/Volumes/BigOne/github/fun/src/map.js",
            "/Volumes/BigOne/github/fun/src/max.js",
            "/Volumes/BigOne/github/fun/src/min.js",
            "/Volumes/BigOne/github/fun/src/monads/Either.js",
            "/Volumes/BigOne/github/fun/src/monads/Just.js",
            "/Volumes/BigOne/github/fun/src/monads/Left.js",
            "/Volumes/BigOne/github/fun/src/monads/Maybe.js",
            "/Volumes/BigOne/github/fun/src/monads/Nothing.js",
            "/Volumes/BigOne/github/fun/src/monads/Right.js",
            "/Volumes/BigOne/github/fun/src/not.js",
            "/Volumes/BigOne/github/fun/src/null/is.js",
            "/Volumes/BigOne/github/fun/src/number/add.js",
            "/Volumes/BigOne/github/fun/src/number/divide.js",
            "/Volumes/BigOne/github/fun/src/number/is.js",
            "/Volumes/BigOne/github/fun/src/number/isNan.js",
            "/Volumes/BigOne/github/fun/src/number/multiply.js",
            "/Volumes/BigOne/github/fun/src/number/sum.js",
            "/Volumes/BigOne/github/fun/src/object/equals.js",
            "/Volumes/BigOne/github/fun/src/object/filter.js",
            "/Volumes/BigOne/github/fun/src/object/fold.js",
            "/Volumes/BigOne/github/fun/src/object/has.js",
            "/Volumes/BigOne/github/fun/src/object/hasIn.js",
            "/Volumes/BigOne/github/fun/src/object/is.js",
            "/Volumes/BigOne/github/fun/src/object/keys.js",
            "/Volumes/BigOne/github/fun/src/object/keysIn.js",
            "/Volumes/BigOne/github/fun/src/object/map.js",
            "/Volumes/BigOne/github/fun/src/object/merge.js",
            "/Volumes/BigOne/github/fun/src/object/omit.js",
            "/Volumes/BigOne/github/fun/src/object/path.js",
            "/Volumes/BigOne/github/fun/src/object/pick.js",
            "/Volumes/BigOne/github/fun/src/object/prop.js",
            "/Volumes/BigOne/github/fun/src/object/values.js",
            "/Volumes/BigOne/github/fun/src/or.js",
            "/Volumes/BigOne/github/fun/src/reduce.js",
            "/Volumes/BigOne/github/fun/src/set/filter.js",
            "/Volumes/BigOne/github/fun/src/set/is.js",
            "/Volumes/BigOne/github/fun/src/sort.js",
            "/Volumes/BigOne/github/fun/src/string/concat.js",
            "/Volumes/BigOne/github/fun/src/string/formatString.js",
            "/Volumes/BigOne/github/fun/src/string/is.js",
            "/Volumes/BigOne/github/fun/src/string/map.js",
            "/Volumes/BigOne/github/fun/src/truthy.js",
            "/Volumes/BigOne/github/fun/src/type.js",
            "/Volumes/BigOne/github/fun/src/undefined/is.js",
            "/Volumes/BigOne/github/fun/src/zip.js",
            "/Volumes/BigOne/github/fun/src/zipObj.js",
            "/Volumes/BigOne/github/fun/src/zipWith.js"
        ]
    }
]
