!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("fun.js",[],t):"object"==typeof exports?exports["fun.js"]=t():e["fun.js"]=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function u(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,u),n.l=!0,n.exports}return u.m=e,u.c=t,u.d=function(e,t,r){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,t){if(1&t&&(e=u(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(u.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)u.d(r,n,function(t){return e[t]}.bind(null,n));return r},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="",u(u.s=38)}([function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.length;if(0===t)return e;return u([]);function u(r){return function(){return function(r,n){var f=r.concat(n);return f.length<t?u(f):e.apply(this,f)}(r,Array.prototype.slice.call(arguments))}}},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(4));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t){return(0,n.default)(t)===e});t.default=a,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){return!e});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return!(null==e)},e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(10))&&r.__esModule?r:{default:r}).default)(function(e){return Object.prototype.toString.call(e).slice(8,-1)});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=y(u(0)),n=y(u(3)),f=y(u(8)),a=y(u(4)),o=y(u(2)),l=y(u(19)),d=y(u(11)),i=y(u(12)),c=y(u(20)),s=y(u(9)),v=y(u(21)),p=y(u(13)),_=y(u(16)),b=y(u(22));function y(e){return e&&e.__esModule?e:{default:e}}var O=(0,r.default)(function(e,t){return!!(0,f.default)(e,t)||(0,a.default)(e)===(0,a.default)(t)&&(!(0,l.default)((0,o.default)((0,n.default)(e)),(0,o.default)((0,n.default)(t)))&&(e.constructor===t.constructor&&((0,v.default)(e)||(0,c.default)(e)||(0,s.default)(e)||(0,p.default)(e)?(0,f.default)(e.valueOf(),t.valueOf()):(0,i.default)(e)?(0,_.default)(e,t):!!(0,d.default)(e)&&(0,b.default)(e,t))))});t.default=O,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){return Object.keys(Object(e))});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return new e.constructor},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(17));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t){return 0===e&&0===t?1/e==1/t:e===t||!(!(0,n.default)(e)||!(0,n.default)(t))});t.default=a,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Number");t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t){return 0===arguments.length?this:e(t)}},e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Object");t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Array");t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Date");t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){return function(){return e}});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=d(u(0)),n=d(u(30)),f=d(u(28)),a=d(u(29)),o=d(u(61)),l=d(u(4));function d(e){return e&&e.__esModule?e:{default:e}}var i=(0,r.default)(function(e,t){switch((0,l.default)(t)){case"Function":return(0,r.default)(function(){return e.call(this,t.apply(this,arguments))});case"Object":return(0,f.default)(e,t);case"String":return(0,o.default)(e,t);case"Map":return(0,a.default)(e,t);default:return(0,n.default)(e,t)}});t.default=i,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(u(0)),n=a(u(2)),f=a(u(5));function a(e){return e&&e.__esModule?e:{default:e}}var o=(0,r.default)(function(e,t){if(e.length!==t.length)return!1;for(var u=0;u<e.length;u++)if((0,n.default)((0,f.default)(e[u],t[u])))return!1;return!0});t.default=o,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,n.default)((0,r.default)(e),isNaN(e))};var r=f(u(9)),n=f(u(18));function f(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return e&&t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return e||t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Boolean");t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("String");t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(u(0)),n=o(u(3)),f=o(u(2)),a=o(u(5));function o(e){return e&&e.__esModule?e:{default:e}}var l=(0,r.default)(function(e,t){for(var u in e)if((0,f.default)((0,a.default)(e[u],t[u])))return!1;for(var r in t)if((0,f.default)((0,n.default)(e[r]))&&(0,n.default)(t[r]))return!1;return!0});t.default=l,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return 1===e.length?[e[0]]:Array.apply(null,e)},e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return Array.from(new Set(e.concat(t)))});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return this._value=e,this};r.prototype.isJust=function(){return!0},r.prototype.isNothing=function(){return!1};var n=r;t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){};r.prototype.isJust=function(){return!1},r.prototype.isNothing=function(){return!0};var n=r;t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(6));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t,u){for(var r=(0,n.default)(u),f=-1,a=r.length,o=Object(t);++f<a;)o=e(o,u[r[f]],r[f],u);return o});t.default=a,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(u(0)),n=a(u(7)),f=a(u(6));function a(e){return e&&e.__esModule?e:{default:e}}var o=(0,r.default)(function(e,t){for(var u=(0,f.default)(t),r=-1,a=u.length,o=(0,n.default)(t);++r<a;)o[u[r]]=e(t[u[r]],u[r],t);return o});t.default=o,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(7));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t){var u=(0,n.default)(t);return t.forEach(function(t,r,n){u.set(r,e(t,r,n))}),u});t.default=a,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=-1,r=t.length,n=new Array(r);++u<r;)n[u]=e(t[u],u,t);return n});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(u(0)),n=l(u(10)),f=l(u(1)),a=l(u(32)),o=l(u(30));function l(e){return e&&e.__esModule?e:{default:e}}var d=(0,f.default)("Function"),i=(0,r.default)(function(e,t){return d(e.ap)?e.ap(t):d(e)?function(u){return e(u)(t(u))}:(0,a.default)(function(e,u){return e.concat((0,o.default)((0,n.default)(u),t))},[],e)});t.default=i,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t,u){for(var r=-1,n=u.length,f=t;++r<n;)f=e(f,u[r],r,u);return f});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=o(u(0)),n=o(u(32)),f=o(u(27)),a=o(u(4));function o(e){return e&&e.__esModule?e:{default:e}}var l=(0,r.default)(function(e,t,u){return{Object:f.default,Array:n.default}[(0,a.default)(u)](e,t,u)});t.default=l,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t,u){var r=[],n=Math.min(t.length,u.length),f=0;for(f=0;f<n;f++)r.push(e(t[f],u[f]));return r});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return new Date(e).getTime()-new Date(t).getTime()});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,n.default)(e)&&isFinite(e.valueOf())};var r,n=(r=u(13))&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){(e=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate()))).setUTCDate(e.getUTCDate()+4-(e.getUTCDay()||7));var t=new Date(Date.UTC(e.getUTCFullYear(),0,1)),u=Math.ceil(((e-t)/864e5+1)/7);return[e.getUTCFullYear(),u]});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"equalsArray",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(t,"isArray",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(t,"toArray",{enumerable:!0,get:function(){return f.default}}),Object.defineProperty(t,"unionArray",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(t,"isBoolean",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(t,"F",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(t,"T",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(t,"Just",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(t,"Maybe",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(t,"Nothing",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(t,"isNumber",{enumerable:!0,get:function(){return v.default}}),Object.defineProperty(t,"isNan",{enumerable:!0,get:function(){return p.default}}),Object.defineProperty(t,"add",{enumerable:!0,get:function(){return _.default}}),Object.defineProperty(t,"multiply",{enumerable:!0,get:function(){return b.default}}),Object.defineProperty(t,"divide",{enumerable:!0,get:function(){return y.default}}),Object.defineProperty(t,"equalsObject",{enumerable:!0,get:function(){return O.default}}),Object.defineProperty(t,"isObject",{enumerable:!0,get:function(){return M.default}}),Object.defineProperty(t,"mergeObject",{enumerable:!0,get:function(){return j.default}}),Object.defineProperty(t,"omitFromObject",{enumerable:!0,get:function(){return g.default}}),Object.defineProperty(t,"has",{enumerable:!0,get:function(){return P.default}}),Object.defineProperty(t,"hasIn",{enumerable:!0,get:function(){return m.default}}),Object.defineProperty(t,"keys",{enumerable:!0,get:function(){return x.default}}),Object.defineProperty(t,"keysIn",{enumerable:!0,get:function(){return h.default}}),Object.defineProperty(t,"filterObject",{enumerable:!0,get:function(){return D.default}}),Object.defineProperty(t,"foldObject",{enumerable:!0,get:function(){return S.default}}),Object.defineProperty(t,"mapObject",{enumerable:!0,get:function(){return Y.default}}),Object.defineProperty(t,"path",{enumerable:!0,get:function(){return A.default}}),Object.defineProperty(t,"pick",{enumerable:!0,get:function(){return T.default}}),Object.defineProperty(t,"prop",{enumerable:!0,get:function(){return w.default}}),Object.defineProperty(t,"concatString",{enumerable:!0,get:function(){return N.default}}),Object.defineProperty(t,"formatString",{enumerable:!0,get:function(){return E.default}}),Object.defineProperty(t,"isString",{enumerable:!0,get:function(){return H.default}}),Object.defineProperty(t,"mapFilter",{enumerable:!0,get:function(){return F.default}}),Object.defineProperty(t,"isMap",{enumerable:!0,get:function(){return W.default}}),Object.defineProperty(t,"mapKeys",{enumerable:!0,get:function(){return k.default}}),Object.defineProperty(t,"mapMap",{enumerable:!0,get:function(){return K.default}}),Object.defineProperty(t,"adjust",{enumerable:!0,get:function(){return J.default}}),Object.defineProperty(t,"adjustWith",{enumerable:!0,get:function(){return U.default}}),Object.defineProperty(t,"all",{enumerable:!0,get:function(){return C.default}}),Object.defineProperty(t,"allPass",{enumerable:!0,get:function(){return I.default}}),Object.defineProperty(t,"always",{enumerable:!0,get:function(){return G.default}}),Object.defineProperty(t,"and",{enumerable:!0,get:function(){return z.default}}),Object.defineProperty(t,"any",{enumerable:!0,get:function(){return q.default}}),Object.defineProperty(t,"anyPass",{enumerable:!0,get:function(){return B.default}}),Object.defineProperty(t,"ap",{enumerable:!0,get:function(){return Q.default}}),Object.defineProperty(t,"compose",{enumerable:!0,get:function(){return Z.default}}),Object.defineProperty(t,"curry",{enumerable:!0,get:function(){return V.default}}),Object.defineProperty(t,"defaultTo",{enumerable:!0,get:function(){return X.default}}),Object.defineProperty(t,"empty",{enumerable:!0,get:function(){return L.default}}),Object.defineProperty(t,"equals",{enumerable:!0,get:function(){return R.default}}),Object.defineProperty(t,"exists",{enumerable:!0,get:function(){return $.default}}),Object.defineProperty(t,"findIndex",{enumerable:!0,get:function(){return ee.default}}),Object.defineProperty(t,"fold",{enumerable:!0,get:function(){return te.default}}),Object.defineProperty(t,"identical",{enumerable:!0,get:function(){return ue.default}}),Object.defineProperty(t,"identity",{enumerable:!0,get:function(){return re.default}}),Object.defineProperty(t,"is",{enumerable:!0,get:function(){return ne.default}}),Object.defineProperty(t,"isEmpty",{enumerable:!0,get:function(){return fe.default}}),Object.defineProperty(t,"lift",{enumerable:!0,get:function(){return ae.default}}),Object.defineProperty(t,"map",{enumerable:!0,get:function(){return oe.default}}),Object.defineProperty(t,"max",{enumerable:!0,get:function(){return le.default}}),Object.defineProperty(t,"not",{enumerable:!0,get:function(){return de.default}}),Object.defineProperty(t,"or",{enumerable:!0,get:function(){return ie.default}}),Object.defineProperty(t,"truthy",{enumerable:!0,get:function(){return ce.default}}),Object.defineProperty(t,"type",{enumerable:!0,get:function(){return se.default}}),Object.defineProperty(t,"zip",{enumerable:!0,get:function(){return ve.default}}),Object.defineProperty(t,"zipWith",{enumerable:!0,get:function(){return pe.default}}),Object.defineProperty(t,"diffDate",{enumerable:!0,get:function(){return _e.default}}),Object.defineProperty(t,"formatDateTime",{enumerable:!0,get:function(){return be.default}}),Object.defineProperty(t,"dateIs",{enumerable:!0,get:function(){return ye.default}}),Object.defineProperty(t,"isFutureDate",{enumerable:!0,get:function(){return Oe.default}}),Object.defineProperty(t,"isValid",{enumerable:!0,get:function(){return Me.default}}),Object.defineProperty(t,"toDay",{enumerable:!0,get:function(){return je.default}}),Object.defineProperty(t,"toHour",{enumerable:!0,get:function(){return ge.default}}),Object.defineProperty(t,"toMinutes",{enumerable:!0,get:function(){return Pe.default}}),Object.defineProperty(t,"toSeconds",{enumerable:!0,get:function(){return me.default}}),Object.defineProperty(t,"getWeek",{enumerable:!0,get:function(){return xe.default}});var r=he(u(16)),n=he(u(12)),f=he(u(23)),a=he(u(24)),o=he(u(20)),l=he(u(39)),d=he(u(40)),i=he(u(25)),c=he(u(41)),s=he(u(26)),v=he(u(9)),p=he(u(17)),_=he(u(42)),b=he(u(43)),y=he(u(44)),O=he(u(22)),M=he(u(11)),j=he(u(45)),g=he(u(46)),P=he(u(47)),m=he(u(48)),x=he(u(6)),h=he(u(49)),D=he(u(50)),S=he(u(27)),Y=he(u(28)),A=he(u(51)),T=he(u(52)),w=he(u(53)),N=he(u(54)),E=he(u(55)),H=he(u(21)),F=he(u(56)),W=he(u(57)),k=he(u(58)),K=he(u(29)),J=he(u(59)),U=he(u(60)),C=he(u(62)),I=he(u(63)),G=he(u(14)),z=he(u(18)),q=he(u(64)),B=he(u(65)),Q=he(u(31)),Z=he(u(66)),V=he(u(0)),X=he(u(67)),L=he(u(7)),R=he(u(5)),$=he(u(3)),ee=he(u(68)),te=he(u(33)),ue=he(u(8)),re=he(u(69)),ne=he(u(1)),fe=he(u(70)),ae=he(u(71)),oe=he(u(15)),le=he(u(72)),de=he(u(2)),ie=he(u(19)),ce=he(u(73)),se=he(u(4)),ve=he(u(74)),pe=he(u(34)),_e=he(u(35)),be=he(u(75)),ye=he(u(13)),Oe=he(u(79)),Me=he(u(36)),je=he(u(80)),ge=he(u(81)),Pe=he(u(82)),me=he(u(83)),xe=he(u(37));function he(e){return e&&e.__esModule?e:{default:e}}},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(14))&&r.__esModule?r:{default:r}).default)(!1);t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(14))&&r.__esModule?r:{default:r}).default)(!0);t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(25)),n=f(u(26));function f(e){return e&&e.__esModule?e:{default:e}}var a=function(e){this.__value=e};a.of=function(e){return e instanceof a?e:this instanceof a?(this.__value=e,this):new a(e)},a.prototype.getOrElse=function(e){return this.isNothing()?e:this.__value},a.prototype.map=function(e){return this.isNothing()?a.of(null):a.of(e(this.__value))},a.prototype.ap=function(e){return e.map(this.__value)},a.prototype.isNothing=function(){return null==this.__value},a.prototype.isJust=function(){return!this.isNothing()},a.prototype.Nothing=function(){return new n.default},a.prototype.Just=function(){return new r.default(this._value)};var o=a;t.default=o,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return+e+ +t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return+e*+t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return+e/+t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(u(0)),n=l(u(8)),f=l(u(11)),a=l(u(12)),o=l(u(24));function l(e){return e&&e.__esModule?e:{default:e}}var d=(0,r.default)(function(e,t){var u=Object.assign({},e);if((0,n.default)(e,t))return Object.assign({},e);for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var l=t[r],i=e[r];(0,f.default)(l)&&(0,f.default)(i)?u[r]=d(l,i):(0,a.default)(i)?u[r]=(0,o.default)(i,l):u[r]=l}return u}),i=d;t.default=i,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){var u={};return Object.keys(e).filter(function(e){return-1===t.indexOf(e)}).forEach(function(t){u[t]=e[t]}),u});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return Object.prototype.hasOwnProperty.call(t,e)});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return e in t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){var t=[];for(var u in e)t.push(u);return t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(6));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t){for(var u={},r=(0,n.default)(t),f=0;f<r.length;f++)e(t[r[f]])&&(u[r[f]]=t[r[f]]);return u});t.default=a,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u,r=t,n=0;n<e.length;){if(null==r)return;u=e[n],r=Number.isInteger(u)&&u<0?r[r.length+u]:r[u],n+=1}return r});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u={},r=0;r<e.length;)e[r]in t&&(u[e[r]]=t[e[r]]),r+=1;return u});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return t[e]});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.concat=void 0;var r=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:",";return Array.prototype.slice.call(arguments,1).join(e)};t.concat=r;var n=r;t.default=n},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=(0,r.default)(arguments);return t.shift(),e.replace(/{(\d+)}/g,function(e,u){return(0,n.default)((0,f.default)("Undefined",t[u]))?t[u]:e})};var r=a(u(23)),n=a(u(2)),f=a(u(1));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=new Map,r=t.entries(),n=r.next();!n.done;){var f=n.value[0],a=n.value[1];e(f,a)&&u.set(f,a),n=r.next()}return u});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(1))&&r.__esModule?r:{default:r}).default)("Map");t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e){return e.keys()});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t,u){var r=Array.prototype.slice.call(u),n=t<0?r.length+t:t;return u[n]?(r[n]=e(r[n]),r):r});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(15));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t,u){return(0,n.default)(function(u){return t(u)?e(u):u},Array.prototype.slice.call(u))});t.default=a,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=-1,r=t.length,n="";++u<r;)n+=e(t.charAt(u),u,t);return n});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){var u=!0;for(var r in t)if(!e(t[r])){u=!1;break}return u});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=0;u<e.length;u++)if(!e[u](t))return!1;return!0});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){var u=!1;for(var r in t)if(e(t[r])){u=!0;break}return u});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=0;u<e.length;u++)if(e[u](t))return!0;return!1});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=Array.prototype.slice.call(arguments);return function(){for(var t=e[e.length-1],u=[t.apply(t,arguments)],r=e.length-2;r>=0;--r){var n=e[r];u=[n.apply(n,u)]}return u[0]}},e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return null==t||t!=t?e:t});t.default=n,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){for(var u=0,r=t.length;u<r;){if(e(t[u]))return u;u+=1}return-1});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,n.default)(e)&&(0,f.default)(e,(0,r.default)(e))};var r=a(u(7)),n=a(u(3)),f=a(u(5));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(u(0)),n=l(u(10)),f=l(u(33)),a=l(u(31)),o=l(u(15));function l(e){return e&&e.__esModule?e:{default:e}}var d=(0,r.default)(function(e){var t=(0,n.default)((0,r.default)(e));return(0,r.default)(function(){return(0,f.default)(a.default,(0,o.default)(t,arguments[0]),Array.prototype.slice.call(arguments,1))})});t.default=d,e.exports=t.default},function(e,t,u){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=(0,((r=u(0))&&r.__esModule?r:{default:r}).default)(function(e,t){return t>e?t:e});t.default=n,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return!1!==e&&(0,n.default)(e)};var r,n=(r=u(3))&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=f(u(0)),n=f(u(34));function f(e){return e&&e.__esModule?e:{default:e}}var a=(0,r.default)(function(e,t){return(0,n.default)(function(e,t){return[e,t]},e,t)});t.default=a,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=d(u(0)),n=d(u(36)),f=d(u(37)),a=u(76),o=u(77),l=u(78);function d(e){return e&&e.__esModule?e:{default:e}}var i=(0,r.default)(function(e,t){return t.substring(t.length-e,t.length)}),c=(0,r.default)(function(e,t){return t.substring(0,e)}),s=(0,r.default)(function(e,t){return i(e,"00000000"+t)}),v=function(e,t){return t%e||e},p={YYYY:function(e){return s(4,e.getFullYear())},YY:function(e){return i(2,s(4,e.getFullYear()))},MMMM:function(e){return o.MONTHS[e.getMonth()]},MMM:function(e){return c(3,o.MONTHS[e.getMonth()])},MM:function(e){return s(2,e.getMonth()+1)},M:function(e){return e.getMonth()+1},w:function(e){return(0,f.default)(e)},ww:function(e){return s(2,(0,f.default)(e))},DD:function(e){return s(2,e.getDate())},D:function(e){return e.getDate()},dddd:function(e){return a.WEEKDAYS[e.getDay()]},ddd:function(e){return c(3,a.WEEKDAYS[e.getDay()])},dd:function(e){return c(2,a.WEEKDAYS[e.getDay()])},d:function(e){return e.getDay()},HH:function(e){return s(2,e.getHours())},H:function(e){return e.getHours()},hh:function(e){return s(2,v(12,e.getHours()))},h:function(e){return v(12,e.getHours())},mm:function(e){return s(2,e.getMinutes())},m:function(e){return e.getMinutes()},ss:function(e){return s(2,e.getSeconds())},s:function(e){return e.getSeconds()},A:function(e){return e.getHours()>11?"PM":"AM"},a:function(e){return e.getHours()>11?"pm":"am"},SSS:function(e){return s(3,e.getMilliseconds())},SS:function(e){return c(2,s(3,e.getMilliseconds()))},S:function(e){return c(1,s(3,e.getMilliseconds()))},Q:function(e){return Math.ceil((e.getMonth()+1)/3)}},_=(0,r.default)(function(e,t){return p[t]?p[t](e):t}),b=(0,r.default)(function(e,t){return(0,n.default)(t)?e.match(l.DATE_TOKENS).map(_(t)).join(""):"Invalid Date"});t.default=b,e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WEEKDAYS=void 0;t.WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MONTHS=void 0;t.MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"]},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DATE_TOKENS=void 0;t.DATE_TOKENS=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,n=(r=u(35))&&r.__esModule?r:{default:r};t.default=function(e){return(0,n.default)(new Date)(e)<0},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){return e/864e5},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){return e/36e5},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){return e/6e4},e.exports=t.default},function(e,t,u){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){return e/1e3},e.exports=t.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdW4uanMvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL2Z1bi5qcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9jdXJyeS5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9pcy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9ub3QuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvZXhpc3RzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL3R5cGUuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvZXF1YWxzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3Qva2V5cy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9lbXB0eS5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9pZGVudGljYWwuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL251bWJlci9pcy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvX3ByaXZhdGUvY3VycnkxLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvaXMuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2FycmF5L2lzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9kYXRlL2lzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2Fsd2F5cy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9tYXAuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2FycmF5L2VxdWFscy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvbnVtYmVyL2lzTmFuLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2FuZC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9vci5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvYm9vbGVhbi9pcy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvc3RyaW5nL2lzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvZXF1YWxzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9hcnJheS90by5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvYXJyYXkvdW5pb24uanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL21vbmFkcy9KdXN0LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9tb25hZHMvTm90aGluZy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvb2JqZWN0L2ZvbGQuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL29iamVjdC9tYXAuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL21hcC9tYXAuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2FycmF5L21hcC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9hcC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvYXJyYXkvZm9sZC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9mb2xkLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL3ppcFdpdGguanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2RhdGUvZGlmZkRhdGUuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2RhdGUvaXNWYWxpZC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvZGF0ZS9nZXRXZWVrLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvYm9vbGVhbi9GLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9ib29sZWFuL1QuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL21vbmFkcy9NYXliZS5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvbnVtYmVyL2FkZC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvbnVtYmVyL211bHRpcGx5LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9udW1iZXIvZGl2aWRlLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL29iamVjdC9vbWl0LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvaGFzLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvaGFzSW4uanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL29iamVjdC9rZXlzSW4uanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL29iamVjdC9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL29iamVjdC9wYXRoLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9vYmplY3QvcGljay5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvb2JqZWN0L3Byb3AuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3N0cmluZy9jb25jYXQuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3N0cmluZy9mb3JtYXRTdHJpbmcuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL21hcC9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL21hcC9pcy5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvbWFwL2tleXMuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvYWRqdXN0LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2FkanVzdFdpdGguanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3N0cmluZy9tYXAuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvYWxsLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2FsbFBhc3MuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvYW55LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2FueVBhc3MuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvY29tcG9zZS5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9kZWZhdWx0VG8uanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvZmluZEluZGV4LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2lkZW50aXR5LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL2lzRW1wdHkuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvbGlmdC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvdXRpbC9tYXguanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL3V0aWwvdHJ1dGh5LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy91dGlsL3ppcC5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvZGF0ZS9mb3JtYXREYXRlVGltZS5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvY29uc3RhbnRzL1dFRUtEQVlTLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9jb25zdGFudHMvTU9OVEhTLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9jb25zdGFudHMvREFURV9UT0tFTlMuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2RhdGUvaXNGdXR1cmVEYXRlLmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9kYXRlL3RvRGF5LmpzIiwid2VicGFjazovL2Z1bi5qcy8uL3NyYy9kYXRlL3RvSG91ci5qcyIsIndlYnBhY2s6Ly9mdW4uanMvLi9zcmMvZGF0ZS90b01pbnV0ZXMuanMiLCJ3ZWJwYWNrOi8vZnVuLmpzLy4vc3JjL2RhdGUvdG9TZWNvbmRzLmpzIl0sIm5hbWVzIjpbInJvb3QiLCJmYWN0b3J5IiwiZXhwb3J0cyIsIm1vZHVsZSIsImRlZmluZSIsImFtZCIsInNlbGYiLCJ0aGlzIiwiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImZ1biIsImFyZ3NsZW4iLCJsZW5ndGgiLCJjcmVhdGVSZWN1cnNlciIsImFjYyIsImFyZ3MiLCJfYWNjIiwiY29uY2F0IiwiYXBwbHkiLCJyZWN1cnNlIiwiQXJyYXkiLCJzbGljZSIsImFyZ3VtZW50cyIsIl9jdXJyeSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfdHlwZSIsImRlZmF1bHQiLCJDdG9yIiwidmFsIiwieCIsInRvU3RyaW5nIiwiX2V4aXN0cyIsIl9pZGVudGljYWwiLCJfbm90IiwiX29yIiwiX2lzIiwiX2lzMiIsIl9pczMiLCJfaXM0IiwiX2lzNSIsIl9pczYiLCJfZXF1YWxzIiwiX2VxdWFsczIiLCJ5IiwiY29uc3RydWN0b3IiLCJ2YWx1ZU9mIiwiYSIsImtleXMiLCJfaXNOYW4iLCJmbiIsIl9tYXAiLCJfbWFwMiIsIl9tYXAzIiwiX21hcDQiLCJjYiIsIl9hbmQiLCJpc05hTiIsImtleVgiLCJrZXlZIiwiYUwiLCJhUiIsImZyb20iLCJTZXQiLCJKdXN0IiwiX3ZhbHVlIiwiaXNKdXN0IiwiaXNOb3RoaW5nIiwiTm90aGluZyIsIl9rZXlzIiwiaW5pdCIsImsiLCJfZW1wdHkiLCJmb3JFYWNoIiwidiIsIm1hcCIsInNldCIsIl9jdXJyeTIiLCJfZm9sZCIsImlzRnVuY3Rpb24iLCJmbnMiLCJ2YWxzIiwiYXAiLCJmIiwiX2ZvbGQyIiwiYiIsImFyciIsImxlbiIsIk1hdGgiLCJtaW4iLCJwdXNoIiwic3RhcnQiLCJlbmQiLCJEYXRlIiwiZ2V0VGltZSIsImlzRmluaXRlIiwiVVRDIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJzZXRVVENEYXRlIiwiZ2V0VVRDRGF0ZSIsImdldFVUQ0RheSIsInllYXJTdGFydCIsImdldFVUQ0Z1bGxZZWFyIiwid2Vla05vIiwiY2VpbCIsIl90byIsIl91bmlvbiIsIl9GIiwiX1QiLCJfSnVzdCIsIl9NYXliZSIsIl9Ob3RoaW5nIiwiX2FkZCIsIl9tdWx0aXBseSIsIl9kaXZpZGUiLCJfbWVyZ2UiLCJfb21pdCIsIl9oYXMiLCJfaGFzSW4iLCJfa2V5c0luIiwiX2ZpbHRlciIsIl9wYXRoIiwiX3BpY2siLCJfcHJvcCIsIl9jb25jYXQiLCJfZm9ybWF0U3RyaW5nIiwiX2ZpbHRlcjIiLCJfa2V5czIiLCJfYWRqdXN0IiwiX2FkanVzdFdpdGgiLCJfYWxsIiwiX2FsbFBhc3MiLCJfYWx3YXlzIiwiX2FueSIsIl9hbnlQYXNzIiwiX2FwIiwiX2NvbXBvc2UiLCJfZGVmYXVsdFRvIiwiX2VxdWFsczMiLCJfZmluZEluZGV4IiwiX2lkZW50aXR5IiwiX2lzNyIsIl9pc0VtcHR5IiwiX2xpZnQiLCJfbWF4IiwiX3RydXRoeSIsIl96aXAiLCJfemlwV2l0aCIsIl9kaWZmRGF0ZSIsIl9mb3JtYXREYXRlVGltZSIsIl9pczgiLCJfaXNGdXR1cmVEYXRlIiwiX2lzVmFsaWQiLCJfdG9EYXkiLCJfdG9Ib3VyIiwiX3RvTWludXRlcyIsIl90b1NlY29uZHMiLCJfZ2V0V2VlayIsIk1heWJlIiwiX192YWx1ZSIsIm9mIiwiZ2V0T3JFbHNlIiwibWVyZ2UiLCJvYmpMIiwib2JqUiIsInJlc3VsdCIsImFzc2lnbiIsIm9sZFZhbHVlIiwibmV3VmFsdWUiLCJvYmoiLCJuYW1lcyIsImZpbHRlciIsImluZGV4T2YiLCJwcm9wIiwicGF0aCIsImlkeCIsIk51bWJlciIsImlzSW50ZWdlciIsInByb3BzIiwic2VwYXJhdG9yIiwidW5kZWZpbmVkIiwiam9pbiIsInN0ciIsInNoaWZ0IiwicmVwbGFjZSIsIm1hdGNoIiwiTWFwIiwiaXQiLCJlbnRyaWVzIiwibmV4dCIsImRvbmUiLCJwcmVkIiwiY2hhckF0IiwicmVzIiwiY2JzIiwiZnVucyIsImxpZnRlZCIsIl96aXBXaXRoMiIsIl9XRUVLREFZUyIsIl9NT05USFMiLCJfREFURV9UT0tFTlMiLCJsYXN0TiIsInN1YnN0cmluZyIsImZpcnN0TiIsImZpbGwiLCJkaWdpdHMiLCJtb2RDZWlsaW5nIiwibW9kIiwidG9rZW5zIiwiWVlZWSIsIllZIiwiTU1NTSIsIk1PTlRIUyIsIk1NTSIsIk1NIiwiTSIsInciLCJ3dyIsIkREIiwiRCIsImRkZGQiLCJXRUVLREFZUyIsImdldERheSIsImRkZCIsImRkIiwiSEgiLCJnZXRIb3VycyIsIkgiLCJoaCIsImgiLCJtbSIsImdldE1pbnV0ZXMiLCJzcyIsImdldFNlY29uZHMiLCJBIiwiU1NTIiwiZ2V0TWlsbGlzZWNvbmRzIiwiU1MiLCJTIiwiUSIsInN3YXBUb2tlbldpdGhWYWx1ZSIsImRhdGUiLCJ0b2tlbiIsImZvcm1hdCIsIkRBVEVfVE9LRU5TIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxFQUFBQyxHQUNBLGlCQUFBQyxTQUFBLGlCQUFBQyxPQUNBQSxPQUFBRCxRQUFBRCxJQUNBLG1CQUFBRyxlQUFBQyxJQUNBRCxPQUFBLFlBQUFILEdBQ0EsaUJBQUFDLFFBQ0FBLFFBQUEsVUFBQUQsSUFFQUQsRUFBQSxVQUFBQyxJQVJBLENBU0Msb0JBQUFLLFVBQUFDLEtBQUEsV0FDRCxtQkNUQSxJQUFBQyxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFSLFFBR0EsSUFBQUMsRUFBQUssRUFBQUUsR0FBQSxDQUNBQyxFQUFBRCxFQUNBRSxHQUFBLEVBQ0FWLFFBQUEsSUFVQSxPQU5BVyxFQUFBSCxHQUFBSSxLQUFBWCxFQUFBRCxRQUFBQyxJQUFBRCxRQUFBTyxHQUdBTixFQUFBUyxHQUFBLEVBR0FULEVBQUFELFFBMERBLE9BckRBTyxFQUFBTSxFQUFBRixFQUdBSixFQUFBTyxFQUFBUixFQUdBQyxFQUFBUSxFQUFBLFNBQUFmLEVBQUFnQixFQUFBQyxHQUNBVixFQUFBVyxFQUFBbEIsRUFBQWdCLElBQ0FHLE9BQUFDLGVBQUFwQixFQUFBZ0IsRUFBQSxDQUEwQ0ssWUFBQSxFQUFBQyxJQUFBTCxLQUsxQ1YsRUFBQWdCLEVBQUEsU0FBQXZCLEdBQ0Esb0JBQUF3QixlQUFBQyxhQUNBTixPQUFBQyxlQUFBcEIsRUFBQXdCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFwQixFQUFBLGNBQWlEMEIsT0FBQSxLQVFqRG5CLEVBQUFvQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBbkIsRUFBQW1CLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQXhCLEVBQUFnQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQW5CLEVBQUFRLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXZCLEVBQUEyQixFQUFBLFNBQUFqQyxHQUNBLElBQUFnQixFQUFBaEIsS0FBQTRCLFdBQ0EsV0FBMkIsT0FBQTVCLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQU0sRUFBQVEsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBVixFQUFBVyxFQUFBLFNBQUFpQixFQUFBQyxHQUFzRCxPQUFBakIsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBdUIsRUFBQUMsSUFHdEQ3QixFQUFBZ0MsRUFBQSxHQUlBaEMsSUFBQWlDLEVBQUEsOEZDN0VlLFNBQWdCQyxHQUM3QixJQUFNQyxFQUFVRCxFQUFJRSxPQUVwQixHQUFnQixJQUFaRCxFQUNGLE9BQU9ELEVBRVQsT0FBT0csRUFBZSxJQVN0QixTQUFTQSxFQUFnQkMsR0FDdkIsT0FBTyxXQUNMLE9BVEosU0FBa0JBLEVBQUtDLEdBQ3JCLElBQU1DLEVBQU9GLEVBQUlHLE9BQU9GLEdBQ3hCLE9BQU9DLEVBQUtKLE9BQVNELEVBQ2pCRSxFQUFlRyxHQUNmTixFQUFJUSxNQUFNNUMsS0FBTTBDLEdBS1hHLENBQVFMLEVBQUtNLE1BQU1kLFVBQVVlLE1BQU14QyxLQUFLeUMsbUlDaEJyRCxJQUFBQyxFQUFBQyxFQUFBaEQsRUFBQSxJQUNBaUQsRUFBQUQsRUFBQWhELEVBQUEsOERBRWUsRUFBQStDLEVBQUFHLFNBQU0sU0FBYUMsRUFBTUMsR0FDdEMsT0FBTyxFQUFBSCxFQUFBQyxTQUFLRSxLQUFTRCxrRUNQdkIsK0VBRWUsTUFGZm5ELEVBQUEsaUNBRWVrRCxTQUFNLFNBQWNHLEdBQ2pDLE9BQVFBLDZIQ0hLLFNBQWlCQSxHQUM5QixRQUFjLE1BQUxBLHNEQ0RYLCtFQUVlLE1BRmZyRCxFQUFBLGtDQUVla0QsU0FBTyxTQUFlRyxHQUNuQyxPQUFPekMsT0FBT2tCLFVBQVV3QixTQUFTakQsS0FBS2dELEdBQUdSLE1BQU0sR0FBSSxxSUNEckQsSUFBQUUsRUFBQUMsRUFBQWhELEVBQUEsSUFDQXVELEVBQUFQLEVBQUFoRCxFQUFBLElBQ0F3RCxFQUFBUixFQUFBaEQsRUFBQSxJQUNBaUQsRUFBQUQsRUFBQWhELEVBQUEsSUFDQXlELEVBQUFULEVBQUFoRCxFQUFBLElBQ0EwRCxFQUFBVixFQUFBaEQsRUFBQSxLQUNBMkQsRUFBQVgsRUFBQWhELEVBQUEsS0FDQTRELEVBQUFaLEVBQUFoRCxFQUFBLEtBQ0E2RCxFQUFBYixFQUFBaEQsRUFBQSxLQUNBOEQsRUFBQWQsRUFBQWhELEVBQUEsSUFDQStELEVBQUFmLEVBQUFoRCxFQUFBLEtBQ0FnRSxFQUFBaEIsRUFBQWhELEVBQUEsS0FDQWlFLEVBQUFqQixFQUFBaEQsRUFBQSxLQUNBa0UsRUFBQWxCLEVBQUFoRCxFQUFBLCtEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQWlCRyxFQUFHYyxHQUN2QyxTQUFJLEVBQUFYLEVBQUFOLFNBQVVHLEVBQUdjLEtBRWIsRUFBQWxCLEVBQUFDLFNBQUtHLE1BQU8sRUFBQUosRUFBQUMsU0FBS2lCLE9BRWpCLEVBQUFULEVBQUFSLFVBQUcsRUFBQU8sRUFBQVAsVUFBSSxFQUFBSyxFQUFBTCxTQUFPRyxLQUFLLEVBQUFJLEVBQUFQLFVBQUksRUFBQUssRUFBQUwsU0FBT2lCLE9BRTlCZCxFQUFFZSxjQUFnQkQsRUFBRUMsZUFFcEIsRUFBQUwsRUFBQWIsU0FBU0csS0FBTSxFQUFBUSxFQUFBWCxTQUFVRyxLQUFNLEVBQUFTLEVBQUFaLFNBQVNHLEtBQU0sRUFBQVcsRUFBQWQsU0FBT0csSUFDaEQsRUFBQUcsRUFBQU4sU0FBVUcsRUFBRWdCLFVBQVdGLEVBQUVFLFlBRTlCLEVBQUFULEVBQUFWLFNBQVFHLElBQ0gsRUFBQVksRUFBQWYsU0FBWUcsRUFBR2MsTUFDYixFQUFBUixFQUFBVCxTQUFTRyxLQUNYLEVBQUFhLEVBQUFoQixTQUFhRyxFQUFHYyxzRUMxQjNCLCtFQUVlLE1BRmZuRSxFQUFBLGlDQUVla0QsU0FBTSxTQUFlb0IsR0FDbEMsT0FBTzFELE9BQU8yRCxLQUFLM0QsT0FBTzBELCtIQ05iLFNBQWdCakIsR0FDN0IsT0FBTyxJQUFJQSxFQUFFZSxpSUNGZixJQUFBckIsRUFBQUMsRUFBQWhELEVBQUEsSUFDQXdFLEVBQUF4QixFQUFBaEQsRUFBQSwrREFFZSxFQUFBK0MsRUFBQUcsU0FBTSxTQUFvQkcsRUFBR2MsR0FDMUMsT0FBVSxJQUFOZCxHQUFpQixJQUFOYyxFQUNOLEVBQUlkLEdBQU0sRUFBSWMsRUFFbkJkLElBQU1jLE9BR0EsRUFBQUssRUFBQXRCLFNBQU1HLE1BQU0sRUFBQW1CLEVBQUF0QixTQUFNaUIsb0VDWjlCLCtFQUVlLE1BRmZuRSxFQUFBLGlDQUVla0QsU0FBRyxtSUNFSCxTQUFpQnVCLEdBQzlCLE9BQU8sU0FBa0JILEdBQ3ZCLE9BQTRCLElBQXJCeEIsVUFBVVYsT0FDYnRDLEtBQ0EyRSxFQUFHSCx1RENSWCwrRUFFZSxNQUZmdEUsRUFBQSxpQ0FFZWtELFNBQUcsd0VDVWxCLCtFQUVlLE1BRmZsRCxFQUFBLGlDQUVla0QsU0FBRyx1RUNYbEIsK0VBRWUsTUFGZmxELEVBQUEsaUNBRWVrRCxTQUFHLHNFQ0VsQiwrRUFFZSxNQUZmbEQsRUFBQSxpQ0FFZWtELFNBQU0sU0FBaUJHLEdBQ3BDLE9BQU8sV0FBYyxPQUFPQSxxSUNGOUIsSUFBQU4sRUFBQUMsRUFBQWhELEVBQUEsSUFDQTBFLEVBQUExQixFQUFBaEQsRUFBQSxLQUNBMkUsRUFBQTNCLEVBQUFoRCxFQUFBLEtBQ0E0RSxFQUFBNUIsRUFBQWhELEVBQUEsS0FDQTZFLEVBQUE3QixFQUFBaEQsRUFBQSxLQUNBaUQsRUFBQUQsRUFBQWhELEVBQUEsOERBRWUsRUFBQStDLEVBQUFHLFNBQU0sU0FBYzRCLEVBQUlSLEdBQ3JDLFFBQVEsRUFBQXJCLEVBQUFDLFNBQUtvQixJQUVYLElBQUssV0FDSCxPQUFPLEVBQUF2QixFQUFBRyxTQUFNLFdBQ1gsT0FBTzRCLEVBQUd6RSxLQUFLUCxLQUFNd0UsRUFBRTVCLE1BQU01QyxLQUFNZ0QsY0FFdkMsSUFBSyxTQUNILE9BQU8sRUFBQTZCLEVBQUF6QixTQUFVNEIsRUFBSVIsR0FDdkIsSUFBSyxTQUNILE9BQU8sRUFBQU8sRUFBQTNCLFNBQVU0QixFQUFJUixHQUN2QixJQUFLLE1BQ0gsT0FBTyxFQUFBTSxFQUFBMUIsU0FBTzRCLEVBQUlSLEdBQ3BCLFFBQ0UsT0FBTyxFQUFBSSxFQUFBeEIsU0FBUzRCLEVBQUlSLHNJQ3hCMUIsSUFBQXZCLEVBQUFDLEVBQUFoRCxFQUFBLElBQ0F5RCxFQUFBVCxFQUFBaEQsRUFBQSxJQUNBaUUsRUFBQWpCLEVBQUFoRCxFQUFBLDhEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQXNCRyxFQUFHYyxHQUM1QyxHQUFJZCxFQUFFakIsU0FBVytCLEVBQUUvQixPQUNqQixPQUFPLEVBRVQsSUFBSyxJQUFJbEMsRUFBSSxFQUFHQSxFQUFJbUQsRUFBRWpCLE9BQVFsQyxJQUM1QixJQUFJLEVBQUF1RCxFQUFBUCxVQUFJLEVBQUFlLEVBQUFmLFNBQU9HLEVBQUVuRCxHQUFJaUUsRUFBRWpFLEtBQU0sT0FBTyxFQUV0QyxPQUFPLDZIQ1hNLFNBQWdCbUQsR0FDN0IsT0FBTyxFQUFBMEIsRUFBQTdCLFVBQUksRUFBQVMsRUFBQVQsU0FBU0csR0FBSTJCLE1BQU0zQixLQUpoQyxJQUFBTSxFQUFBWCxFQUFBaEQsRUFBQSxJQUNBK0UsRUFBQS9CLEVBQUFoRCxFQUFBLDBHQ0tBLCtFQUVlLE1BRmZBLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWNHLEVBQUdjLEdBQ3BDLE9BQU9kLEdBQUtjLGtFQ1ZkLCtFQUVlLE1BRmZuRSxFQUFBLGlDQUVla0QsU0FBTSxTQUFhRyxFQUFHYyxHQUNuQyxPQUFPZCxHQUFLYyxrRUNHZCwrRUFFZSxNQUZmbkUsRUFBQSxpQ0FFZWtELFNBQUcseUVDVGxCLCtFQUVlLE1BRmZsRCxFQUFBLGlDQUVla0QsU0FBRywwSUNBbEIsSUFBQUgsRUFBQUMsRUFBQWhELEVBQUEsSUFDQXVELEVBQUFQLEVBQUFoRCxFQUFBLElBQ0F5RCxFQUFBVCxFQUFBaEQsRUFBQSxJQUNBaUUsRUFBQWpCLEVBQUFoRCxFQUFBLDhEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQUNHLEVBQUdjLEdBQ3ZCLElBQUssSUFBSWMsS0FBUTVCLEVBRWYsSUFBSSxFQUFBSSxFQUFBUCxVQUFJLEVBQUFlLEVBQUFmLFNBQU9HLEVBQUU0QixHQUFPZCxFQUFFYyxLQUFTLE9BQU8sRUFHNUMsSUFBSyxJQUFJQyxLQUFRZixFQUNmLElBQUksRUFBQVYsRUFBQVAsVUFBSSxFQUFBSyxFQUFBTCxTQUFPRyxFQUFFNkIsT0FBVyxFQUFBM0IsRUFBQUwsU0FBT2lCLEVBQUVlLElBQVEsT0FBTyxFQUd0RCxPQUFPLDZIQ0hNLFNBQWtCN0IsR0FDL0IsT0FBb0IsSUFBYkEsRUFBRWpCLE9BQWUsQ0FBQ2lCLEVBQUUsSUFBTVQsTUFBTUYsTUFBTSxLQUFNVyxzRENOckQsK0VBRWUsTUFGZnJELEVBQUEsaUNBRWVrRCxTQUFNLFNBQXFCaUMsRUFBSUMsR0FDNUMsT0FBT3hDLE1BQU15QyxLQUFLLElBQUlDLElBQUlILEVBQUcxQyxPQUFPMkMsdUlDZnRDLElBQUlHLEVBQU8sU0FBVW5DLEdBRW5CLE9BREF0RCxLQUFLMEYsT0FBU3BDLEVBQ1B0RCxNQUdUeUYsRUFBS3pELFVBQVUyRCxPQUFTLFdBQ3RCLE9BQU8sR0FFVEYsRUFBS3pELFVBQVU0RCxVQUFZLFdBQ3pCLE9BQU8sU0FHTUgsa0lDWmYsSUFBSUksRUFBVSxhQUdkQSxFQUFRN0QsVUFBVTJELE9BQVMsV0FDekIsT0FBTyxHQUVURSxFQUFRN0QsVUFBVTRELFVBQVksV0FDNUIsT0FBTyxTQUdNQyxrSUNMZixJQUFBNUMsRUFBQUMsRUFBQWhELEVBQUEsSUFDQTRGLEVBQUE1QyxFQUFBaEQsRUFBQSw4REFFZSxFQUFBK0MsRUFBQUcsU0FBTSxTQUFlNEIsRUFBSWUsRUFBTWxGLEdBSzVDLElBSkEsSUFBTW1GLEdBQUksRUFBQUYsRUFBQTFDLFNBQUt2QyxHQUNYVCxHQUFLLEVBQ0hDLEVBQUkyRixFQUFFMUQsT0FDUnBCLEVBQUlKLE9BQU9pRixLQUNOM0YsRUFBSUMsR0FDWGEsRUFBSThELEVBQUc5RCxFQUFHTCxFQUFFbUYsRUFBRTVGLElBQUs0RixFQUFFNUYsR0FBSVMsR0FFM0IsT0FBT0ssb0lDTlQsSUFBQStCLEVBQUFDLEVBQUFoRCxFQUFBLElBQ0ErRixFQUFBL0MsRUFBQWhELEVBQUEsSUFDQTRGLEVBQUE1QyxFQUFBaEQsRUFBQSw4REFFZSxFQUFBK0MsRUFBQUcsU0FBTSxTQUFjNEIsRUFBSVIsR0FLckMsSUFKQSxJQUFNd0IsR0FBSSxFQUFBRixFQUFBMUMsU0FBS29CLEdBQ1hwRSxHQUFLLEVBQ0hDLEVBQUkyRixFQUFFMUQsT0FDTnBCLEdBQUksRUFBQStFLEVBQUE3QyxTQUFNb0IsS0FDUHBFLEVBQUlDLEdBQ1hhLEVBQUU4RSxFQUFFNUYsSUFBTTRFLEVBQUdSLEVBQUV3QixFQUFFNUYsSUFBSzRGLEVBQUU1RixHQUFJb0UsR0FFOUIsT0FBT3RELG9JQ1pULElBQUErQixFQUFBQyxFQUFBaEQsRUFBQSxJQUNBK0YsRUFBQS9DLEVBQUFoRCxFQUFBLDhEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQWM0QixFQUFJUixHQUNyQyxJQUFNdEQsR0FBSSxFQUFBK0UsRUFBQTdDLFNBQU1vQixHQUloQixPQUhBQSxFQUFFMEIsUUFBUSxTQUFDQyxFQUFHSCxFQUFHSSxHQUNmbEYsRUFBRW1GLElBQUlMLEVBQUdoQixFQUFHbUIsRUFBR0gsRUFBR0ksTUFFYmxGLGtFQ0hULCtFQUVlLE1BRmZoQixFQUFBLGlDQUVla0QsU0FBTSxTQUFjNEIsRUFBSVIsR0FJckMsSUFIQSxJQUFJcEUsR0FBSyxFQUNIQyxFQUFJbUUsRUFBRWxDLE9BQ05wQixFQUFJLElBQUk0QixNQUFNekMsS0FDWEQsRUFBSUMsR0FDWGEsRUFBRWQsR0FBSzRFLEVBQUdSLEVBQUVwRSxHQUFJQSxFQUFHb0UsR0FFckIsT0FBT3RELG9JQ2JULElBQUErQixFQUFBQyxFQUFBaEQsRUFBQSxJQUNBb0csRUFBQXBELEVBQUFoRCxFQUFBLEtBQ0EyRCxFQUFBWCxFQUFBaEQsRUFBQSxJQUNBcUcsRUFBQXJELEVBQUFoRCxFQUFBLEtBQ0EwRSxFQUFBMUIsRUFBQWhELEVBQUEsd0RBRUEsSUFBTXNHLEdBQWEsRUFBQTNDLEVBQUFULFNBQUcsZUFFUCxFQUFBSCxFQUFBRyxTQUFNLFNBQWFxRCxFQUFLQyxHQUNyQyxPQUFJRixFQUFXQyxFQUFJRSxJQUNWRixFQUFJRSxHQUFHRCxHQUVaRixFQUFXQyxHQUNOLFNBQUFsRCxHQUFDLE9BQUlrRCxFQUFJbEQsRUFBSmtELENBQU9DLEVBQUtuRCxNQUVuQixFQUFBZ0QsRUFBQW5ELFNBQUssU0FBQ1osRUFBS29FLEdBQU4sT0FBWXBFLEVBQUlHLFFBQU8sRUFBQWlDLEVBQUF4QixVQUFJLEVBQUFrRCxFQUFBbEQsU0FBT3dELEdBQUlGLEtBQVEsR0FBSUQsbUVDRmhFLCtFQUVlLE1BRmZ2RyxFQUFBLGlDQUVla0QsU0FBTSxTQUFlNEIsRUFBSWUsRUFBTXZCLEdBSTVDLElBSEEsSUFBSXBFLEdBQUssRUFDSEMsRUFBSW1FLEVBQUVsQyxPQUNScEIsRUFBSTZFLElBQ0MzRixFQUFJQyxHQUNYYSxFQUFJOEQsRUFBRzlELEVBQUdzRCxFQUFFcEUsR0FBSUEsRUFBR29FLEdBRXJCLE9BQU90RCxvSUNwQlQsSUFBQStCLEVBQUFDLEVBQUFoRCxFQUFBLElBQ0FxRyxFQUFBckQsRUFBQWhELEVBQUEsS0FDQTJHLEVBQUEzRCxFQUFBaEQsRUFBQSxLQUNBaUQsRUFBQUQsRUFBQWhELEVBQUEsOERBRWUsRUFBQStDLEVBQUFHLFNBQU0sU0FBZTRCLEVBQUllLEVBQU12QixHQVc1QyxNQVZnQixDQUNkMUQsT0FBQStGLEVBQUF6RCxRQUNBTixNQUFBeUQsRUFBQW5ELFVBUWEsRUFBQUQsRUFBQUMsU0FBS29CLElBQUlRLEVBQUllLEVBQU12QixtRUN2QnBDLCtFQUVlLE1BRmZ0RSxFQUFBLGlDQUVla0QsU0FBTSxTQUFrQjRCLEVBQUlSLEVBQUdzQyxHQUM1QyxJQUFNQyxFQUFNLEdBQ05DLEVBQU1DLEtBQUtDLElBQUkxQyxFQUFFbEMsT0FBUXdFLEVBQUV4RSxRQUM3QmxDLEVBQUksRUFDUixJQUFLQSxFQUFJLEVBQUdBLEVBQUk0RyxFQUFLNUcsSUFDbkIyRyxFQUFJSSxLQUFLbkMsRUFBR1IsRUFBRXBFLEdBQUkwRyxFQUFFMUcsS0FFdEIsT0FBTzJHLGtFQ1JULCtFQUVlLE1BRmY3RyxFQUFBLGlDQUVla0QsU0FBTSxTQUFtQmdFLEVBQU9DLEdBQzdDLE9BQVEsSUFBSUMsS0FBS0YsR0FBT0csVUFBWSxJQUFJRCxLQUFLRCxHQUFLRSxxSUNMckMsU0FBa0JoRSxHQUUvQixPQUFPLEVBQUFNLEVBQUFULFNBQU9HLElBQU1pRSxTQUFTakUsRUFBRWdCLFlBSmpDLE1BQUFWLEtBQUEzRCxFQUFBLG1GQ0dBLCtFQUVlLE1BRmZBLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWtCMUMsSUFFckNBLEVBQUksSUFBSTRHLEtBQUtBLEtBQUtHLElBQUkvRyxFQUFFZ0gsY0FBZWhILEVBQUVpSCxXQUFZakgsRUFBRWtILGFBR3JEQyxXQUFXbkgsRUFBRW9ILGFBQWUsR0FBS3BILEVBQUVxSCxhQUFlLElBRXBELElBQUlDLEVBQVksSUFBSVYsS0FBS0EsS0FBS0csSUFBSS9HLEVBQUV1SCxpQkFBa0IsRUFBRyxJQUdyREMsRUFBU2pCLEtBQUtrQixPQUFRekgsRUFBSXNILEdBQWEsTUFBWSxHQUFLLEdBRzVELE1BQU8sQ0FBQ3RILEVBQUV1SCxpQkFBa0JDLDQxTUNuQjlCLElBQUEvRCxFQUFBakIsR0FBQWhELEVBQUEsS0FDQTJELEVBQUFYLEdBQUFoRCxFQUFBLEtBQ0FrSSxFQUFBbEYsR0FBQWhELEVBQUEsS0FDQW1JLEVBQUFuRixHQUFBaEQsRUFBQSxLQUdBNEQsRUFBQVosR0FBQWhELEVBQUEsS0FDQW9JLEVBQUFwRixHQUFBaEQsRUFBQSxLQUNBcUksRUFBQXJGLEdBQUFoRCxFQUFBLEtBR0FzSSxFQUFBdEYsR0FBQWhELEVBQUEsS0FDQXVJLEVBQUF2RixHQUFBaEQsRUFBQSxLQUNBd0ksRUFBQXhGLEdBQUFoRCxFQUFBLEtBR0E2RCxFQUFBYixHQUFBaEQsRUFBQSxJQUNBd0UsRUFBQXhCLEdBQUFoRCxFQUFBLEtBQ0F5SSxFQUFBekYsR0FBQWhELEVBQUEsS0FDQTBJLEVBQUExRixHQUFBaEQsRUFBQSxLQUNBMkksRUFBQTNGLEdBQUFoRCxFQUFBLEtBR0FrRSxFQUFBbEIsR0FBQWhELEVBQUEsS0FDQThELEVBQUFkLEdBQUFoRCxFQUFBLEtBQ0E0SSxFQUFBNUYsR0FBQWhELEVBQUEsS0FDQTZJLEVBQUE3RixHQUFBaEQsRUFBQSxLQUNBOEksRUFBQTlGLEdBQUFoRCxFQUFBLEtBQ0ErSSxFQUFBL0YsR0FBQWhELEVBQUEsS0FDQTRGLEVBQUE1QyxHQUFBaEQsRUFBQSxJQUNBZ0osRUFBQWhHLEdBQUFoRCxFQUFBLEtBQ0FpSixFQUFBakcsR0FBQWhELEVBQUEsS0FDQXFHLEVBQUFyRCxHQUFBaEQsRUFBQSxLQUNBMEUsRUFBQTFCLEdBQUFoRCxFQUFBLEtBQ0FrSixFQUFBbEcsR0FBQWhELEVBQUEsS0FDQW1KLEVBQUFuRyxHQUFBaEQsRUFBQSxLQUNBb0osRUFBQXBHLEdBQUFoRCxFQUFBLEtBR0FxSixFQUFBckcsR0FBQWhELEVBQUEsS0FDQXNKLEVBQUF0RyxHQUFBaEQsRUFBQSxLQUNBK0QsRUFBQWYsR0FBQWhELEVBQUEsS0FHQXVKLEVBQUF2RyxHQUFBaEQsRUFBQSxLQUNBZ0UsRUFBQWhCLEdBQUFoRCxFQUFBLEtBQ0F3SixFQUFBeEcsR0FBQWhELEVBQUEsS0FDQTJFLEVBQUEzQixHQUFBaEQsRUFBQSxLQUdBeUosRUFBQXpHLEdBQUFoRCxFQUFBLEtBQ0EwSixFQUFBMUcsR0FBQWhELEVBQUEsS0FDQTJKLEVBQUEzRyxHQUFBaEQsRUFBQSxLQUNBNEosRUFBQTVHLEdBQUFoRCxFQUFBLEtBQ0E2SixFQUFBN0csR0FBQWhELEVBQUEsS0FDQStFLEVBQUEvQixHQUFBaEQsRUFBQSxLQUNBOEosRUFBQTlHLEdBQUFoRCxFQUFBLEtBQ0ErSixFQUFBL0csR0FBQWhELEVBQUEsS0FDQWdLLEVBQUFoSCxHQUFBaEQsRUFBQSxLQUNBaUssRUFBQWpILEdBQUFoRCxFQUFBLEtBQ0ErQyxFQUFBQyxHQUFBaEQsRUFBQSxJQUNBa0ssRUFBQWxILEdBQUFoRCxFQUFBLEtBQ0ErRixFQUFBL0MsR0FBQWhELEVBQUEsSUFDQW1LLEVBQUFuSCxHQUFBaEQsRUFBQSxJQUNBdUQsRUFBQVAsR0FBQWhELEVBQUEsSUFDQW9LLEdBQUFwSCxHQUFBaEQsRUFBQSxLQUNBMkcsR0FBQTNELEdBQUFoRCxFQUFBLEtBQ0F3RCxHQUFBUixHQUFBaEQsRUFBQSxJQUNBcUssR0FBQXJILEdBQUFoRCxFQUFBLEtBQ0FzSyxHQUFBdEgsR0FBQWhELEVBQUEsSUFDQXVLLEdBQUF2SCxHQUFBaEQsRUFBQSxLQUNBd0ssR0FBQXhILEdBQUFoRCxFQUFBLEtBQ0E0RSxHQUFBNUIsR0FBQWhELEVBQUEsS0FDQXlLLEdBQUF6SCxHQUFBaEQsRUFBQSxLQUNBeUQsR0FBQVQsR0FBQWhELEVBQUEsSUFDQTBELEdBQUFWLEdBQUFoRCxFQUFBLEtBQ0EwSyxHQUFBMUgsR0FBQWhELEVBQUEsS0FDQWlELEdBQUFELEdBQUFoRCxFQUFBLElBQ0EySyxHQUFBM0gsR0FBQWhELEVBQUEsS0FDQTRLLEdBQUE1SCxHQUFBaEQsRUFBQSxLQUdBNkssR0FBQTdILEdBQUFoRCxFQUFBLEtBQ0E4SyxHQUFBOUgsR0FBQWhELEVBQUEsS0FDQStLLEdBQUEvSCxHQUFBaEQsRUFBQSxLQUNBZ0wsR0FBQWhJLEdBQUFoRCxFQUFBLEtBQ0FpTCxHQUFBakksR0FBQWhELEVBQUEsS0FDQWtMLEdBQUFsSSxHQUFBaEQsRUFBQSxLQUNBbUwsR0FBQW5JLEdBQUFoRCxFQUFBLEtBQ0FvTCxHQUFBcEksR0FBQWhELEVBQUEsS0FDQXFMLEdBQUFySSxHQUFBaEQsRUFBQSxLQUNBc0wsR0FBQXRJLEdBQUFoRCxFQUFBLHdGQ3BGQSwrRUFFZSxNQUZmQSxFQUFBLGtDQUVla0QsVUFBTyxpRUNGdEIsK0VBRWUsTUFGZmxELEVBQUEsa0NBRWVrRCxVQUFPLG1JQ1h0QixJQUFBb0YsRUFBQXRGLEVBQUFoRCxFQUFBLEtBQ0F3SSxFQUFBeEYsRUFBQWhELEVBQUEsd0RBRUEsSUFBSXVMLEVBQVEsU0FBVW5JLEdBQ3BCdEQsS0FBSzBMLFFBQVVwSSxHQUdqQm1JLEVBQU1FLEdBQUssU0FBVXJJLEdBQ25CLE9BQUlBLGFBQWVtSSxFQUFjbkksRUFDN0J0RCxnQkFBZ0J5TCxHQUNsQnpMLEtBQUswTCxRQUFVcEksRUFDUnRELE1BRUYsSUFBSXlMLEVBQU1uSSxJQUduQm1JLEVBQU16SixVQUFVNEosVUFBWSxTQUFVL0osR0FDcEMsT0FBTzdCLEtBQUs0RixZQUFjL0QsRUFBSTdCLEtBQUswTCxTQUdyQ0QsRUFBTXpKLFVBQVVvRSxJQUFNLFNBQVVRLEdBQzlCLE9BQUk1RyxLQUFLNEYsWUFDQTZGLEVBQU1FLEdBQUcsTUFFWEYsRUFBTUUsR0FBRy9FLEVBQUU1RyxLQUFLMEwsV0FHekJELEVBQU16SixVQUFVMkUsR0FBSyxTQUFVbkcsR0FDN0IsT0FBT0EsRUFBRTRGLElBQUlwRyxLQUFLMEwsVUFHcEJELEVBQU16SixVQUFVNEQsVUFBWSxXQUMxQixPQUF3QixNQUFoQjVGLEtBQUswTCxTQUdmRCxFQUFNekosVUFBVTJELE9BQVMsV0FDdkIsT0FBUTNGLEtBQUs0RixhQUdmNkYsRUFBTXpKLFVBQVU2RCxRQUFVLFdBQ3hCLE9BQU8sSUFBQTZDLEVBQUF0RixTQUdUcUksRUFBTXpKLFVBQVV5RCxLQUFPLFdBQ3JCLE9BQU8sSUFBQStDLEVBQUFwRixRQUFTcEQsS0FBSzBGLGVBR1IrRixnRUNwQ2YsK0VBRWUsTUFGZnZMLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWNvQixFQUFHc0MsR0FDcEMsT0FBUXRDLElBQUtzQyxrRUNKZiwrRUFFZSxNQUZmNUcsRUFBQSxpQ0FFZWtELFNBQU0sU0FBbUJvQixFQUFHc0MsR0FDekMsT0FBUXRDLEdBQUtzQyxrRUNGZiwrRUFFZSxNQUZmNUcsRUFBQSxpQ0FFZWtELFNBQU0sU0FBaUJvQixFQUFHc0MsR0FDdkMsT0FBUXRDLEdBQUtzQyxvSUNUZixJQUFBN0QsRUFBQUMsRUFBQWhELEVBQUEsSUFDQXdELEVBQUFSLEVBQUFoRCxFQUFBLElBQ0EyRCxFQUFBWCxFQUFBaEQsRUFBQSxLQUNBNEQsRUFBQVosRUFBQWhELEVBQUEsS0FDQW1JLEVBQUFuRixFQUFBaEQsRUFBQSx3REFFQSxJQUFNMkwsR0FBUSxFQUFBNUksRUFBQUcsU0FBTSxTQUFDMEksRUFBTUMsR0FDekIsSUFBSUMsRUFBU2xMLE9BQU9tTCxPQUFPLEdBQUlILEdBRS9CLElBQUksRUFBQXBJLEVBQUFOLFNBQVUwSSxFQUFNQyxHQUNsQixPQUFPakwsT0FBT21MLE9BQU8sR0FBSUgsR0FFM0IsSUFBSyxJQUFJbkssS0FBT29LLEVBQ2QsR0FBS2pMLE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBS3dMLEVBQU1wSyxHQUFoRCxDQUdBLElBQU11SyxFQUFXSCxFQUFLcEssR0FDaEJ3SyxFQUFXTCxFQUFLbkssSUFFbEIsRUFBQWtDLEVBQUFULFNBQVM4SSxLQUFhLEVBQUFySSxFQUFBVCxTQUFTK0ksR0FDakNILEVBQU9ySyxHQUFPa0ssRUFBTUssRUFBVUMsSUFDckIsRUFBQXJJLEVBQUFWLFNBQVErSSxHQUNqQkgsRUFBT3JLLElBQU8sRUFBQTBHLEVBQUFqRixTQUFNK0ksRUFBVUQsR0FFOUJGLEVBQU9ySyxHQUFPdUssRUFHbEIsT0FBT0YsTUFHTUgsZ0VDOUJmLCtFQUVlLE1BRmYzTCxFQUFBLGlDQUVla0QsU0FBTSxTQUFDZ0osRUFBS0MsR0FDekIsSUFBSUwsRUFBUyxHQU9iLE9BTEFsTCxPQUFPMkQsS0FBSzJILEdBQUtFLE9BQU8sU0FBQzNLLEdBQ3ZCLE9BQStCLElBQXhCMEssRUFBTUUsUUFBUTVLLEtBQ3BCdUUsUUFBUSxTQUFDdkUsR0FDVnFLLEVBQU9ySyxHQUFPeUssRUFBSXpLLEtBRWJxSyxrRUNMVCwrRUFFZSxNQUZmOUwsRUFBQSxpQ0FFZWtELFNBQU0sU0FBY29KLEVBQU1KLEdBQ3ZDLE9BQU90TCxPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUs2TCxFQUFLSSxtRUNIbkQsK0VBRWUsTUFGZnRNLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWdCb0osRUFBTUosR0FDekMsT0FBT0ksS0FBUUosa0VDSmpCLCtFQUVlLE1BRmZsTSxFQUFBLGlDQUVla0QsU0FBTSxTQUFlb0IsR0FDbEMsSUFBTXRELEVBQUksR0FDVixJQUFLLElBQU04RSxLQUFLeEIsRUFDZHRELEVBQUVpRyxLQUFLbkIsR0FFVCxPQUFPOUUsb0lDWFQsSUFBQStCLEVBQUFDLEVBQUFoRCxFQUFBLElBQ0E0RixFQUFBNUMsRUFBQWhELEVBQUEsOERBRWUsRUFBQStDLEVBQUFHLFNBQU0sU0FBdUJ1QixFQUFJOUQsR0FHOUMsSUFGQSxJQUFJSyxFQUFJLEdBQ0Y4RSxHQUFJLEVBQUFGLEVBQUExQyxTQUFLdkMsR0FDTlQsRUFBSSxFQUFHQSxFQUFJNEYsRUFBRTFELE9BQVFsQyxJQUN4QnVFLEVBQUc5RCxFQUFFbUYsRUFBRTVGLE9BQU1jLEVBQUU4RSxFQUFFNUYsSUFBTVMsRUFBRW1GLEVBQUU1RixLQUVqQyxPQUFPYyxrRUNYVCwrRUFFZSxNQUZmaEIsRUFBQSxpQ0FFZWtELFNBQU0sU0FBZXFKLEVBQU1MLEdBSXhDLElBSEEsSUFFSWxLLEVBRkFvQixFQUFNOEksRUFDTk0sRUFBTSxFQUVIQSxFQUFNRCxFQUFLbkssUUFBUSxDQUN4QixHQUFXLE1BQVBnQixFQUNGLE9BRUZwQixFQUFJdUssRUFBS0MsR0FDVHBKLEVBQU1xSixPQUFPQyxVQUFVMUssSUFDbkJBLEVBQUksRUFBSW9CLEVBQUlBLEVBQUloQixPQUFTSixHQUN6Qm9CLEVBQUlwQixHQUNSd0ssR0FBTyxFQUVULE9BQU9wSixrRUNaVCwrRUFFZSxNQUZmcEQsRUFBQSxpQ0FFZWtELFNBQU0sU0FBZXlKLEVBQU9ULEdBR3pDLElBRkEsSUFBTWxMLEVBQUksR0FDTmQsRUFBSSxFQUNEQSxFQUFJeU0sRUFBTXZLLFFBQ1h1SyxFQUFNek0sS0FBTWdNLElBQ2RsTCxFQUFFMkwsRUFBTXpNLElBQU1nTSxFQUFJUyxFQUFNek0sS0FFMUJBLEdBQUssRUFFUCxPQUFPYyxrRUNmVCwrRUFFZSxNQUZmaEIsRUFBQSxpQ0FFZWtELFNBQU0sU0FBZWxCLEVBQUdrSyxHQUNyQyxPQUFPQSxFQUFJbEssOElDRk4sSUFBTVMsRUFBUyxXQUFtQyxJQUFqQm1LLEVBQWlCOUosVUFBQVYsT0FBQSxRQUFBeUssSUFBQS9KLFVBQUEsR0FBQUEsVUFBQSxHQUFMLElBQ2xELE9BQU9GLE1BQU1kLFVBQVVlLE1BQU14QyxLQUFLeUMsVUFBVyxHQUFHZ0ssS0FBS0YscUJBR3hDbkssdUdDREEsU0FBdUJzSyxHQUNwQyxJQUFJeEssR0FBTyxFQUFBMkYsRUFBQWhGLFNBQVFKLFdBR25CLE9BREFQLEVBQUt5SyxRQUNFRCxFQUFJRSxRQUFRLFdBQVksU0FBQ0MsRUFBT1YsR0FDckMsT0FBTyxFQUFBL0ksRUFBQVAsVUFBSSxFQUFBUyxFQUFBVCxTQUFHLFlBQWFYLEVBQUtpSyxLQUFTakssRUFBS2lLLEdBQU9VLEtBVHpELElBQUFoRixFQUFBbEYsRUFBQWhELEVBQUEsS0FDQXlELEVBQUFULEVBQUFoRCxFQUFBLElBQ0EyRCxFQUFBWCxFQUFBaEQsRUFBQSx5R0NBQSwrRUFFZSxNQUZmQSxFQUFBLGlDQUVla0QsU0FBTSxTQUFvQnVCLEVBQUluRSxHQU0zQyxJQUxBLElBQUlVLEVBQUksSUFBSW1NLElBRVJDLEVBQUs5TSxFQUFFK00sVUFDUHZCLEVBQVNzQixFQUFHRSxRQUVSeEIsRUFBT3lCLE1BQU0sQ0FDbkIsSUFBTXpILEVBQUlnRyxFQUFPM0ssTUFBTSxHQUNqQjhFLEVBQUk2RixFQUFPM0ssTUFBTSxHQUNuQnNELEVBQUdxQixFQUFHRyxJQUFJakYsRUFBRW1GLElBQUlMLEVBQUdHLEdBQ3ZCNkYsRUFBU3NCLEVBQUdFLE9BWWQsT0FBT3RNLGtFQzFCVCwrRUFFZSxNQUZmaEIsRUFBQSxpQ0FFZWtELFNBQUcscUVDSWxCLCtFQUVlLE1BRmZsRCxFQUFBLGlDQUVla0QsU0FBTSxTQUFlb0IsR0FDbEMsT0FBT0EsRUFBRUMsdUVDQVgsK0VBRWUsTUFGZnZFLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWlCdUIsRUFBSXZFLEVBQUdvRSxHQUMzQyxJQUFNdEQsRUFBSTRCLE1BQU1kLFVBQVVlLE1BQU14QyxLQUFLaUUsR0FDL0JrSSxFQUFNdE0sRUFBSSxFQUFJYyxFQUFFb0IsT0FBU2xDLEVBQUlBLEVBQ25DLE9BQUtvRSxFQUFFa0ksSUFDUHhMLEVBQUV3TCxHQUFPL0gsRUFBR3pELEVBQUV3TCxJQUNQeEwsR0FGYUEsb0lDTHRCLElBQUErQixFQUFBQyxFQUFBaEQsRUFBQSxJQUNBMEUsRUFBQTFCLEVBQUFoRCxFQUFBLCtEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQXFCdUIsRUFBSStJLEVBQU1sSixHQU9sRCxPQUFPLEVBQUFJLEVBQUF4QixTQU5LLFNBQUFHLEdBQ1YsT0FBSW1LLEVBQUtuSyxHQUNBb0IsRUFBR3BCLEdBRUxBLEdBRU9ULE1BQU1kLFVBQVVlLE1BQU14QyxLQUFLaUUsb0VDWjdDLCtFQUVlLE1BRmZ0RSxFQUFBLGlDQUVla0QsU0FBTSxTQUFjNEIsRUFBSVIsR0FJckMsSUFIQSxJQUFJcEUsR0FBSyxFQUNIQyxFQUFJbUUsRUFBRWxDLE9BQ1JwQixFQUFJLEtBQ0NkLEVBQUlDLEdBQ1hhLEdBQUs4RCxFQUFHUixFQUFFbUosT0FBT3ZOLEdBQUlBLEVBQUdvRSxHQUUxQixPQUFPdEQsa0VDUlQsK0VBRWUsTUFGZmhCLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWM0QixFQUFJUixHQUNyQyxJQUFJb0osR0FBTSxFQUNWLElBQUssSUFBSXhOLEtBQUtvRSxFQUNaLElBQUtRLEVBQUdSLEVBQUVwRSxJQUFLLENBQ2J3TixHQUFNLEVBQ04sTUFHSixPQUFPQSxrRUNYVCwrRUFFZSxNQUZmMU4sRUFBQSxpQ0FFZWtELFNBQU0sU0FBa0J5SyxFQUFLckosR0FDMUMsSUFBSyxJQUFJcEUsRUFBSSxFQUFHQSxFQUFJeU4sRUFBSXZMLE9BQVFsQyxJQUM5QixJQUFLeU4sRUFBSXpOLEdBQUdvRSxHQUFJLE9BQU8sRUFFekIsT0FBTyxrRUNMVCwrRUFFZSxNQUZmdEUsRUFBQSxpQ0FFZWtELFNBQU0sU0FBYzRCLEVBQUlSLEdBQ3JDLElBQUlvSixHQUFNLEVBQ1YsSUFBSyxJQUFJeE4sS0FBS29FLEVBQ1osR0FBSVEsRUFBR1IsRUFBRXBFLElBQUssQ0FDWndOLEdBQU0sRUFDTixNQUdKLE9BQU9BLGtFQ1pULCtFQUVlLE1BRmYxTixFQUFBLGlDQUVla0QsU0FBTSxTQUFrQnlLLEVBQUtySixHQUMxQyxJQUFLLElBQUlwRSxFQUFJLEVBQUdBLEVBQUl5TixFQUFJdkwsT0FBUWxDLElBQzlCLEdBQUl5TixFQUFJek4sR0FBR29FLEdBQUksT0FBTyxFQUV4QixPQUFPLDZIQ1hNLFdBQ2IsSUFBSXNKLEVBQU9oTCxNQUFNZCxVQUFVZSxNQUFNeEMsS0FBS3lDLFdBRXRDLE9BQU8sV0FLTCxJQUpBLElBQUkrQyxFQUFPK0gsRUFBS0EsRUFBS3hMLE9BQVMsR0FDMUIwSixFQUFTLENBQUNqRyxFQUFLbkQsTUFBTW1ELEVBQU0vQyxZQUMzQjVDLEVBQUkwTixFQUFLeEwsT0FBUyxFQUVkbEMsR0FBSyxJQUFLQSxFQUFHLENBQ25CLElBQU1nQyxFQUFNMEwsRUFBSzFOLEdBRWpCNEwsRUFBUyxDQUFDNUosRUFBSVEsTUFBTVIsRUFBSzRKLElBRTNCLE9BQU9BLEVBQU8sdURDTmxCLCtFQUVlLE1BRmY5TCxFQUFBLGlDQUVla0QsU0FBTSxTQUFvQjFDLEVBQUd5RixHQUUxQyxPQUFZLE1BQUxBLEdBQWFBLEdBQU1BLEVBQUl6RixFQUFJeUYsa0VDSHBDLCtFQUVlLE1BRmZqRyxFQUFBLGlDQUVla0QsU0FBTSxTQUFvQnVCLEVBQUlILEdBRzNDLElBRkEsSUFBSXBFLEVBQUksRUFDRkMsRUFBSW1FLEVBQUVsQyxPQUNMbEMsRUFBSUMsR0FBRyxDQUNaLEdBQUlzRSxFQUFHSCxFQUFFcEUsSUFDUCxPQUFPQSxFQUVUQSxHQUFLLEVBRVAsT0FBUSw2SENqQkssU0FBbUJtRCxHQUNoQyxPQUFPQSxnSENFTSxTQUFrQkEsR0FDL0IsT0FBTyxFQUFBRSxFQUFBTCxTQUFPRyxLQUFNLEVBQUFZLEVBQUFmLFNBQU9HLEdBQUcsRUFBQTBDLEVBQUE3QyxTQUFNRyxLQUx0QyxJQUFBMEMsRUFBQS9DLEVBQUFoRCxFQUFBLElBQ0F1RCxFQUFBUCxFQUFBaEQsRUFBQSxJQUNBaUUsRUFBQWpCLEVBQUFoRCxFQUFBLDJLQ0FBLElBQUErQyxFQUFBQyxFQUFBaEQsRUFBQSxJQUNBb0csRUFBQXBELEVBQUFoRCxFQUFBLEtBQ0FxRyxFQUFBckQsRUFBQWhELEVBQUEsS0FDQWdLLEVBQUFoSCxFQUFBaEQsRUFBQSxLQUNBMEUsRUFBQTFCLEVBQUFoRCxFQUFBLCtEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQWV1QixHQUNsQyxJQUFNb0osR0FBUyxFQUFBekgsRUFBQWxELFVBQU8sRUFBQUgsRUFBQUcsU0FBTXVCLElBQzVCLE9BQU8sRUFBQTFCLEVBQUFHLFNBQU0sV0FDWCxPQUFPLEVBQUFtRCxFQUFBbkQsU0FBQThHLEVBQUE5RyxTQUFTLEVBQUF3QixFQUFBeEIsU0FBSTJLLEVBQVEvSyxVQUFVLElBQUtGLE1BQU1kLFVBQVVlLE1BQU14QyxLQUFLeUMsVUFBVyxzRUNQckYsK0VBRWUsTUFGZjlDLEVBQUEsaUNBRWVrRCxTQUFNLFNBQWNvQixFQUFHc0MsR0FDcEMsT0FBT0EsRUFBSXRDLEVBQUlzQyxFQUFJdEMsNkhDUE4sU0FBaUJqQixHQUM5QixPQUFjLElBQU5BLElBQWdCLEVBQUFFLEVBQUFMLFNBQU9HLElBSGpDLE1BQUFFLEtBQUF2RCxFQUFBLG9KQ0dBLElBQUErQyxFQUFBQyxFQUFBaEQsRUFBQSxJQUNBOE4sRUFBQTlLLEVBQUFoRCxFQUFBLCtEQUVlLEVBQUErQyxFQUFBRyxTQUFNLFNBQWNvQixFQUFHc0MsR0FDcEMsT0FBTyxFQUFBa0gsRUFBQTVLLFNBQVEsU0FBbUJHLEVBQUdjLEdBQUssTUFBTyxDQUFDZCxFQUFHYyxJQUFNRyxFQUFHc0MscUlDTmhFLElBQUE3RCxFQUFBQyxFQUFBaEQsRUFBQSxJQUNBaUwsRUFBQWpJLEVBQUFoRCxFQUFBLEtBQ0FzTCxFQUFBdEksRUFBQWhELEVBQUEsS0FDQStOLEVBQUEvTixFQUFBLElBQ0FnTyxFQUFBaE8sRUFBQSxJQUNBaU8sRUFBQWpPLEVBQUEsdURBR0EsSUFDTWtPLEdBQVEsRUFBQW5MLEVBQUFHLFNBQU0sU0FBQ3ZCLEVBQUdvTCxHQUFKLE9BQVlBLEVBQUlvQixVQUFVcEIsRUFBSTNLLE9BQVNULEVBQUdvTCxFQUFJM0ssVUFDNURnTSxHQUFTLEVBQUFyTCxFQUFBRyxTQUFNLFNBQUN2QixFQUFHb0wsR0FBSixPQUFZQSxFQUFJb0IsVUFBVSxFQUFHeE0sS0FDNUMwTSxHQUFPLEVBQUF0TCxFQUFBRyxTQUFNLFNBQUNvTCxFQUFRM00sR0FBVCxPQUFldU0sRUFBTUksRUFIMUIsV0FHMEMzTSxLQUVsRDRNLEVBQWEsU0FBQ0MsRUFBS3BMLEdBQU4sT0FBY0EsRUFBTW9MLEdBQU9BLEdBR3hDQyxFQUFTLENBQ2JDLEtBQU0sU0FBQWxPLEdBQUMsT0FBSTZOLEVBQUssRUFBRzdOLEVBQUVnSCxnQkFDckJtSCxHQUFJLFNBQUFuTyxHQUFDLE9BQUkwTixFQUFNLEVBQUdHLEVBQUssRUFBRzdOLEVBQUVnSCxpQkFDNUJvSCxLQUFNLFNBQUFwTyxHQUFDLE9BQUl3TixFQUFBYSxPQUFPck8sRUFBRWlILGFBQ3BCcUgsSUFBSyxTQUFBdE8sR0FBQyxPQUFJNE4sRUFBTyxFQUFHSixFQUFBYSxPQUFPck8sRUFBRWlILGNBQzdCc0gsR0FBSSxTQUFBdk8sR0FBQyxPQUFJNk4sRUFBSyxFQUFHN04sRUFBRWlILFdBQWEsSUFDaEN1SCxFQUFHLFNBQUF4TyxHQUFDLE9BQUlBLEVBQUVpSCxXQUFhLEdBQ3ZCd0gsRUFBRyxTQUFBek8sR0FBQyxPQUFJLEVBQUE4SyxFQUFBcEksU0FBUTFDLElBQ2hCME8sR0FBSSxTQUFBMU8sR0FBQyxPQUFJNk4sRUFBSyxHQUFHLEVBQUEvQyxFQUFBcEksU0FBUTFDLEtBQ3pCMk8sR0FBSSxTQUFBM08sR0FBQyxPQUFJNk4sRUFBSyxFQUFHN04sRUFBRWtILFlBQ25CMEgsRUFBRyxTQUFBNU8sR0FBQyxPQUFJQSxFQUFFa0gsV0FDVjJILEtBQU0sU0FBQTdPLEdBQUMsT0FBSXVOLEVBQUF1QixTQUFTOU8sRUFBRStPLFdBQ3RCQyxJQUFLLFNBQUFoUCxHQUFDLE9BQUk0TixFQUFPLEVBQUdMLEVBQUF1QixTQUFTOU8sRUFBRStPLFlBQy9CRSxHQUFJLFNBQUFqUCxHQUFDLE9BQUk0TixFQUFPLEVBQUdMLEVBQUF1QixTQUFTOU8sRUFBRStPLFlBQzlCL08sRUFBRyxTQUFBQSxHQUFDLE9BQUlBLEVBQUUrTyxVQUNWRyxHQUFJLFNBQUFsUCxHQUFDLE9BQUk2TixFQUFLLEVBQUc3TixFQUFFbVAsYUFDbkJDLEVBQUcsU0FBQXBQLEdBQUMsT0FBSUEsRUFBRW1QLFlBQ1ZFLEdBQUksU0FBQXJQLEdBQUMsT0FBSTZOLEVBQUssRUFBR0UsRUFBVyxHQUFJL04sRUFBRW1QLGNBQ2xDRyxFQUFHLFNBQUF0UCxHQUFDLE9BQUkrTixFQUFXLEdBQUkvTixFQUFFbVAsYUFDekJJLEdBQUksU0FBQXZQLEdBQUMsT0FBSTZOLEVBQUssRUFBRzdOLEVBQUV3UCxlQUNuQjFQLEVBQUcsU0FBQUUsR0FBQyxPQUFJQSxFQUFFd1AsY0FDVkMsR0FBSSxTQUFBelAsR0FBQyxPQUFJNk4sRUFBSyxFQUFHN04sRUFBRTBQLGVBQ25Cak8sRUFBRyxTQUFBekIsR0FBQyxPQUFJQSxFQUFFMFAsY0FDVkMsRUFBRyxTQUFBM1AsR0FBQyxPQUFJQSxFQUFFbVAsV0FBYSxHQUFLLEtBQU8sTUFDbkNyTCxFQUFHLFNBQUE5RCxHQUFDLE9BQUlBLEVBQUVtUCxXQUFhLEdBQUssS0FBTyxNQUNuQ1MsSUFBSyxTQUFBNVAsR0FBQyxPQUFJNk4sRUFBSyxFQUFHN04sRUFBRTZQLG9CQUNwQkMsR0FBSSxTQUFBOVAsR0FBQyxPQUFJNE4sRUFBTyxFQUFHQyxFQUFLLEVBQUc3TixFQUFFNlAscUJBQzdCRSxFQUFHLFNBQUEvUCxHQUFDLE9BQUk0TixFQUFPLEVBQUdDLEVBQUssRUFBRzdOLEVBQUU2UCxxQkFDNUJHLEVBQUcsU0FBQWhRLEdBQUMsT0FBSXVHLEtBQUtrQixNQUFNekgsRUFBRWlILFdBQWEsR0FBSyxLQUluQ2dKLEdBQXFCLEVBQUExTixFQUFBRyxTQUFNLFNBQUN3TixFQUFNQyxHQUN0QyxPQUFPbEMsRUFBT2tDLEdBQVNsQyxFQUFPa0MsR0FBT0QsR0FBUUMsT0FjaEMsRUFBQTVOLEVBQUFHLFNBQU0sU0FBeUIwTixFQUFRRixHQUVwRCxPQUFLLEVBQUF6RixFQUFBL0gsU0FBWXdOLEdBQ1ZFLEVBQU8xRCxNQUFQZSxFQUFBNEMsYUFBMEIzSyxJQUFJdUssRUFBbUJDLElBQU81RCxLQUFLLElBRHJDLDZKQ2xFVCxDQUN0QixTQUNBLFNBQ0EsVUFDQSxZQUNBLFdBQ0EsU0FDQSxvSENOb0IsQ0FDcEIsVUFDQSxXQUNBLFFBQ0EsUUFDQSxNQUNBLE9BQ0EsT0FDQSxTQUNBLFlBQ0EsVUFDQSxXQUNBLDhIQ1Z5QixxUUNIM0IsTUFBQWpDLEtBQUE3SyxFQUFBLDJDQUVlLFNBQUNRLEdBQ2QsT0FBTyxFQUFBcUssRUFBQTNILFNBQVMsSUFBSWtFLEtBQWIsQ0FBcUI1RyxHQUFLLGlJQ0hwQixTQUFDQSxHQUFELE9BQU9BLEVBQUkscUlDQVgsU0FBQ0EsR0FBRCxPQUFPQSxFQUFJLG9JQ0FYLFNBQUNBLEdBQUQsT0FBT0EsRUFBSSxtSUNBWCxTQUFDQSxHQUFELE9BQU9BLEVBQUkiLCJmaWxlIjoiZnVuLmpzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFwiZnVuLmpzXCIsIFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcImZ1bi5qc1wiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJmdW4uanNcIl0gPSBmYWN0b3J5KCk7XG59KSh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgPyBzZWxmIDogdGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDM4KTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXVzZS1iZWZvcmUtZGVmaW5lICovXG4vKipcbiAqIEBmdW5jdGlvbiBjdXJyeVxuICogQGRlc2NyaXB0aW9uIEF1dG9jdXJyaWVzIHRoZSBwcm92aWRlZCBmdW5jdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjdXJyeSAoZnVuKSB7XG4gIGNvbnN0IGFyZ3NsZW4gPSBmdW4ubGVuZ3RoXG5cbiAgaWYgKGFyZ3NsZW4gPT09IDApIHtcbiAgICByZXR1cm4gZnVuXG4gIH1cbiAgcmV0dXJuIGNyZWF0ZVJlY3Vyc2VyKFtdKVxuXG4gIGZ1bmN0aW9uIHJlY3Vyc2UgKGFjYywgYXJncykge1xuICAgIGNvbnN0IF9hY2MgPSBhY2MuY29uY2F0KGFyZ3MpXG4gICAgcmV0dXJuIF9hY2MubGVuZ3RoIDwgYXJnc2xlblxuICAgICAgPyBjcmVhdGVSZWN1cnNlcihfYWNjKVxuICAgICAgOiBmdW4uYXBwbHkodGhpcywgX2FjYylcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVJlY3Vyc2VyIChhY2MpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHJlY3Vyc2UoYWNjLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKVxuICAgIH1cbiAgfVxufVxuIiwiLyoqXG4gKiBAZnVuY3Rpb24gaXNcbiAqIEBkZXNjcmlwdGlvbiBWZXJpZmllcyB0aGUgdHlwZSBvZiB0aGUgcHJvdmlkZWQgYXJndW1lbnRcbiAqXG4gKi9cblxuaW1wb3J0IGN1cnJ5IGZyb20gJy4vY3VycnknXG5pbXBvcnQgdHlwZSBmcm9tICcuL3R5cGUnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGlzIChDdG9yLCB2YWwpIHtcbiAgcmV0dXJuIHR5cGUodmFsKSA9PT0gQ3RvclxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIG5vdFxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gbm90ICh4KSB7XG4gIHJldHVybiAheFxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIGV4aXN0c1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleGlzdHMgKHgpIHtcbiAgcmV0dXJuICEoeCA9PSBudWxsKVxufTtcbiIsIi8qKlxuICogQGZ1bmN0aW9uIHR5cGVcbiAqL1xuaW1wb3J0IGN1cnJ5MSBmcm9tICcuLi9fcHJpdmF0ZS9jdXJyeTEnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5MShmdW5jdGlvbiB0eXBlICh4KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoeCkuc2xpY2UoOCwgLTEpXG59KVxuIiwiLyoqXG5cbiAqIEBmdW5jdGlvbiBlcXVhbHNcbiAqIEBkZXNjcmlwdGlvbiBjaGVja3MgZm9yIGVxdWFsaXR5XG4gKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuL2N1cnJ5J1xuaW1wb3J0IGV4aXN0cyBmcm9tICcuL2V4aXN0cydcbmltcG9ydCBpZGVudGljYWwgZnJvbSAnLi9pZGVudGljYWwnXG5pbXBvcnQgdHlwZSBmcm9tICcuL3R5cGUnXG5pbXBvcnQgbm90IGZyb20gJy4vbm90J1xuaW1wb3J0IG9yIGZyb20gJy4vb3InXG5pbXBvcnQgaXNPYmplY3QgZnJvbSAnLi4vb2JqZWN0L2lzJ1xuaW1wb3J0IGlzQXJyYXkgZnJvbSAnLi4vYXJyYXkvaXMnXG5pbXBvcnQgaXNCb29sZWFuIGZyb20gJy4uL2Jvb2xlYW4vaXMnXG5pbXBvcnQgaXNOdW1iZXIgZnJvbSAnLi4vbnVtYmVyL2lzJ1xuaW1wb3J0IGlzU3RyaW5nIGZyb20gJy4uL3N0cmluZy9pcydcbmltcG9ydCBpc0RhdGUgZnJvbSAnLi4vZGF0ZS9pcydcbmltcG9ydCBlcXVhbHNBcnJheSBmcm9tICcuLi9hcnJheS9lcXVhbHMnXG5pbXBvcnQgZXF1YWxzT2JqZWN0IGZyb20gJy4uL29iamVjdC9lcXVhbHMnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGVxdWFscyAoeCwgeSkge1xuICBpZiAoaWRlbnRpY2FsKHgsIHkpKSByZXR1cm4gdHJ1ZVxuXG4gIGlmICh0eXBlKHgpICE9PSB0eXBlKHkpKSByZXR1cm4gZmFsc2VcblxuICBpZiAob3Iobm90KGV4aXN0cyh4KSksIG5vdChleGlzdHMoeSkpKSkgcmV0dXJuIGZhbHNlXG5cbiAgaWYgKHguY29uc3RydWN0b3IgIT09IHkuY29uc3RydWN0b3IpIHJldHVybiBmYWxzZVxuXG4gIGlmIChpc1N0cmluZyh4KSB8fCBpc0Jvb2xlYW4oeCkgfHwgaXNOdW1iZXIoeCkgfHwgaXNEYXRlKHgpKSB7XG4gICAgcmV0dXJuIGlkZW50aWNhbCh4LnZhbHVlT2YoKSwgeS52YWx1ZU9mKCkpXG4gIH1cbiAgaWYgKGlzQXJyYXkoeCkpIHtcbiAgICByZXR1cm4gZXF1YWxzQXJyYXkoeCwgeSlcbiAgfSBlbHNlIGlmIChpc09iamVjdCh4KSkge1xuICAgIHJldHVybiBlcXVhbHNPYmplY3QoeCwgeSlcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn0pXG4iLCIvKipcbiAqIFJldHVybnMgdGhlIG93biBrZXlzIG9mIGFuIG9iamVjdCBhcyBhbiBBcnJheVxuICpcbiAqIEBmdW5jdGlvblxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyBhIC0+IFtiXVxuICogQHBhcmFtIHtPYmplY3R9XG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBrZXlzIChhKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhPYmplY3QoYSkpXG59KVxuIiwiLyoqXG5cbiAqIEBmdW5jdGlvbiBlbXB0eVxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdGhlIGVtcHR5IGVxdWl2YWxlbnQgb2YgdGhlIGZpcnN0IGFyZ3VtZW50XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZW1wdHkgKHgpIHtcbiAgcmV0dXJuIG5ldyB4LmNvbnN0cnVjdG9yKClcbn07XG4iLCIvKipcblxuICogQGZ1bmN0aW9uIGlkZW50aWNhbFxuICogQGRlc2NyaXB0aW9uIGNoZWNrcyBmb3IgaWRlbnRpbnRpY2FsIGl0ZW1zXG4gKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuL2N1cnJ5J1xuaW1wb3J0IGlzTmFuIGZyb20gJy4uL251bWJlci9pc05hbidcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gaWRlbnRpY2FsICh4LCB5KSB7XG4gIGlmICh4ID09PSAwICYmIHkgPT09IDApIHtcbiAgICByZXR1cm4gMSAvIHggPT09IDEgLyB5XG4gIH1cbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiAhIShpc05hbih4KSAmJiBpc05hbih5KSlcbn0pXG4iLCIvKipcbiAqIEBwcml2YXRlXG4gKi9cbmltcG9ydCBpcyBmcm9tICcuLi91dGlsL2lzJ1xuXG5leHBvcnQgZGVmYXVsdCBpcygnTnVtYmVyJylcbiIsIi8qKlxuICogUmV0dXJucyBhIGN1cnJpZWQgZnVuY3Rpb24gd2l0aCBhcml0eSAxXG4gKiBAZnVuY3Rpb24gY3VycnkxXG4gKiBAcHJpdmF0ZVxuICogQHNpbmNlIHYxLjAuMlxuICoqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjdXJyeTEgKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBjdXJyaWVkIChhKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDBcbiAgICAgID8gdGhpc1xuICAgICAgOiBmbihhKVxuICB9XG59XG4iLCIvKipcblxuICovXG5pbXBvcnQgaXMgZnJvbSAnLi4vdXRpbC9pcydcblxuZXhwb3J0IGRlZmF1bHQgaXMoJ09iamVjdCcpXG4iLCIvKipcbiAqIENoZWNrcyBpZiB0aGUgcHJvdmlkZWQgb2JqZWN0IGlzIGFuIGFycmF5LCBhdXRvY3VycmllZCBmdW5jdGlvblxuICpcbiAqIEBwcml2YXRlXG4gKiBAZnVuY3Rpb24gaXNBcnJheVxuICogQGRlc2NyaXB0aW9uIENoZWNrcyBpZiB0aGUgcHJvdmlkZWQgb2JqZWN0IGlzIGFuIGFycmF5LCBhdXRvY3VycmllZCBmdW5jdGlvblxuICogQHBhcmFtIHsqfSBPYmplY3QgdG8gdmVyaWZpeVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqIEBzaW5jZSAxLjAuMlxuICogQGV4YW1wbGVcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBpc0FycmF5KFsxLDEsMV0pXG4gKiAvLyByZXN1bHQgPSB0cnVlXG4gKi9cblxuaW1wb3J0IGlzIGZyb20gJy4uL3V0aWwvaXMnXG5cbmV4cG9ydCBkZWZhdWx0IGlzKCdBcnJheScpXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSBkaWVyaWNreC5sZW4gb24gMDEvMDQvMjAxNy5cclxuICovXHJcbi8qKlxyXG4gKiBDcmVhdGVkIGJ5IGRpZXJpY2t4LmxlbiBvbiAwMS8wNC8yMDE3LlxyXG4gKi9cclxuaW1wb3J0IGlzIGZyb20gJy4uL3V0aWwvaXMnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBpcygnRGF0ZScpXHJcbiIsIi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHdpdGggdGhlIGluaXRpYWwgdmFsdWUgcHJvdmlkZWRcbiAqXG4gKiBAZnVuY3Rpb24gYWx3YXlzXG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyBhIGZ1bmN0aW9uIHdpdGggdGhlIGluaXRpYWwgdmFsdWUgcHJvdmlkZWRcbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBzaWcgYSAtPiAoKiAtPiBhKVxuICogQHBhcmFtIHsqfSBhXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBhbHdheXMgKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHggfVxufSlcbiIsIi8qKlxuICogTWFwcyBvdmVyIGFuIGl0ZXJhYmxlIGFuZCBhcHBsaWVzIGEgZnVuY3Rpb25cbiAqXG4gKiBAZnVuY3Rpb24gbWFwXG4gKiBAZGVzY3JpcHRpb24gQXV0b2N1cnJpZWQgZnVuY3Rpb24gd2hpY2ggbWFwcyBvdmVyIGFuIGl0ZXJhYmxlLlxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyAoY3VycmVudFZhbHVlLCBpZHgsIFthXSkgLT4gYiAtPiBiXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHtJdGVyYWJsZX0gYVxuICogQHJldHVybiB7SXRlcmFibGV9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBhcnJheU1hcCBmcm9tICcuLi9hcnJheS9tYXAnXG5pbXBvcnQgb2JqZWN0TWFwIGZyb20gJy4uL29iamVjdC9tYXAnXG5pbXBvcnQgbWFwTWFwIGZyb20gJy4uL21hcC9tYXAnXG5pbXBvcnQgc3RyaW5nTWFwIGZyb20gJy4uL3N0cmluZy9tYXAnXG5pbXBvcnQgdHlwZSBmcm9tICcuLi91dGlsL3R5cGUnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIG1hcCAoY2IsIGEpIHtcbiAgc3dpdGNoICh0eXBlKGEpKSB7XG4gIC8vIHN3aXRjaCAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpKSB7XG4gICAgY2FzZSAnRnVuY3Rpb24nOlxuICAgICAgcmV0dXJuIGN1cnJ5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGNiLmNhbGwodGhpcywgYS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKVxuICAgICAgfSlcbiAgICBjYXNlICdPYmplY3QnOlxuICAgICAgcmV0dXJuIG9iamVjdE1hcChjYiwgYSlcbiAgICBjYXNlICdTdHJpbmcnOlxuICAgICAgcmV0dXJuIHN0cmluZ01hcChjYiwgYSlcbiAgICBjYXNlICdNYXAnOlxuICAgICAgcmV0dXJuIG1hcE1hcChjYiwgYSlcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGFycmF5TWFwKGNiLCBhKVxuICB9XG59KVxuIiwiLyoqXG4gKiBAcHJpdmF0ZVxuICogQGZ1bmN0aW9uIGVxdWFsc0FycmF5XG4gKiBAZGVzY3JpcHRpb24gQXV0b2N1cnJpZWQgZnVuY3Rpb24gZm9yIGRlZXAgY29tcGFyaXNvbiBvZiBhcnJheXNcbiAqIEBwYXJhbSB7YX0geCAtIE9iamVjdCB0byBjb21wYXJlIG9mIHR5cGUgYVxuICogQHBhcmFtIHthfSB5IC0gT2JqZWN0IHggdG8gY29tcGFyZSB3aXRoIG9iamVjdCB4XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBub3QgZnJvbSAnLi4vdXRpbC9ub3QnXG5pbXBvcnQgZXF1YWxzIGZyb20gJy4uL3V0aWwvZXF1YWxzJ1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBlcXVhbHNBcnJheSAoeCwgeSkge1xuICBpZiAoeC5sZW5ndGggIT09IHkubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB4Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKG5vdChlcXVhbHMoeFtpXSwgeVtpXSkpKSByZXR1cm4gZmFsc2VcbiAgfVxuICByZXR1cm4gdHJ1ZVxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIGlzTmFOXG4gKiBAZGVzY3JpcHRpb24gQ2hlY2tzIGlmIG51bWJlciBpcyBOQU5cblxuICovXG5pbXBvcnQgaXNOdW1iZXIgZnJvbSAnLi9pcydcbmltcG9ydCBhbmQgZnJvbSAnLi4vdXRpbC9hbmQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzTmFuICh4KSB7XG4gIHJldHVybiBhbmQoaXNOdW1iZXIoeCksIGlzTmFOKHgpKVxufTtcbiIsIi8qKlxuICogQ2hlY2tzIGlmIGJvdGggcHJlZGljYXRlcyBhcmUgdHJ1ZVxuICpcbiAqIEBmdW5jdGlvbiBhbmRcbiAqIEBkZXNjcmlwdGlvbiBDaGVja3MgaWYgYm90aCBwcmVkaWNhdGVzIGFyZSB0cnVlXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnICh4LCB5KSAtPiBib29sZWFuXG4gKiBAcGFyYW0geyp9IHggLSBBIHByZWRpY2F0ZVxuICogQHBhcmFtIHsqfSB5IC0gQSBwcmVkaWNhdGVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYW5kICh4LCB5KSB7XG4gIHJldHVybiB4ICYmIHlcbn0pXG4iLCIvKipcbiAqIEBmdW5jdGlvbiBvclxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdHJ1ZSBpZiBvbmUgb3IgdGhlIG90aGVyIGlzIHRydWVcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4vY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIG9yICh4LCB5KSB7XG4gIHJldHVybiB4IHx8IHlcbn0pXG4iLCIvKipcbiAqIEN1cnJpZWQgZnVuY3Rpb24gdGhhdCB2ZXJpZmllcyBvZiB0aGUgcHJvdmlkZWQgYXJndW1lbnQgaXMgYSBib29sZWFuXG4gKlxuICogQHByaXZhdGVcbiAqIEBmdW5jdGlvbiBpc1xuICogQGRlc2NyaXB0aW9uIEN1cnJpZWQgZnVuY3Rpb24gdGhhdCB2ZXJpZmllcyBvZiB0aGUgcHJvdmlkZWQgYXJndW1lbnQgaXMgYSBib29sZWFuXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAcGFyYW0geyp9IEl0ZW0gdG8gdmVyaWZ5XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICoqL1xuaW1wb3J0IGlzIGZyb20gJy4uL3V0aWwvaXMnXG5cbmV4cG9ydCBkZWZhdWx0IGlzKCdCb29sZWFuJylcbiIsIi8qKlxuXG4gKi9cbmltcG9ydCBpcyBmcm9tICcuLi91dGlsL2lzJ1xuXG5leHBvcnQgZGVmYXVsdCBpcygnU3RyaW5nJylcbiIsIi8qKlxuXG4gKiBlcXVhbHNcbiAqIGNoZWNrcyBmb3IgZXF1YWxpdHlcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5pbXBvcnQgZXhpc3RzIGZyb20gJy4uL3V0aWwvZXhpc3RzJ1xuaW1wb3J0IG5vdCBmcm9tICcuLi91dGlsL25vdCdcbmltcG9ydCBlcXVhbHMgZnJvbSAnLi4vdXRpbC9lcXVhbHMnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KCh4LCB5KSA9PiB7XG4gIGZvciAobGV0IGtleVggaW4geCkge1xuICAgIC8vIG5vaW5zcGVjdGlvbiBKU1VuZmlsdGVyZWRGb3JJbkxvb3BcbiAgICBpZiAobm90KGVxdWFscyh4W2tleVhdLCB5W2tleVhdKSkpIHJldHVybiBmYWxzZVxuICB9XG5cbiAgZm9yIChsZXQga2V5WSBpbiB5KSB7XG4gICAgaWYgKG5vdChleGlzdHMoeFtrZXlZXSkpICYmIGV4aXN0cyh5W2tleVldKSkgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gdHJ1ZVxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIHRvQXJyYXlcbiAqIEBkZXNjcmlwdGlvbiBDb252ZXJ0cyB0aGUgaW5wdXQgdG8gYW4gYXJyYXlcbiAqIEBwYXJhbSB7QXJyYXlMaWtlfSB4IC0gT2JqZWN0IHRvIGNvbnZlcnQgdG8gYW4gYXJyYXlcbiAqIEByZXR1cm4ge0FycmF5fVxuICogQHNpbmNlIDEuMC4yXG4gKiBAZXhhbXBsZVxuICpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvQXJyYXkoXCJzdHJpbmdcIilcbiAqIC8vIHJlc3VsdCA9IFsncycsJ3QnLCdyJywnaScsJ24nLCdnJ11cbiAqXG4gKiBmdW5jdGlvbiAoKSB7XG4gKiAgY29uc3QgYXJncyA9IHRvQXJyYXkoYXJndW1lbnRzKVxuICogIGNvbnNvbGUubG9nKHR5cGVvZiBhcmdzKSAvLyBBcnJheVxuICogfVxuICpcbiAqKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvQXJyYXkgKHgpIHtcbiAgcmV0dXJuIHgubGVuZ3RoID09PSAxID8gW3hbMF1dIDogQXJyYXkuYXBwbHkobnVsbCwgeClcbn07XG4iLCIvKipcbiAqIEBmdW5jdGlvbiB1bmlvbkFycmF5XG4gKiBAZGVzY3JpcHRpb24gTWVyZ2VzIDIgYXJyYXlzXG4gKiBAcGFyYW0ge0FycmF5fSBhTCAtIEFycmF5IHRvIG1lcmdlXG4gKiBAcGFyYW0ge0FycmF5fSBhUiAtIEFycmF5IHRvIG1lcmdlXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqIEBzaW5jZSAxLjAuMlxuICogQGV4YW1wbGVcbiAqXG4gKiBjb25zdCByZXN1bHQgPSB1bmlvbkFycmF5KFswLDEsMl0sIFszLDQsNV0pXG4gKiAvLyByZXN1bHQgPSBbMC4xLjIuMy40LjVdXG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gdW5pb25BcnJheSAoYUwsIGFSKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKG5ldyBTZXQoYUwuY29uY2F0KGFSKSkpXG59KVxuIiwibGV0IEp1c3QgPSBmdW5jdGlvbiAodmFsKSB7XG4gIHRoaXMuX3ZhbHVlID0gdmFsXG4gIHJldHVybiB0aGlzXG59XG5cbkp1c3QucHJvdG90eXBlLmlzSnVzdCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWVcbn1cbkp1c3QucHJvdG90eXBlLmlzTm90aGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZhbHNlXG59XG5cbmV4cG9ydCBkZWZhdWx0IEp1c3RcbiIsImxldCBOb3RoaW5nID0gZnVuY3Rpb24gKCkge1xufVxuXG5Ob3RoaW5nLnByb3RvdHlwZS5pc0p1c3QgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmYWxzZVxufVxuTm90aGluZy5wcm90b3R5cGUuaXNOb3RoaW5nID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZVxufVxuXG5leHBvcnQgZGVmYXVsdCBOb3RoaW5nXG4iLCIvKipcbiAqIEBmdW5jdGlvbiBmb2xkXG4gKiBAcHJpdmF0ZVxuICpcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5pbXBvcnQga2V5cyBmcm9tICcuL2tleXMnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGZvbGQgKGNiLCBpbml0LCBvKSB7XG4gIGNvbnN0IGsgPSBrZXlzKG8pXG4gIGxldCBpID0gLTFcbiAgY29uc3QgbCA9IGsubGVuZ3RoXG4gIGxldCByID0gT2JqZWN0KGluaXQpXG4gIHdoaWxlICgrK2kgPCBsKSB7XG4gICAgciA9IGNiKHIsIG9ba1tpXV0sIGtbaV0sIG8pXG4gIH1cbiAgcmV0dXJuIHJcbn0pXG4iLCIvKipcbiAqIE1hcHMgb3ZlciBhbiBvYmplY3QgYW5kIGFwcGxpZXMgYSBmdW5jdGlvblxuICpcbiAqIEBmdW5jdGlvblxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyAoY3VycmVudFZhbHVlLCBpZHgsIFthXSkgLT4ge2J9IC0+IFtiXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2JcbiAqIEBwYXJhbSB7T2JqZWN0fSBhXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBlbXB0eSBmcm9tICcuLi91dGlsL2VtcHR5J1xuaW1wb3J0IGtleXMgZnJvbSAnLi9rZXlzJ1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBtYXAgKGNiLCBhKSB7XG4gIGNvbnN0IGsgPSBrZXlzKGEpXG4gIGxldCBpID0gLTFcbiAgY29uc3QgbCA9IGsubGVuZ3RoXG4gIGNvbnN0IHIgPSBlbXB0eShhKVxuICB3aGlsZSAoKytpIDwgbCkge1xuICAgIHJba1tpXV0gPSBjYihhW2tbaV1dLCBrW2ldLCBhKVxuICB9XG4gIHJldHVybiByXG59KVxuIiwiLyoqXG4gKiBNYXBzIG92ZXIgYSBNYXAgYW5kIGFwcGxpZXMgYSBmdW5jdGlvblxuICpcbiAqIEBmdW5jdGlvblxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyAoY3VycmVudFZhbHVlLCBpZHgsIFthXSkgLT4ge2J9IC0+IFtiXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2JcbiAqIEBwYXJhbSB7TWFwfSBhXG4gKiBAcmV0dXJuIHtNYXB9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBlbXB0eSBmcm9tICcuLi91dGlsL2VtcHR5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBtYXAgKGNiLCBhKSB7XG4gIGNvbnN0IHIgPSBlbXB0eShhKVxuICBhLmZvckVhY2goKHYsIGssIG1hcCkgPT4ge1xuICAgIHIuc2V0KGssIGNiKHYsIGssIG1hcCkpXG4gIH0pXG4gIHJldHVybiByXG59KVxuIiwiLyoqXG4gKiBAZnVuY3Rpb24gbWFwXG4gKiBAZGVzY3JpcHRpb24gTWFwcyBvdmVyIGFuIGFycmF5IGFuZCBhcHBsaWVzIGEgZnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNiXG4gKiBAcGFyYW0ge0l0ZXJhYmxlfSBhXG4gKiBAcmV0dXJuIHtJdGVyYWJsZX1cbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBleGFtcGxlXG4gKlxuICogIGNvbnN0IHJlc3VsdCA9IG1hcChpZGVudGl0eSwgWzAsMiwzXSlcbiAqICAvLyByZXN1bHQgPSBbMCwyLDNdXG4gKiAgY29uc3QgYWRkMiA9IGFkZCgyKVxuICogIGNvbnN0IHJlc3VsdCA9IG1hcChhZGQyLCBbMCwyLDNdKVxuICogIC8vIHJlc3VsdCA9IFsyLDQsNV1cbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBtYXAgKGNiLCBhKSB7XG4gIGxldCBpID0gLTFcbiAgY29uc3QgbCA9IGEubGVuZ3RoXG4gIGNvbnN0IHIgPSBuZXcgQXJyYXkobClcbiAgd2hpbGUgKCsraSA8IGwpIHtcbiAgICByW2ldID0gY2IoYVtpXSwgaSwgYSlcbiAgfVxuICByZXR1cm4gclxufSlcbiIsIi8qKlxuICogQXBwbGllcyBhIGxpc3Qgb2YgZnVuY3Rpb25zIHRvIGEgbGlzdCBvZiB2YWx1ZXMgYW5kIHJldHVybnMgYSBjb21iaW5lZCByZXN1bHQgYXJyYXlcbiAqXG4gKiBAZnVuY3Rpb24gYXBcbiAqIEBkZXNjcmlwdGlvbiBBcHBsaWVzIGEgbGlzdCBvZiBmdW5jdGlvbnMgdG8gYSBsaXN0IG9mIHZhbHVlcyBhbmQgcmV0dXJucyBhIGNvbWJpbmVkIHJlc3VsdCBhcnJheVxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyBAc2lnIFthIC0+IGJdIC0+IFthXSAtPiBbYl1cbiAqIEBwYXJhbSB7KEZ1bmN0aW9uW118RnVuY3Rpb258QXBwbGljYXRpdmUpfSBmbnMgLSBBbiBhcnJheSBvZiBmdW5jdGlvbnMgb3IgYSBmdW5jdGlvbiBvciBhbiBhcHBsaWNhdGl2ZVxuICogQHBhcmFtIHtBcnJheX0gdmFscyAtIEFuIGFycmF5IG9mIHZhbHVlc1xuICogQHJldHVybiB7SXRlcmFibGV9IFthXVxuICoqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5pbXBvcnQgY3VycnkxIGZyb20gJy4uL19wcml2YXRlL2N1cnJ5MSdcbmltcG9ydCBpcyBmcm9tICcuLi91dGlsL2lzJ1xuaW1wb3J0IGZvbGQgZnJvbSAnLi4vYXJyYXkvZm9sZCdcbmltcG9ydCBtYXAgZnJvbSAnLi4vYXJyYXkvbWFwJ1xuXG5jb25zdCBpc0Z1bmN0aW9uID0gaXMoJ0Z1bmN0aW9uJylcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYXAgKGZucywgdmFscykge1xuICBpZiAoaXNGdW5jdGlvbihmbnMuYXApKSB7XG4gICAgcmV0dXJuIGZucy5hcCh2YWxzKVxuICB9XG4gIGlmIChpc0Z1bmN0aW9uKGZucykpIHtcbiAgICByZXR1cm4geCA9PiBmbnMoeCkodmFscyh4KSlcbiAgfVxuICByZXR1cm4gZm9sZCgoYWNjLCBmKSA9PiBhY2MuY29uY2F0KG1hcChjdXJyeTEoZiksIHZhbHMpKSwgW10sIGZucylcbn0pXG4iLCIvKipcbiAqIEBwcml2YXRlXG4gKiBAZnVuY3Rpb24gZm9sZFxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgYSBzaW5nbGUgaXRlbSBieSBtYXBwaW5nIG92ZXIgdGhlIHByb3ZpZGVkIGFycmF5IGFuZCBjYWxsaW5nIGFuIGl0ZXJhdG9yIGZ1bmN0aW9uXG4gKiBAcGFyYW0ge2NiRnVuY3Rpb259IGNiIC0gQ2FsbGJhY2sgZnVuY3Rpb24gdG8gbW9kaWZ5IHRoZSBpdGVtXG4gKiBAcGFyYW0geyp9IGluaXQgLSBJbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0ge0FycmF5fSBhIC0gQXJyYXkgd2l0aCBpdGVtcyB0byBtb2RpZnkgYnkgdGhlIGNiIGZ1bmN0aW9uXG4gKiBAcmV0dXJuIHtBcnJheX1cbiAqIEBhbGlhcyByZWR1Y2VcbiAqIEBzaW5jZSAxLjAuMlxuICogQGV4YW1wbGVcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBmb2xkKGFkZCwgMCwgWzEsMSwxXSlcbiAqIC8vIHJlc3VsdCA9IDNcbiAqL1xuXG4vKipcbiAqIEBjYWxsYmFjayBjYkZ1bmN0aW9uXG4gKiBAcGFyYW0geyp9IHIgLSBBY2N1bXVsYXRvciB3aGljaCBhY2N1bXVsYXRlcyB0aGUgY2FsbGJhY2sncyByZXR1cm4gdmFsdWVzXG4gKiBAcGFyYW0geyp9IGl0ZW0gLSB0aGUgY3VycmVudCBlbGVtZW50IGJlaW5nIHByb2Nlc3NlZFxuICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IC0gdGhlIGluZGV5IG9mIHRoZSBpdGVtIGJlaW5nIHByb2Nlc3NlZFxuICogQHBhcmFtIHtBcnJheX0gYSAtIFRoZSBpbml0aWFsIGFycmF5XG4gKiBAcmV0dXJuIHsqfVxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gZm9sZCAoY2IsIGluaXQsIGEpIHtcbiAgbGV0IGkgPSAtMVxuICBjb25zdCBsID0gYS5sZW5ndGhcbiAgbGV0IHIgPSBpbml0XG4gIHdoaWxlICgrK2kgPCBsKSB7XG4gICAgciA9IGNiKHIsIGFbaV0sIGksIGEpXG4gIH1cbiAgcmV0dXJuIHJcbn0pXG4iLCIvKipcbiAqIFJldHVybnMgYSBzaW5nbGUgaXRlbSBieiBpdGVyYXRpbmcgb3ZlciBhbiBhcnJheSBsaWtlIG9iamVjdCBhbmQgY2FsbGEgZnVuY3Rpb24gb24gZWFjaCBpdGXDqVxuICpcbiAqIEBmdW5jdGlvbiBmb2xkXG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyBhIHNpbmdsZSBpdGVtIGJ6IGl0ZXJhdGluZyBvdmVyIGFuIGFycmF5IGxpa2Ugb2JqZWN0IGFuZCBjYWxsYSBmdW5jdGlvbiBvbiBlYWNoIGl0ZcOpXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnICgoYSwgYiwgYywgYSkg4oaSIGEpIOKGkiBhIOKGkiBbYl0g4oaSIGFcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNiIHJlY2VpdmVzIDQgdmFsdWVzOiB0aGUgYWNjdW11bGF0b3IsIHRoZSBpdGVtLCB0aGUgaW5kZXgsIGFuZCB0aGUgaW5pdGlhbCB2YWx1ZS5cbiAqIEBwYXJhbSB7Kn0gYSBpcyB0aGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHsqfSBbYl0gdGhlIGFycmF5IGxpa2UgaXRlbSB0byBpdGVyYXRlIG92ZXJcbiAqIEByZXR1cm4geyp9IGEgaXMgdGhlIGFjY3VtdWxhdGVkIHZhbHVlXG4gKiovXG5cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuaW1wb3J0IGFycmF5Rm9sZCBmcm9tICcuLi9hcnJheS9mb2xkJ1xuaW1wb3J0IG9iamVjdEZvbGQgZnJvbSAnLi4vb2JqZWN0L2ZvbGQnXG5pbXBvcnQgdHlwZSBmcm9tICcuL3R5cGUnXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGZvbGQgKGNiLCBpbml0LCBhKSB7XG4gIGNvbnN0IHR5cGVNYXAgPSB7XG4gICAgJ09iamVjdCc6IG9iamVjdEZvbGQsXG4gICAgJ0FycmF5JzogYXJyYXlGb2xkXG4gIH1cbiAgLy8gaWYgKGEubmV4dCkge1xuICAvLyAgIHJldHVybiBpdGVyYWJsZUZvbGQoY2IsIGluaXQsIGEpXG4gIC8vIH1cbiAgLy8gaWYgKHR5cGUoU3ltYm9sKSAhPT0gJ3VuZGVmaW5lZCcgJiYgYVtTeW1ib2wuaXRlcmF0b3JdKSB7XG4gIC8vICAgcmV0dXJuIGl0ZXJhYmxlRm9sZChjYiwgaW5pdCwgYVtTeW1ib2wuaXRlcmF0b3JdKCkpXG4gIC8vIH1cbiAgcmV0dXJuIHR5cGVNYXBbdHlwZShhKV0oY2IsIGluaXQsIGEpXG59KVxuXG4vLyBmdW5jdGlvbiBpdGVyYWJsZUZvbGQgKGNiLCBhY2MsIGdlbikge1xuLy8gICBsZXQgc3RlcCA9IGdlbi5uZXh0KClcbi8vICAgd2hpbGUgKCFzdGVwLmRvbmUpIHtcbi8vICAgICBhY2MgPSBjYihhY2MsIHN0ZXAudmFsdWUpXG4vLyAgICAgc3RlcCA9IGdlbi5uZXh0KClcbi8vICAgfVxuLy8gICByZXR1cm4gYWNjXG4vLyB9XG4iLCIvKipcblxuICogemlwV2l0aFxuICpcbiAqICBAZnVuY3Rpb24gemlwV2l0aFxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gemlwV2l0aCAoY2IsIGEsIGIpIHtcbiAgY29uc3QgYXJyID0gW11cbiAgY29uc3QgbGVuID0gTWF0aC5taW4oYS5sZW5ndGgsIGIubGVuZ3RoKVxuICBsZXQgaSA9IDBcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyLnB1c2goY2IoYVtpXSwgYltpXSkpXG4gIH1cbiAgcmV0dXJuIGFyclxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIGRpZmZEYXRlXG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIDIgZGF0ZXMgaW4gbWlsbGlzZWNvbmRcbiAqIEBwYXJhbSB7RGF0ZX0gc3RhcnQgLSBTdGFydCBkYXRlXG4gKiBAcGFyYW0ge0RhdGV9IGVuZCAtIEVuZCBkYXRlXG4gKiBAcmV0dXJuIHtudW1iZXJ9IFJFdHVybiB0aGUgZGlmZmVyZW5jZSBpbiBtaWxsaXNlY29uZHNcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGRpZmZEYXRlIChzdGFydCwgZW5kKSB7XG4gIHJldHVybiAobmV3IERhdGUoc3RhcnQpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGVuZCkuZ2V0VGltZSgpKVxufSlcbiIsIi8qKlxuICpcbiAqL1xuaW1wb3J0IGlzRGF0ZSBmcm9tICcuL2lzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1ZhbGlkICh4KSB7XG4gIC8vIG5vaW5zcGVjdGlvbiBKU0NoZWNrRnVuY3Rpb25TaWduYXR1cmVzXG4gIHJldHVybiBpc0RhdGUoeCkgJiYgaXNGaW5pdGUoeC52YWx1ZU9mKCkpXG59O1xuIiwiLyoqXG4gKiBAZnVuY3Rpb24gZ2V0V2Vla1xuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdGhlIHdlZWsgbnVtYmVyIGJhc2VkIG9uIGEgZ2l2ZW4gZGF0ZVxuICogQHBhcmFtIGRcbiAqIEByZXR1cm5zIHtudW1iZXJbXX1cbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGdldFdlZWsgKGQpIHtcbiAgLy8gQ29weSBkYXRlIHNvIGRvbid0IG1vZGlmeSBvcmlnaW5hbFxuICBkID0gbmV3IERhdGUoRGF0ZS5VVEMoZC5nZXRGdWxsWWVhcigpLCBkLmdldE1vbnRoKCksIGQuZ2V0RGF0ZSgpKSlcbiAgLy8gU2V0IHRvIG5lYXJlc3QgVGh1cnNkYXk6IGN1cnJlbnQgZGF0ZSArIDQgLSBjdXJyZW50IGRheSBudW1iZXJcbiAgLy8gTWFrZSBTdW5kYXkncyBkYXkgbnVtYmVyIDdcbiAgZC5zZXRVVENEYXRlKGQuZ2V0VVRDRGF0ZSgpICsgNCAtIChkLmdldFVUQ0RheSgpIHx8IDcpKVxuICAvLyBHZXQgZmlyc3QgZGF5IG9mIHllYXJcbiAgbGV0IHllYXJTdGFydCA9IG5ldyBEYXRlKERhdGUuVVRDKGQuZ2V0VVRDRnVsbFllYXIoKSwgMCwgMSkpXG5cbiAgLy8gQ2FsY3VsYXRlIGZ1bGwgd2Vla3MgdG8gbmVhcmVzdCBUaHVyc2RheVxuICBsZXQgd2Vla05vID0gTWF0aC5jZWlsKCgoKGQgLSB5ZWFyU3RhcnQpIC8gODY0MDAwMDApICsgMSkgLyA3KVxuXG4gIC8vIFJldHVybiBhcnJheSBvZiB5ZWFyIGFuZCB3ZWVrIG51bWJlclxuICByZXR1cm4gW2QuZ2V0VVRDRnVsbFllYXIoKSwgd2Vla05vXVxufSlcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG4vLyBhcnJheVxuZXhwb3J0IHsgZGVmYXVsdCBhcyBlcXVhbHNBcnJheSB9IGZyb20gJ2FycmF5L2VxdWFscydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNBcnJheSB9IGZyb20gJ2FycmF5L2lzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB0b0FycmF5IH0gZnJvbSAnYXJyYXkvdG8nXG5leHBvcnQgeyBkZWZhdWx0IGFzIHVuaW9uQXJyYXkgfSBmcm9tICdhcnJheS91bmlvbidcblxuLy8gYm9vbGVhblxuZXhwb3J0IHsgZGVmYXVsdCBhcyBpc0Jvb2xlYW4gfSBmcm9tICdib29sZWFuL2lzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBGIH0gZnJvbSAnYm9vbGVhbi9GJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUIH0gZnJvbSAnYm9vbGVhbi9UJ1xuXG4vLyBtb25hZHNcbmV4cG9ydCB7IGRlZmF1bHQgYXMgSnVzdCB9IGZyb20gJ21vbmFkcy9KdXN0J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBNYXliZSB9IGZyb20gJ21vbmFkcy9NYXliZSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTm90aGluZyB9IGZyb20gJ21vbmFkcy9Ob3RoaW5nJ1xuXG4vLyBudW1iZXJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNOdW1iZXIgfSBmcm9tICdudW1iZXIvaXMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlzTmFuIH0gZnJvbSAnbnVtYmVyL2lzTmFuJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhZGQgfSBmcm9tICdudW1iZXIvYWRkJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtdWx0aXBseSB9IGZyb20gJ251bWJlci9tdWx0aXBseSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZGl2aWRlIH0gZnJvbSAnbnVtYmVyL2RpdmlkZSdcblxuLy8gb2JqZWN0XG5leHBvcnQgeyBkZWZhdWx0IGFzIGVxdWFsc09iamVjdCB9IGZyb20gJ29iamVjdC9lcXVhbHMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlzT2JqZWN0IH0gZnJvbSAnb2JqZWN0L2lzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtZXJnZU9iamVjdCB9IGZyb20gJ29iamVjdC9tZXJnZSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgb21pdEZyb21PYmplY3QgfSBmcm9tICdvYmplY3Qvb21pdCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaGFzIH0gZnJvbSAnb2JqZWN0L2hhcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaGFzSW4gfSBmcm9tICdvYmplY3QvaGFzSW4nXG5leHBvcnQgeyBkZWZhdWx0IGFzIGtleXMgfSBmcm9tICdvYmplY3Qva2V5cydcbmV4cG9ydCB7IGRlZmF1bHQgYXMga2V5c0luIH0gZnJvbSAnb2JqZWN0L2tleXNJbidcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZmlsdGVyT2JqZWN0IH0gZnJvbSAnb2JqZWN0L2ZpbHRlcidcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZm9sZE9iamVjdCB9IGZyb20gJ29iamVjdC9mb2xkJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtYXBPYmplY3QgfSBmcm9tICdvYmplY3QvbWFwJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXRoIH0gZnJvbSAnb2JqZWN0L3BhdGgnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHBpY2sgfSBmcm9tICdvYmplY3QvcGljaydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcHJvcCB9IGZyb20gJ29iamVjdC9wcm9wJ1xuXG4vLyBzdHJpbmdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgY29uY2F0U3RyaW5nIH0gZnJvbSAnc3RyaW5nL2NvbmNhdCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZm9ybWF0U3RyaW5nIH0gZnJvbSAnc3RyaW5nL2Zvcm1hdFN0cmluZydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNTdHJpbmcgfSBmcm9tICdzdHJpbmcvaXMnXG5cbi8vIG1hcFxuZXhwb3J0IHsgZGVmYXVsdCBhcyBtYXBGaWx0ZXIgfSBmcm9tICdtYXAvZmlsdGVyJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBpc01hcCB9IGZyb20gJ21hcC9pcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbWFwS2V5cyB9IGZyb20gJ21hcC9rZXlzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBtYXBNYXAgfSBmcm9tICdtYXAvbWFwJ1xuXG4vLyB1dGlsXG5leHBvcnQgeyBkZWZhdWx0IGFzIGFkanVzdCB9IGZyb20gJ3V0aWwvYWRqdXN0J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhZGp1c3RXaXRoIH0gZnJvbSAndXRpbC9hZGp1c3RXaXRoJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhbGwgfSBmcm9tICd1dGlsL2FsbCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYWxsUGFzcyB9IGZyb20gJ3V0aWwvYWxsUGFzcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYWx3YXlzIH0gZnJvbSAndXRpbC9hbHdheXMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGFuZCB9IGZyb20gJ3V0aWwvYW5kJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBhbnkgfSBmcm9tICd1dGlsL2FueSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYW55UGFzcyB9IGZyb20gJ3V0aWwvYW55UGFzcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYXAgfSBmcm9tICd1dGlsL2FwJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjb21wb3NlIH0gZnJvbSAndXRpbC9jb21wb3NlJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjdXJyeSB9IGZyb20gJ3V0aWwvY3VycnknXG5leHBvcnQgeyBkZWZhdWx0IGFzIGRlZmF1bHRUbyB9IGZyb20gJ3V0aWwvZGVmYXVsdFRvJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBlbXB0eSB9IGZyb20gJ3V0aWwvZW1wdHknXG5leHBvcnQgeyBkZWZhdWx0IGFzIGVxdWFscyB9IGZyb20gJ3V0aWwvZXF1YWxzJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBleGlzdHMgfSBmcm9tICd1dGlsL2V4aXN0cydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZmluZEluZGV4IH0gZnJvbSAndXRpbC9maW5kSW5kZXgnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGZvbGQgfSBmcm9tICd1dGlsL2ZvbGQnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlkZW50aWNhbCB9IGZyb20gJ3V0aWwvaWRlbnRpY2FsJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBpZGVudGl0eSB9IGZyb20gJ3V0aWwvaWRlbnRpdHknXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlzIH0gZnJvbSAndXRpbC9pcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNFbXB0eSB9IGZyb20gJ3V0aWwvaXNFbXB0eSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbGlmdCB9IGZyb20gJ3V0aWwvbGlmdCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbWFwIH0gZnJvbSAndXRpbC9tYXAnXG5leHBvcnQgeyBkZWZhdWx0IGFzIG1heCB9IGZyb20gJ3V0aWwvbWF4J1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBub3QgfSBmcm9tICd1dGlsL25vdCdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgb3IgfSBmcm9tICd1dGlsL29yJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB0cnV0aHkgfSBmcm9tICd1dGlsL3RydXRoeSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdHlwZSB9IGZyb20gJ3V0aWwvdHlwZSdcbmV4cG9ydCB7IGRlZmF1bHQgYXMgemlwIH0gZnJvbSAndXRpbC96aXAnXG5leHBvcnQgeyBkZWZhdWx0IGFzIHppcFdpdGggfSBmcm9tICd1dGlsL3ppcFdpdGgnXG5cbi8vIGRhdGVcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZGlmZkRhdGUgfSBmcm9tICdkYXRlL2RpZmZEYXRlJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmb3JtYXREYXRlVGltZSB9IGZyb20gJ2RhdGUvZm9ybWF0RGF0ZVRpbWUnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGRhdGVJcyB9IGZyb20gJ2RhdGUvaXMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlzRnV0dXJlRGF0ZSB9IGZyb20gJ2RhdGUvaXNGdXR1cmVEYXRlJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBpc1ZhbGlkIH0gZnJvbSAnZGF0ZS9pc1ZhbGlkJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB0b0RheSB9IGZyb20gJ2RhdGUvdG9EYXknXG5leHBvcnQgeyBkZWZhdWx0IGFzIHRvSG91ciB9IGZyb20gJ2RhdGUvdG9Ib3VyJ1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB0b01pbnV0ZXMgfSBmcm9tICdkYXRlL3RvTWludXRlcydcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdG9TZWNvbmRzIH0gZnJvbSAnZGF0ZS90b1NlY29uZHMnXG5leHBvcnQgeyBkZWZhdWx0IGFzIGdldFdlZWsgfSBmcm9tICdkYXRlL2dldFdlZWsnXG4iLCIvKipcbiAqIEFsd2F5cyByZXR1cm5zIGEgZnVuY3Rpb24gd2l0aCBhIEZhbHNlIGJvb2xlYW5cbiAqXG4gKiBAZnVuY3Rpb24gRlxuICogQGRlc2NyaXB0aW9uIEFsd2F5cyByZXR1cm5zIGEgZnVuY3Rpb24gd2l0aCBhIEZhbHNlIGJvb2xlYW5cbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBwYXJhbSB7Kn0gYVxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiovXG5pbXBvcnQgYWx3YXlzIGZyb20gJy4uL3V0aWwvYWx3YXlzJ1xuXG5leHBvcnQgZGVmYXVsdCBhbHdheXMoZmFsc2UpXG4iLCIvKipcbiAqIEFsd2F5cyByZXR1cm5zIGEgZnVuY3Rpb24gd2l0aCBhIEZhbHNlIGJvb2xlYW5cbiAqXG4gKiBAZnVuY3Rpb24gVFxuICogQGRlc2NyaXB0aW9uIEFsd2F5cyByZXR1cm5zIGEgZnVuY3Rpb24gd2l0aCBhIEZhbHNlIGJvb2xlYW5cbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBwYXJhbSB7Kn0gYVxuICogQHJldHVybiB7RnVuY3Rpb259XG4gKiovXG5pbXBvcnQgYWx3YXlzIGZyb20gJy4uL3V0aWwvYWx3YXlzJ1xuXG5leHBvcnQgZGVmYXVsdCBhbHdheXModHJ1ZSlcbiIsImltcG9ydCBKdXN0IGZyb20gJy4vSnVzdCdcbmltcG9ydCBOb3RoaW5nIGZyb20gJy4vTm90aGluZydcblxubGV0IE1heWJlID0gZnVuY3Rpb24gKHZhbCkge1xuICB0aGlzLl9fdmFsdWUgPSB2YWxcbn1cblxuTWF5YmUub2YgPSBmdW5jdGlvbiAodmFsKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBNYXliZSkgcmV0dXJuIHZhbFxuICBpZiAodGhpcyBpbnN0YW5jZW9mIE1heWJlKSB7XG4gICAgdGhpcy5fX3ZhbHVlID0gdmFsXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuICByZXR1cm4gbmV3IE1heWJlKHZhbClcbn1cblxuTWF5YmUucHJvdG90eXBlLmdldE9yRWxzZSA9IGZ1bmN0aW9uIChuKSB7XG4gIHJldHVybiB0aGlzLmlzTm90aGluZygpID8gbiA6IHRoaXMuX192YWx1ZVxufVxuXG5NYXliZS5wcm90b3R5cGUubWFwID0gZnVuY3Rpb24gKGYpIHtcbiAgaWYgKHRoaXMuaXNOb3RoaW5nKCkpIHtcbiAgICByZXR1cm4gTWF5YmUub2YobnVsbClcbiAgfVxuICByZXR1cm4gTWF5YmUub2YoZih0aGlzLl9fdmFsdWUpKVxufVxuXG5NYXliZS5wcm90b3R5cGUuYXAgPSBmdW5jdGlvbiAobSkge1xuICByZXR1cm4gbS5tYXAodGhpcy5fX3ZhbHVlKVxufVxuXG5NYXliZS5wcm90b3R5cGUuaXNOb3RoaW5nID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gKHRoaXMuX192YWx1ZSA9PSBudWxsKVxufVxuXG5NYXliZS5wcm90b3R5cGUuaXNKdXN0ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIXRoaXMuaXNOb3RoaW5nKClcbn1cblxuTWF5YmUucHJvdG90eXBlLk5vdGhpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBuZXcgTm90aGluZygpXG59XG5cbk1heWJlLnByb3RvdHlwZS5KdXN0ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gbmV3IEp1c3QodGhpcy5fdmFsdWUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1heWJlXG4iLCIvKipcbiAqIFJldHVybnMgdGhlIHN1bSBvZiB0aGUgMiBhcmd1bWVudHNcbiAqXG4gKiBAZnVuY3Rpb24gYWRkXG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyB0aGUgc3VtIG9mIHRoZSAyIGFyZ3VtZW50c1xuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyBOdW1iZXIgLT4gTnVtYmVyIC0+IE51bWJlclxuICogQHBhcmFtIHtOdW1iZXJ9IGFcbiAqIEBwYXJhbSB7TnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYWRkIChhLCBiKSB7XG4gIHJldHVybiArYSArICtiXG59KVxuIiwiLyoqXG4gKiBSZXR1cm5zIHRoZSBwcm9kdWN0IG9mIHRoZSAyIGFyZ3VtZW50c1xuICpcbiAqIEBmdW5jdGlvblxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyBOdW1iZXIgLT4gTnVtYmVyIC0+IE51bWJlclxuICogQHBhcmFtIHtOdW1iZXJ9IGFcbiAqIEBwYXJhbSB7TnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gbXVsdGlwbHkgKGEsIGIpIHtcbiAgcmV0dXJuICthICogK2Jcbn0pXG4iLCIvKipcbiAqXG4gKlxuICogQGZ1bmN0aW9uIGRpdmlkZVxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdGhlIGRpdmlzaW9uIG9mIHRoZSAyIGFyZ3VtZW50c1xuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyBOdW1iZXIgLT4gTnVtYmVyIC0+IE51bWJlclxuICogQHBhcmFtIHtOdW1iZXJ9IGFcbiAqIEBwYXJhbSB7TnVtYmVyfSBiXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gZGl2aWRlIChhLCBiKSB7XG4gIHJldHVybiArYSAvICtiXG59KVxuIiwiLyoqXG5cbiAqIGVxdWFsc1xuICogY2hlY2tzIGZvciBlcXVhbGl0eVxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBpZGVudGljYWwgZnJvbSAnLi4vdXRpbC9pZGVudGljYWwnXG5pbXBvcnQgaXNPYmplY3QgZnJvbSAnLi4vb2JqZWN0L2lzJ1xuaW1wb3J0IGlzQXJyYXkgZnJvbSAnLi4vYXJyYXkvaXMnXG5pbXBvcnQgdW5pb24gZnJvbSAnLi4vYXJyYXkvdW5pb24nXG5cbmNvbnN0IG1lcmdlID0gY3VycnkoKG9iakwsIG9ialIpID0+IHtcbiAgbGV0IHJlc3VsdCA9IE9iamVjdC5hc3NpZ24oe30sIG9iakwpXG5cbiAgaWYgKGlkZW50aWNhbChvYmpMLCBvYmpSKSkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBvYmpMKVxuICB9XG4gIGZvciAobGV0IGtleSBpbiBvYmpSKSB7XG4gICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqUiwga2V5KSkge1xuICAgICAgY29udGludWVcbiAgICB9XG4gICAgY29uc3Qgb2xkVmFsdWUgPSBvYmpSW2tleV1cbiAgICBjb25zdCBuZXdWYWx1ZSA9IG9iakxba2V5XVxuXG4gICAgaWYgKGlzT2JqZWN0KG9sZFZhbHVlKSAmJiBpc09iamVjdChuZXdWYWx1ZSkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2Uob2xkVmFsdWUsIG5ld1ZhbHVlKVxuICAgIH0gZWxzZSBpZiAoaXNBcnJheShuZXdWYWx1ZSkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdW5pb24obmV3VmFsdWUsIG9sZFZhbHVlKVxuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IG9sZFZhbHVlIC8vIFRPRE86IHRoaXMgaXMgYSByZWZlcmVuY2UsIHNob3VsZCBiZSBjbG9uZVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59KVxuXG5leHBvcnQgZGVmYXVsdCBtZXJnZVxuIiwiLyoqXG5cbiAqIGVxdWFsc1xuICogY2hlY2tzIGZvciBlcXVhbGl0eVxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoKG9iaiwgbmFtZXMpID0+IHtcbiAgbGV0IHJlc3VsdCA9IHt9XG5cbiAgT2JqZWN0LmtleXMob2JqKS5maWx0ZXIoKGtleSkgPT4ge1xuICAgIHJldHVybiBuYW1lcy5pbmRleE9mKGtleSkgPT09IC0xXG4gIH0pLmZvckVhY2goKGtleSkgPT4ge1xuICAgIHJlc3VsdFtrZXldID0gb2JqW2tleV1cbiAgfSlcbiAgcmV0dXJuIHJlc3VsdFxufSlcbiIsIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGFuIG9iamVjdCBoYXMgdGhlIHByb3BlcnR5XG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIHtTdHJpbmd9IC0+IHtPYmplY3R9IC0+IEJvb2xlYW5cbiAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICoqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGhhcyAocHJvcCwgb2JqKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKVxufSlcbiIsIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGFuIG9iamVjdCBoYXMgdGhlIHByb3BlcnR5LCBldmVuIGlmIGl0IGlzIGluaGVyaXRlZFxuICpcbiAqIEBmdW5jdGlvblxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyB7U3RyaW5nfSAtPiB7T2JqZWN0fSAtPiBCb29sZWFuXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvcFxuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBoYXNJbiAocHJvcCwgb2JqKSB7XG4gIHJldHVybiBwcm9wIGluIG9ialxufSlcbiIsIi8qKlxuICogUmV0dXJucyBhbGwgdGhlIGtleXMgb2YgYW4gb2JqZWN0IGFzIGFuIEFycmF5XG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIGEgLT4gW2JdXG4gKiBAcGFyYW0ge09iamVjdH1cbiAqIEByZXR1cm4ge0FycmF5fVxuICoqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIGtleXMgKGEpIHtcbiAgY29uc3QgciA9IFtdXG4gIGZvciAoY29uc3QgayBpbiBhKSB7XG4gICAgci5wdXNoKGspXG4gIH1cbiAgcmV0dXJuIHJcbn0pXG4iLCIvKipcbiAqIEBmdW5jdGlvbiBvYmplY3RGaWx0ZXJcbiAqIEBwcml2YXRlXG4gKlxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcbmltcG9ydCBrZXlzIGZyb20gJy4va2V5cydcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gb2JqZWN0RmlsdGVyIChmbiwgbykge1xuICBsZXQgciA9IHt9XG4gIGNvbnN0IGsgPSBrZXlzKG8pXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgay5sZW5ndGg7IGkrKykge1xuICAgIGlmIChmbihvW2tbaV1dKSkgcltrW2ldXSA9IG9ba1tpXV1cbiAgfVxuICByZXR1cm4gclxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIHBhdGhcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIHBhdGggKHBhdGgsIG9iaikge1xuICBsZXQgdmFsID0gb2JqXG4gIGxldCBpZHggPSAwXG4gIGxldCBwXG4gIHdoaWxlIChpZHggPCBwYXRoLmxlbmd0aCkge1xuICAgIGlmICh2YWwgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHAgPSBwYXRoW2lkeF1cbiAgICB2YWwgPSBOdW1iZXIuaXNJbnRlZ2VyKHApXG4gICAgICA/IHAgPCAwID8gdmFsW3ZhbC5sZW5ndGggKyBwXSA6IHZhbFtwXVxuICAgICAgOiB2YWxbcF1cbiAgICBpZHggKz0gMVxuICB9XG4gIHJldHVybiB2YWxcbn0pXG4vLyBsZXQgciA9IG9ialxuLy8gZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4vLyAgIGlmIChyID09IG51bGwpIHJldHVybiB1bmRlZmluZWRcbi8vICAgciA9IHJbcGF0aFtpXV1cbi8vIH1cbi8vIHJldHVybiByXG4vLyB9KVxuIiwiLyoqXG4gKiBAZnVuY3Rpb24gcGlja1xuICogQGRlc2NyaXB0aW9uIHJldHVybnMgYSBuZXcgYmplY3Qgd2l0aCBvbmx5IHRoZSBwcm9wcyB0aGF0IGFyZSBwcm92aWRlZFxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgLSBBcnJheSBvZiBwcm9wZXJ0eSBuYW1lc1xuICogQHBhcmFtIHtPYmplY3R9IG9iaiAtIFRoZSBvYmplY3QgZnJvbSB3aGljaCB0byB0YWtlIHRoZSBwcm9wZXJ0aWVzXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBwaWNrIChwcm9wcywgb2JqKSB7XG4gIGNvbnN0IHIgPSB7fVxuICBsZXQgaSA9IDBcbiAgd2hpbGUgKGkgPCBwcm9wcy5sZW5ndGgpIHtcbiAgICBpZiAocHJvcHNbaV0gaW4gb2JqKSB7XG4gICAgICByW3Byb3BzW2ldXSA9IG9ialtwcm9wc1tpXV1cbiAgICB9XG4gICAgaSArPSAxXG4gIH1cbiAgcmV0dXJuIHJcbn0pXG4iLCIvKipcbiAqIEBmdW5jdGlvbiBwcm9wXG4gKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBwcm9wIChwLCBvYmopIHtcbiAgcmV0dXJuIG9ialtwXVxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uXG4gKi9cblxuZXhwb3J0IGNvbnN0IGNvbmNhdCA9IGZ1bmN0aW9uIF9jb25jYXQgKHNlcGFyYXRvciA9ICcsJykgeyAvLyB1c2UgZnVuY3Rpb24oKSwgYXJyb3cgZnVuY3Rpb24gZG9lc24ndCBiaW5kIGFyZ3VtZW50c1xuICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKS5qb2luKHNlcGFyYXRvcilcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29uY2F0XG4iLCIvKipcbiAqIENyZWF0ZWQgYnkgZGllcmlja3gubGVuIG9uIDI2LzAzLzIwMTcuXG4gKi9cbmltcG9ydCB0b0FycmF5IGZyb20gJy4uL2FycmF5L3RvJ1xuaW1wb3J0IG5vdCBmcm9tICcuLi91dGlsL25vdCdcbmltcG9ydCBpcyBmcm9tICcuLi91dGlsL2lzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXRTdHJpbmcgKHN0cikgeyAvLyB1c2UgZnVuY3Rpb24oKSwgYXJyb3cgZnVuY3Rpb24gZG9lc24ndCBiaW5kIGFyZ3VtZW50c1xuICBsZXQgYXJncyA9IHRvQXJyYXkoYXJndW1lbnRzKVxuXG4gIGFyZ3Muc2hpZnQoKVxuICByZXR1cm4gc3RyLnJlcGxhY2UoL3soXFxkKyl9L2csIChtYXRjaCwgaWR4KSA9PiB7XG4gICAgcmV0dXJuIG5vdChpcygnVW5kZWZpbmVkJywgYXJnc1tpZHhdKSkgPyBhcmdzW2lkeF0gOiBtYXRjaFxuICB9KVxufVxuIiwiLyoqXG4gKiBAZnVuY3Rpb24gbWFwRmlsdGVyXG4gKiBAcHJpdmF0ZVxuICpcbiAqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5cbmV4cG9ydCBkZWZhdWx0IGN1cnJ5KGZ1bmN0aW9uIG1hcEZpbHRlciAoZm4sIG0pIHtcbiAgbGV0IHIgPSBuZXcgTWFwKClcblxuICBsZXQgaXQgPSBtLmVudHJpZXMoKVxuICBsZXQgcmVzdWx0ID0gaXQubmV4dCgpXG5cbiAgd2hpbGUgKCFyZXN1bHQuZG9uZSkge1xuICAgIGNvbnN0IGsgPSByZXN1bHQudmFsdWVbMF1cbiAgICBjb25zdCB2ID0gcmVzdWx0LnZhbHVlWzFdXG4gICAgaWYgKGZuKGssIHYpKSByLnNldChrLCB2KVxuICAgIHJlc3VsdCA9IGl0Lm5leHQoKVxuICB9XG5cbiAgLy8gTGltaXRlZCBicm93c2VyIHN1cHBvcnRcbiAgLy8gbS5mb3JFYWNoKCh2LCBrKSA9PiB7XG4gIC8vICAgaWYgKGZuKGssIHYpKSByLnNldChrLCB2KVxuICAvLyB9KVxuXG4gIC8vIGJhYmVsIHRyYW5zcGlsZSBpc3N1ZXNcbiAgLy8gZm9yIChjb25zdCBbaywgdl0gb2YgbS5lbnRyaWVzKCkpIHtcbiAgLy9cbiAgLy8gfVxuICByZXR1cm4gclxufSlcbiIsIi8qKlxuICogQ3JlYXRlZCBieSBkaWVyaWNreC5sZW4gb24gMDEvMDQvMjAxNy5cbiAqL1xuaW1wb3J0IGlzIGZyb20gJy4uL3V0aWwvaXMnXG5cbmV4cG9ydCBkZWZhdWx0IGlzKCdNYXAnKVxuIiwiLyoqXG4gKiBSZXR1cm5zIHRoZSBvd24ga2V5cyBvZiBhbiBNYXAgYXMgYW4gQXJyYXlcbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBzaWcgYSAtPiBbYl1cbiAqIEBwYXJhbSB7T2JqZWN0fVxuICogQHJldHVybiB7QXJyYXl9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24ga2V5cyAoYSkge1xuICByZXR1cm4gYS5rZXlzKClcbn0pXG4iLCIvKipcbiAqIE1vZGlmaWVzIGFuIGl0ZW0gaW4gYW4gYXJyYXkgdXNpbmcgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uXG4gKlxuICogQGZ1bmN0aW9uIGFkanVzdFxuICogQGRlc2NyaXB0aW9uIE1vZGlmaWVzIGFuIGl0ZW0gaW4gYW4gYXJyYXkgdXNpbmcgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIChhIC0+IGEpIC0+IG51bSAtPiBbYV0gLT4gW2FdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIHRvIG1vZGlmeSB0aGUgaXRlbSBhdCB0aGUgc3BlY2lmaWVkIGluZGV4XG4gKiBAcGFyYW0ge051bWJlcn0gaSAtIFRoZSBpbmRleCBhdCB3aGljaCB0byBtb2RpZnkgdGhlIGFycmF5LCBhY2NlcHRzIHBvc3RpdGl2ZSBhbmQgbmVnYXRpdmUgaW5kZXhlc1xuICogQHBhcmFtIHtJdGVyYWJsZX0gW2FdIC0gQXJyYXkgd2l0aCBkYXRhXG4gKiBAcmV0dXJuIHtJdGVyYWJsZX0gW2FdXG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYWRqdXN0IChmbiwgaSwgYSkge1xuICBjb25zdCByID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSlcbiAgY29uc3QgaWR4ID0gaSA8IDAgPyByLmxlbmd0aCArIGkgOiBpXG4gIGlmICghYVtpZHhdKSByZXR1cm4gclxuICByW2lkeF0gPSBmbihyW2lkeF0pXG4gIHJldHVybiByXG59KVxuIiwiLyoqXG4gKiBNb2RpZmllcyBhbiBpdGVtIGluIGFuIGFycmF5IHVzaW5nIHRoZSBwcm92aWRlZCBmdW5jdGlvblxuICpcbiAqIEBmdW5jdGlvbiBhZGp1c3RXaXRoXG4gKiBAZGVzY3JpcHRpb24gTW9kaWZpZXMgYW4gaXRlbSBpbiBhbiBhcnJheSB1c2luZyB0aGUgcHJvdmlkZWQgZnVuY3Rpb25cbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBzaWcgKGEgLT4gYSkgLT4gKChhIC0+IFthXSkgLT4gW2FdIC0+IG51bSkgLT4gW2FdIC0+IFthXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gLSB0byBtb2RpZnkgdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZCAtIFRoZSBwcmVkaWNhdGUgdGhhdCByZXR1cm5zIHRoZSBpbmRleGVzIGlmIGZvdW5kXG4gKiBAcGFyYW0ge0l0ZXJhYmxlfSBbYV1cbiAqIEByZXR1cm4ge0l0ZXJhYmxlfSBbYV1cbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuaW1wb3J0IG1hcCBmcm9tICcuLi91dGlsL21hcCdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYWRqdXN0V2l0aCAoZm4sIHByZWQsIGEpIHtcbiAgY29uc3QgX2ZuID0geCA9PiB7XG4gICAgaWYgKHByZWQoeCkpIHtcbiAgICAgIHJldHVybiBmbih4KVxuICAgIH1cbiAgICByZXR1cm4geFxuICB9XG4gIHJldHVybiBtYXAoX2ZuLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKSlcbn0pXG4iLCIvKipcbiAqIE1hcHMgb3ZlciBhIHN0cmluZyBhbmQgYXBwbGllcyBhIGZ1bmN0aW9uXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIChjdXJyZW50VmFsdWUsIGlkeCwgW2FdKSAtPiBbYV0gLT4gW2FdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYlxuICogQHBhcmFtIHtJdGVyYWJsZX0gYVxuICogQHJldHVybiB7SXRlcmFibGV9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gbWFwIChjYiwgYSkge1xuICBsZXQgaSA9IC0xXG4gIGNvbnN0IGwgPSBhLmxlbmd0aFxuICBsZXQgciA9ICcnXG4gIHdoaWxlICgrK2kgPCBsKSB7XG4gICAgciArPSBjYihhLmNoYXJBdChpKSwgaSwgYSlcbiAgfVxuICByZXR1cm4gclxufSlcbiIsIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGFsbCBpdGVtcyBpbiB0aGUgZW51bWVyYWJsZSBtYXRjaCB0aGUgcHJlZGljYXRlXG4gKlxuICogQGZ1bmN0aW9uIGFsbFxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdHJ1ZSBpZiBhbGwgaXRlbXMgaW4gdGhlIGVudW1lcmFibGUgbWF0Y2ggdGhlIHByZWRpY2F0ZVxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyAoYSAtPiBCb29sZWFuKSAtPiBbYV0gLT4gQm9vbGVhblxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2JcbiAqIEBwYXJhbSB7SXRlcmFibGV9IGFcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYWxsIChjYiwgYSkge1xuICBsZXQgcmVzID0gdHJ1ZVxuICBmb3IgKGxldCBpIGluIGEpIHtcbiAgICBpZiAoIWNiKGFbaV0pKSB7XG4gICAgICByZXMgPSBmYWxzZVxuICAgICAgYnJlYWtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc1xufSlcbiIsIi8qKlxuICogQXBwbGllcyBhIGxpc3Qgb2YgcHJlZGljYXRlcyB0byB0aGUgZGF0YSBhbmQgcmV0dXJucyB0cnVlIGlmIGFsbCBwYXNzXG4gKlxuICogQGZ1bmN0aW9uIGFsbFBhc3NcbiAqIEBkZXNjcmlwdGlvbiBBcHBsaWVzIGEgbGlzdCBvZiBwcmVkaWNhdGVzIHRvIHRoZSBkYXRhIGFuZCByZXR1cm5zIHRydWUgaWYgYWxsIHBhc3NcbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBzaWcgWygqLi4uIC0+IEJvb2xlYW4pXSAtPiAoKi4uLiAtPiBCb29sZWFuXG4gKiBAcGFyYW0ge0FycmF5fSBwcmVkaWNhdGVzIEFuIGFycmF5IG9mIHByZWRpY2F0ZXMgdG8gY2hlY2tcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBUaGUgY29tYmluZWQgcHJlZGljYXRlXG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYWxsUGFzcyAoY2JzLCBhKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY2JzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFjYnNbaV0oYSkpIHJldHVybiBmYWxzZVxuICB9XG4gIHJldHVybiB0cnVlXG59KVxuIiwiLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYXQgbGVhc3Qgb24gb2YgdGhlIGl0ZW1zIGluIHRoZSBlbnVtZXJhYmxlIG1hdGNoIHRoZSBwcmVkaWNhdGVcbiAqXG4gKiBAZnVuY3Rpb24gYW55XG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyB0cnVlIGlmIGF0IGxlYXN0IG9uIG9mIHRoZSBpdGVtcyBpbiB0aGUgZW51bWVyYWJsZSBtYXRjaCB0aGUgcHJlZGljYXRlXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIChUT0RPKVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2JcbiAqIEBwYXJhbSB7SXRlcmFibGV9IGFcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gYW55IChjYiwgYSkge1xuICBsZXQgcmVzID0gZmFsc2VcbiAgZm9yIChsZXQgaSBpbiBhKSB7XG4gICAgaWYgKGNiKGFbaV0pKSB7XG4gICAgICByZXMgPSB0cnVlXG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzXG59KVxuIiwiLyoqXG4gKiBBcHBsaWVzIGEgbGlzdCBvZiBwcmVkaWNhdGVzIHRvIHRoZSBkYXRhIGFuZCByZXR1cm5zIHRydWUgaWYgb25lIHBhc3Nlc1xuICpcbiAqIEBmdW5jdGlvbiBhbnlQYXNzXG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnIFsoKi4uLiAtPiBCb29sZWFuKV0gLT4gKCouLi4pIC0+IEJvb2xlYW5cbiAqIEBwYXJhbSB7QXJyYXl9IHByZWRpY2F0ZXMgQW4gYXJyYXkgb2YgcHJlZGljYXRlcyB0byBjaGVja1xuICogQHJldHVybiB7RnVuY3Rpb259IFRoZSBjb21iaW5lZCBwcmVkaWNhdGVcbiAqKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBhbnlQYXNzIChjYnMsIGEpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjYnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoY2JzW2ldKGEpKSByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufSlcbiIsIi8qKlxuICogQGZ1bmN0aW9uIGNvbXBvc2VcbiAqIEByZXR1cm5zIHtmdW5jdGlvbigpOiAqfVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wb3NlICgpIHtcbiAgbGV0IGZ1bnMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpXG5cbiAgcmV0dXJuIGZ1bmN0aW9uIF9jb21wb3NlICgpIHtcbiAgICBsZXQgaW5pdCA9IGZ1bnNbZnVucy5sZW5ndGggLSAxXVxuICAgIGxldCByZXN1bHQgPSBbaW5pdC5hcHBseShpbml0LCBhcmd1bWVudHMpXVxuICAgIGxldCBpID0gZnVucy5sZW5ndGggLSAyXG5cbiAgICBmb3IgKGk7IGkgPj0gMDsgLS1pKSB7XG4gICAgICBjb25zdCBmdW4gPSBmdW5zW2ldXG5cbiAgICAgIHJlc3VsdCA9IFtmdW4uYXBwbHkoZnVuLCByZXN1bHQpXVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0WzBdXG4gIH1cbn07XG4iLCIvKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhbGwgaXRlbXMgaW4gdGhlIGVudW1lcmFibGUgbWF0Y2ggdGhlIHByZWRpY2F0ZVxuICpcbiAqIEBmdW5jdGlvbiBkZWZhdWx0VG9cbiAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIHRydWUgaWYgYWxsIGl0ZW1zIGluIHRoZSBlbnVtZXJhYmxlIG1hdGNoIHRoZSBwcmVkaWNhdGVcbiAqIEBzaW5jZSB2MS4wLjJcbiAqIEBzaWcgYSAtPiBiIC0+IGEgfCBiXG4gKiBAcGFyYW0ge2F9IGRlZmF1bHQgVGhlIGRlZmF1bHQgdmFsdWUuXG4gKiBAcGFyYW0ge2J9IHZhbCBgdmFsYCB3aWxsIGJlIHJldHVybmVkIGluc3RlYWQgb2YgYGRlZmF1bHRgIHVubGVzcyBgdmFsYCBpcyBgbnVsbGAsIGB1bmRlZmluZWRgIG9yIGBOYU5gLlxuICogQHJldHVybiB7Kn0gVGhlIHNlY29uZCB2YWx1ZSBpZiBpdCBpcyBub3QgYG51bGxgLCBgdW5kZWZpbmVkYCBvciBgTmFOYCwgb3RoZXJ3aXNlIHRoZSBkZWZhdWx0IHZhbHVlXG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi4vdXRpbC9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gZGVmYXVsdFRvIChkLCB2KSB7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiB2ID09IG51bGwgfHwgdiAhPT0gdiA/IGQgOiB2XG59KVxuIiwiLyoqXG4gKiBGaW5kIHRoZSBpbmRleCBtYXRjaGluZyBhIHByZWRpY2F0ZVxuICpcbiAqIEBmdW5jdGlvbiBmaW5kSW5kZXhcbiAqIEBkZXNjcmlwdGlvbiBGaW5kIHRoZSBpbmRleCBtYXRjaGluZyBhIHByZWRpY2F0ZVxuICogQHNpbmNlIHYxLjAuMlxuICogQHNpZyAoYSAtPiBib29sZWFuKSAtPiBbYV0gLT4gbnVtYmVyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBQcmVkaWNhdGUgZnVuY3Rpb24gcmV0dXJucyBhIGJvb2xlYW5cbiAqIEBwYXJhbSB7QXJyYXl9IEFuIGFycmF5IGxpa2Ugb2JqZWN0XG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKiovXG5cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBmaW5kSW5kZXggKGZuLCBhKSB7XG4gIGxldCBpID0gMFxuICBjb25zdCBsID0gYS5sZW5ndGhcbiAgd2hpbGUgKGkgPCBsKSB7XG4gICAgaWYgKGZuKGFbaV0pKSB7XG4gICAgICByZXR1cm4gaVxuICAgIH1cbiAgICBpICs9IDFcbiAgfVxuICByZXR1cm4gLTFcbn0pXG4iLCIvKipcblxuICogQGZ1bmN0aW9uIGlkZW50aXR5XG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyB0aGUgdmFsdWUgc3VwcGxpZWQgdG8gdGhlIGZ1bmN0aW9uXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWRlbnRpdHkgKHgpIHtcbiAgcmV0dXJuIHhcbn07XG4iLCIvKipcblxuICogQGZ1bmN0aW9uIGVtcHR5XG4gKiBAZGVzY3JpcHRpb24gUmV0dXJucyB0aGUgZW1wdHkgZXF1aXZhbGVudCBvZiB0aGUgZmlyc3QgYXJndW1lbnRcbiAqL1xuaW1wb3J0IGVtcHR5IGZyb20gJy4vZW1wdHknXG5pbXBvcnQgZXhpc3RzIGZyb20gJy4vZXhpc3RzJ1xuaW1wb3J0IGVxdWFscyBmcm9tICcuL2VxdWFscydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNFbXB0eSAoeCkge1xuICByZXR1cm4gZXhpc3RzKHgpICYmIGVxdWFscyh4LCBlbXB0eSh4KSlcbn07XG4iLCIvKipcbiAqIFwibGlmdHNcIiBhIGZ1bmN0aW9uIG9mIGFyaXR5ID4gMSBzbyB0aGF0IGl0IG1heSBcIm1hcCBvdmVyXCIgYSBsaXN0LCBGdW5jdGlvblxuICpcbiAqIEBmdW5jdGlvbiBsaWZ0XG4gKiBAc2luY2UgdjEuMC4yXG4gKiBAc2lnICgqLi4uIC0+ICopIC0+IChbKl0uLi4gLT4gWypdKVxuICoqL1xuaW1wb3J0IGN1cnJ5IGZyb20gJy4uL3V0aWwvY3VycnknXG5pbXBvcnQgY3VycnkxIGZyb20gJy4uL19wcml2YXRlL2N1cnJ5MSdcbmltcG9ydCBmb2xkIGZyb20gJy4uL3V0aWwvZm9sZCdcbmltcG9ydCBhcCBmcm9tICcuLi91dGlsL2FwJ1xuaW1wb3J0IG1hcCBmcm9tICcuLi91dGlsL21hcCdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gbGlmdCAoZm4pIHtcbiAgY29uc3QgbGlmdGVkID0gY3VycnkxKGN1cnJ5KGZuKSlcbiAgcmV0dXJuIGN1cnJ5KGZ1bmN0aW9uIF9saWZ0ICgpIHtcbiAgICByZXR1cm4gZm9sZChhcCwgbWFwKGxpZnRlZCwgYXJndW1lbnRzWzBdKSwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSlcbiAgfSlcbn0pXG4iLCIvKipcbiAqIFJldHVybnMgdGhlIGxhcmdlc3Qgb2YgdGhlIDIgYXJndW1lbnRzIHByb3ZpZGVkXG4gKlxuICogQGZ1bmN0aW9uIG1heFxuICogQHNpbmNlIHYxLjAuMlxuICogQHBhcmFtIHsqfSBhXG4gKiBAcGFyYW0geyp9IGJcbiAqIEByZXR1cm4geyp9XG4gKiovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi9jdXJyeSdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gbWF4IChhLCBiKSB7XG4gIHJldHVybiBiID4gYSA/IGIgOiBhXG59KVxuIiwiLyoqXG4gKiBAZnVuY3Rpb24gdHJ1dGh5XG4gKi9cbmltcG9ydCBleGlzdHMgZnJvbSAnLi9leGlzdHMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRydXRoeSAoeCkge1xuICByZXR1cm4gKHggIT09IGZhbHNlKSAmJiBleGlzdHMoeClcbn07XG4iLCIvKipcblxuICogemlwXG4gKlxuICogQGZ1bmN0aW9uIHppcFxuICovXG5pbXBvcnQgY3VycnkgZnJvbSAnLi9jdXJyeSdcbmltcG9ydCB6aXBXaXRoIGZyb20gJy4vemlwV2l0aCdcblxuZXhwb3J0IGRlZmF1bHQgY3VycnkoZnVuY3Rpb24gemlwIChhLCBiKSB7XG4gIHJldHVybiB6aXBXaXRoKGZ1bmN0aW9uIF96aXBXaXRoICh4LCB5KSB7IHJldHVybiBbeCwgeV0gfSwgYSwgYilcbn0pXG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG4vKipcbiAqIENyZWF0ZWQgYnkgZGllcmlja3gubGVuIG9uIDIwLzAxLzIwMTcuXG4gKi9cbmltcG9ydCBjdXJyeSBmcm9tICcuLi91dGlsL2N1cnJ5J1xuaW1wb3J0IGlzVmFsaWREYXRlIGZyb20gJy4vaXNWYWxpZCdcbmltcG9ydCBnZXRXZWVrIGZyb20gJy4vZ2V0V2VlaydcbmltcG9ydCB7IFdFRUtEQVlTIH0gZnJvbSAnLi4vY29uc3RhbnRzL1dFRUtEQVlTJ1xuaW1wb3J0IHsgTU9OVEhTIH0gZnJvbSAnLi4vY29uc3RhbnRzL01PTlRIUydcbmltcG9ydCB7IERBVEVfVE9LRU5TIH0gZnJvbSAnLi4vY29uc3RhbnRzL0RBVEVfVE9LRU5TJ1xuXG4vLyB1dGlsaXR5IGZ1bmN0aW9ucyBmb3IgdGhlIGRhdGUgZm9ybWF0dGluZ1xuY29uc3QgWkVST1MgPSAnMDAwMDAwMDAnXG5jb25zdCBsYXN0TiA9IGN1cnJ5KChuLCBzdHIpID0+IHN0ci5zdWJzdHJpbmcoc3RyLmxlbmd0aCAtIG4sIHN0ci5sZW5ndGgpKVxuY29uc3QgZmlyc3ROID0gY3VycnkoKG4sIHN0cikgPT4gc3RyLnN1YnN0cmluZygwLCBuKSlcbmNvbnN0IGZpbGwgPSBjdXJyeSgoZGlnaXRzLCBuKSA9PiBsYXN0TihkaWdpdHMsIFpFUk9TICsgbikpXG5cbmNvbnN0IG1vZENlaWxpbmcgPSAobW9kLCB2YWwpID0+IHZhbCAlIG1vZCB8fCBtb2RcblxuLy8gdG9rZW5zIG1hcCB0byBnZXQgcGFydHMgb2YgdGhlIGRhdGUgL3RpbWVcbmNvbnN0IHRva2VucyA9IHtcbiAgWVlZWTogZCA9PiBmaWxsKDQsIGQuZ2V0RnVsbFllYXIoKSksXG4gIFlZOiBkID0+IGxhc3ROKDIsIGZpbGwoNCwgZC5nZXRGdWxsWWVhcigpKSksXG4gIE1NTU06IGQgPT4gTU9OVEhTW2QuZ2V0TW9udGgoKV0sXG4gIE1NTTogZCA9PiBmaXJzdE4oMywgTU9OVEhTW2QuZ2V0TW9udGgoKV0pLFxuICBNTTogZCA9PiBmaWxsKDIsIGQuZ2V0TW9udGgoKSArIDEpLFxuICBNOiBkID0+IGQuZ2V0TW9udGgoKSArIDEsXG4gIHc6IGQgPT4gZ2V0V2VlayhkKSxcbiAgd3c6IGQgPT4gZmlsbCgyLCBnZXRXZWVrKGQpKSxcbiAgREQ6IGQgPT4gZmlsbCgyLCBkLmdldERhdGUoKSksXG4gIEQ6IGQgPT4gZC5nZXREYXRlKCksXG4gIGRkZGQ6IGQgPT4gV0VFS0RBWVNbZC5nZXREYXkoKV0sXG4gIGRkZDogZCA9PiBmaXJzdE4oMywgV0VFS0RBWVNbZC5nZXREYXkoKV0pLFxuICBkZDogZCA9PiBmaXJzdE4oMiwgV0VFS0RBWVNbZC5nZXREYXkoKV0pLFxuICBkOiBkID0+IGQuZ2V0RGF5KCksXG4gIEhIOiBkID0+IGZpbGwoMiwgZC5nZXRIb3VycygpKSxcbiAgSDogZCA9PiBkLmdldEhvdXJzKCksXG4gIGhoOiBkID0+IGZpbGwoMiwgbW9kQ2VpbGluZygxMiwgZC5nZXRIb3VycygpKSksXG4gIGg6IGQgPT4gbW9kQ2VpbGluZygxMiwgZC5nZXRIb3VycygpKSxcbiAgbW06IGQgPT4gZmlsbCgyLCBkLmdldE1pbnV0ZXMoKSksXG4gIG06IGQgPT4gZC5nZXRNaW51dGVzKCksXG4gIHNzOiBkID0+IGZpbGwoMiwgZC5nZXRTZWNvbmRzKCkpLFxuICBzOiBkID0+IGQuZ2V0U2Vjb25kcygpLFxuICBBOiBkID0+IGQuZ2V0SG91cnMoKSA+IDExID8gJ1BNJyA6ICdBTScsXG4gIGE6IGQgPT4gZC5nZXRIb3VycygpID4gMTEgPyAncG0nIDogJ2FtJyxcbiAgU1NTOiBkID0+IGZpbGwoMywgZC5nZXRNaWxsaXNlY29uZHMoKSksXG4gIFNTOiBkID0+IGZpcnN0TigyLCBmaWxsKDMsIGQuZ2V0TWlsbGlzZWNvbmRzKCkpKSxcbiAgUzogZCA9PiBmaXJzdE4oMSwgZmlsbCgzLCBkLmdldE1pbGxpc2Vjb25kcygpKSksXG4gIFE6IGQgPT4gTWF0aC5jZWlsKChkLmdldE1vbnRoKCkgKyAxKSAvIDMpXG59XG5cbi8vIG1hcCB0aGlzIGZ1bmN0aW9uIHRvIGdldCB0aGUgYWN0dWFsIHRpbWUvZGF0ZSB2YWx1ZSBmb3IgZWFjaCB0b2tlblxuY29uc3Qgc3dhcFRva2VuV2l0aFZhbHVlID0gY3VycnkoKGRhdGUsIHRva2VuKSA9PiB7XG4gIHJldHVybiB0b2tlbnNbdG9rZW5dID8gdG9rZW5zW3Rva2VuXShkYXRlKSA6IHRva2VuXG59KVxuXG4vKipcbiAqIEBmdW5jdGlvbiBmb3JtYXREYXRlVGltZVxuICogQGRlc2NyaXB0aW9uIEZvcm1hdHMgYSBkYXRlIG9iamVjdCB1c2luZyBhIGZvcm1hdCBzdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBmb3JtYXQgLSBGb3JtYXQgZGF0ZSBzdHJpbmdcbiAqIEBwYXJhbSB7ZGF0ZX0gZGF0ZSAtIERhdGUgb2JqZWN0IHRvIGZvcm1hdFxuICogQHJldHVybiB7c3RyaW5nfVxuICogQGV4YW1wbGVcbiAqXG4gKiBjb25zdCBmb3JtYXR0ZWREYXRlID0gZm9ybWF0RGF0ZVRpbWUoJ0RELU1NLVlZWVknLCBuZXcgRGF0ZSgnMTk5OS0xMi0zMScpKVxuICogY29uc29sZS5sb2coZm9ybWF0dGVkRGF0ZSkgLy8gMzEtMTItMTk5OVxuICovXG5leHBvcnQgZGVmYXVsdCBjdXJyeShmdW5jdGlvbiBmb3JtYXREYXRlVGltZSAoZm9ybWF0LCBkYXRlKSB7XG4gIC8vIGNoZWNrIGZvciB2YWxpZCBkYXRlXG4gIGlmICghaXNWYWxpZERhdGUoZGF0ZSkpIHJldHVybiAnSW52YWxpZCBEYXRlJyAvLyByZXR1cm4gc3RyaW5nXG4gIHJldHVybiBmb3JtYXQubWF0Y2goREFURV9UT0tFTlMpLm1hcChzd2FwVG9rZW5XaXRoVmFsdWUoZGF0ZSkpLmpvaW4oJycpIC8vIHJldHVybiBqb2luZWQgc3RyaW5nXG59KVxuIiwiLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3QgV0VFS0RBWVMgPSBbXG4gICdTdW5kYXknLFxuICAnTW9uZGF5JyxcbiAgJ1R1ZXNkYXknLFxuICAnV2VkbmVzZGF5JyxcbiAgJ1RodXJzZGF5JyxcbiAgJ0ZyaWRheScsXG4gICdTYXR1cmRheSdcbl1cbiIsIi8qKlxuICogQHByaXZhdGVcbiAqL1xuXG5leHBvcnQgY29uc3QgTU9OVEhTID0gW1xuICAnSmFudWFyeScsXG4gICdGZWJydWFyeScsXG4gICdNYXJjaCcsXG4gICdBcHJpbCcsXG4gICdNYXknLFxuICAnSnVuZScsXG4gICdKdWx5JyxcbiAgJ0F1Z3VzdCcsXG4gICdTZXB0ZW1iZXInLFxuICAnT2N0b2JlcicsXG4gICdOb3ZlbWJlcicsXG4gICdEZWNlbWJlcidcbl1cbiIsIi8qKlxuICogQHByaXZhdGVcbiAqL1xuXG4vLyBkYXRlL3RpbWUgcmVnZXhcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2VsZXNzLWVzY2FwZVxuZXhwb3J0IGNvbnN0IERBVEVfVE9LRU5TID0gLyhcXFtbXlxcW10qXFxdKXwoXFxcXCk/KE1vfE1NP00/TT98RG98REREb3xERD9EP0Q/fGRkZD9kP3xkbz98d1tvfHddP3xXW298V10/fFF8WVlZWVlZfFlZWVlZfFlZWVl8WVl8Z2coZ2dnPyk/fEdHKEdHRz8pP3xlfEV8YXxBfGhoP3xISD98bW0/fHNzP3xTezEsOX18eHxYfHp6P3xaWj98LikvZ1xuIiwiLyoqXG4gKiBDcmVhdGVkIGJ5IGRpZXJpY2t4LmxlbiBvbiAwOS8wMy8yMDE3LlxuICovXG5pbXBvcnQgZGlmZkRhdGUgZnJvbSAnLi9kaWZmRGF0ZSdcblxuZXhwb3J0IGRlZmF1bHQgKGQpID0+IHtcbiAgcmV0dXJuIGRpZmZEYXRlKG5ldyBEYXRlKCkpKGQpIDwgMFxufVxuIiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgZGllcmlja3gubGVuIG9uIDI2LzAzLzIwMTcuXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCAoZCkgPT4gZCAvIDg2NDAwMDAwIC8vIDI0KjYwKjYwKjEwMDAgPSA4NjQwMDAwMFxyXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSBkaWVyaWNreC5sZW4gb24gMjYvMDMvMjAxNy5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IChkKSA9PiBkIC8gMzYwMDAwMCAvLyA2MCo2MCoxMDAwID0gMzYwMDAwMFxyXG4iLCIvKipcclxuICogQ3JlYXRlZCBieSBkaWVyaWNreC5sZW4gb24gMjYvMDMvMjAxNy5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IChkKSA9PiBkIC8gNjAwMDAgLy8gNjAqMTAwMCA9IDYwMDAwXHJcbiIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IGRpZXJpY2t4LmxlbiBvbiAyNi8wMy8yMDE3LlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgKGQpID0+IGQgLyAxMDAwXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=